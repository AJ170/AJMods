//Made By AJ170 If You Want To Use Any Code Please Ask I Will More Than Likly Let You Contact Me @AJ170_iOS_King (Twitter) or kik.me/AJ170.iPA (KiK)

function gameLoop(){
    var thisLoop = new Date;
    fps = 1000 / (thisLoop - lastLoop);
    lastLoop = thisLoop;
}

/* credit to alpha hack team for fps and special creative inv */
/***********************/
function toDirectionalVector(vector, yaw, pitch) {

    vector[0] = Math.cos(yaw) * Math.cos(pitch);
    vector[1] = Math.sin(pitch);
    vector[2] = Math.sin(yaw) * Math.cos(pitch);
}

ModPE.setItem(431,"blaze_rod",0,"§4§l§oM§ba§5g§2i§ec");

function attackHook(attacker, victim)
{
destroyerid=431; if(Player.getCarriedItem()==destroyerid&&Player.isPlayer(victim)==false){
Entity.setFireTicks(victim,5);
Entity.setHealth(victim, 3);
curticks=100;
curent=victim;
}

if(switched43)
{
Entity.setHealth(victim, 1);
Entity.setFireTicks(victim, 3);
}

if(switched42) {
    toDirectionalVector(mobDir, (getYaw() + 90) * DEG_TO_RAD, getPitch() * DEG_TO_RAD * -1);
    setVelX(victim, 5 * mobDir[0]);
    setVelZ(victim, 5 * mobDir[2]);
}

}

function getRandomColor(){
var a=Object.keys(ChatColor);
return ChatColor[a[Math.floor(Math.random()*(a.length+1))]]
}


//Update Code//
var version="1.8";
var checkForUpdate=false;
var updateWindow=false;
var newUpdate;
var updateMod; 
var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get(); 
 
 function checkVersion() {
    var r  = new java.lang.Runnable() {
        run: function() {
            try {
                var urls= new java.net.URL("https://raw.githubusercontent.com/AJ170/AJMods/master/MasterVersion.txt");
                var check = urls.openConnection();
                check.setRequestMethod("GET");
                check.setDoOutput(true);
                check.connect();
                check.getContentLength();
                var script = check.getInputStream();
                var typeb = java.lang.reflect.Array.newInstance(java.lang.Byte.TYPE, 1024);
                var byteCount = 0; 
                var checkedVersion;
                while((byteCount = script.read(typeb)) != -1) { 
                    checkedVersion = new java.lang.String(typeb, 0, byteCount);               
                }
                newUpdate = checkedVersion;
                if(version+"\n" != checkedVersion) {
                    clientMessage("AJModsMCPE" + newUpdate);
                    updateWindow=true;
                }
                else if(version+"\n"==checkedVersion){
                clientMessage("There aren't any updates right now");
                }
            }
            catch(err) {
                clientMessage("Update check failed ");
                if(err=="JavaException: java.net.UnknownHostException: raw.githubusercontent.com") {
                                clientMessage("Cannot connect to the internet.");
                            }
                            else {
                                clientMessage("  Error: \n" + err);
                            } 
            }
        }
    }
    var threadt = new java.lang.Thread(r);
    threadt.start();
}
function updateVersion() {
    try {
        var upd = new android.app.AlertDialog.Builder(ctx);
        upd.setTitle("AJMods has an update!");
        upd.setMessage("AJMods has an update!\nDo you want to update it now?\nCurrent version: " + version + "\nNew version: " + newUpdate + "\nRestart after updating!");
        upd.setNegativeButton("Nope", new android.content.DialogInterface.OnClickListener() {
            onClick: function(par1) {
            dialog.dismiss(); 
   }
        });
        upd.setPositiveButton("Update!", new android.content.DialogInterface.OnClickListener() {
            onClick: function(par1) {
                var ru  = new java.lang.Runnable() {
                    run: function() {
                        try {
                            var urls = new java.net.URL("https://raw.githubusercontent.com/AJ170/AJMods/master/AJModsMCPE");
                            var check = urls.openConnection();
                            check.setRequestMethod("GET");
                            check.setDoOutput(true);
                            check.connect();
                            check.getContentLength();
                            var script = check.getInputStream();
                            var typeb = java.lang.reflect.Array.newInstance(java.lang.Byte.TYPE, 1024);
                            var byteCount = 0;
                            while((byteCount = script.read(typeb)) != -1) { 
                                updateMod += new java.lang.String(typeb, 0, byteCount);               
                            }
                            var modpeFolder = ctx.getDir("modscripts", 0);
                            var modpeFile = new java.io.File(modpeFolder, "AJModsMCPE.js");
                            var update = new java.io.PrintWriter(modpeFile);
                            update.write(updateMod);
                            update.flush();
                            update.close();
                             
                            try {
                                net.zhuoweizhang.mcpelauncher.ScriptManager.setEnabled(modpeFile, false);
                                net.zhuoweizhang.mcpelauncher.ScriptManager.setEnabled(modpeFile, true);
                                clientMessage("AJMods Mod has been downloaded and enabled!");
                                   
                            }
                            catch(err) {
                                clientMessage(" Error: \n" + err);
                            }
                        }
                        catch(err) {
                            clientMessage(" Error: \n" + err);
                        }
                    }
                }
                var threadt = new java.lang.Thread(ru);
                threadt.start();
            }
        });
        var dialog = upd.create();
        dialog.show() 
    }
    catch(err) {
        clientMessage(" Error: \n" + err);
    }
}
function modTick() {
 var E=Player.getPointedEntity();
 var hp=Entity.getHealth(E);
 var HP = " ";

 for(hp;hp>0;hp--) {
   HP=HP+"♥";
 }

 Entity.setNameTag(E,ChatColor.RED+HP);

if(switched25) {
var PlayerX =parseInt(Player.getX());
var PlayerY =parseInt(Player.getY());
var PlayerZ =parseInt(Player.getZ());
if(getTile(PlayerX+1, PlayerY, PlayerZ) !=0 
|| getTile(PlayerX-1, PlayerY, PlayerZ) !=0 
|| getTile(PlayerX, PlayerY, PlayerZ+1) !=0 
|| getTile(PlayerX, PlayerY, PlayerZ-1) !=0) {
if(Entity.getVelY(getPlayerEnt()) <= 0.6) {
setVelY(getPlayerEnt(), 0.6);
}
}
}

if(switched26)
{
var px = getPlayerX();
var py = getPlayerY();
var pz = getPlayerZ();
ModPE.showTipMessage("\n\n\n\n" + "X: " + parseInt(px) + " Y: " + parseInt(py) + " Z: " + parseInt(pz));
}

if(switched27)
	{

	if(Level.getTile(getPlayerX(), getPlayerY()-2, getPlayerZ())==8 || Level.getTile(getPlayerX(), getPlayerY()-2, getPlayerZ())==9 || Level.getTile(getPlayerX(), getPlayerY()-2, getPlayerZ())==10 || Level.getTile(getPlayerX(), getPlayerY()-2, getPlayerZ())==11) {
			setVelY(getPlayerEnt(), 0);
		}
	}

	/* if(switched28) {
		if(Entity.getVelY(getPlayerEnt())< -0.1) {
			setVelY(getPlayerEnt(),-0.5);
		}
		if(Entity.getVelY(getPlayerEnt())< 0.35 && Entity.getVelY(getPlayerEnt())> 0.2 && can==1 && canGetHP==1) {
			setVelY(getPlayerEnt(), 0.6);
			can = 2;
			HP = Entity.getHealth(getPlayerEnt());
			canGetHP = 0;
		}
		if(Entity.getVelY(getPlayerEnt())>gravity && can==2) {
			Player.setHealth(HP);
			canGetHP = 1;
			can = 0;
		}
		if(Entity.getVelY(getPlayerEnt())==gravity && can==0) {
			Player.setHealth(HP);
			canGetHP = 1;
			can = 1;
		}
	} */

if(switched29)
	{
		if(s==1)
		{
			Xpos=getPlayerX();
			Zpos=getPlayerZ();
			s=s+1;
		}
		else 
		{
			if(s==3)
			{
				s=1;
				Xdiff=getPlayerX()-Xpos;
				Zdiff=getPlayerZ()-Zpos;
				setVelX(getPlayerEnt(), Xdiff);
				setVelZ(getPlayerEnt(), Zdiff);
				Xdiff=0;
				Zdiff=0;
			}
		}
		if(s!=1)
		{
			s=s+1;
		}
	}

	if(switched30)
	{
		if(Entity.getVelY(Player.getEntity()) <= -0.5 && !isFalling)
		{
			// Player is falling
			if(Level.getGameMode() == 0)
				Entity.addEffect(Player.getEntity(), MobEffect.jump, 999999, 254, false, false);

			isFalling = true;
		}

		if(isFalling)
		{
			if(Level.getTile(Math.floor(Player.getX()), Math.floor(Player.getY()) - 2, Math.floor(Player.getZ())) > 0)
			{
				if(Entity.getVelY(Player.getEntity()) == VEL_Y_OFFSET)
				{

					isFalling = false;

					if(Level.getGameMode() == 0)
					{
						// Entity.removeEffect(entity, id) doesn't remove particles of the effect https://github.com/zhuowei/MCPELauncher/issues/241

						//Entity.removeEffect(Player.getEntity(), MobEffect.jump);
						Entity.removeAllEffects(Player.getEntity());
					}
				}
			}
		}
	}

if(switched32)
{
if(Player.getCarriedItem()==261)
{
ModPE.setFov(20);
}
if(Player.getCarriedItem()!=261)
{
ModPE.resetFov();
}
}

if(switched31)
{
Player.setHealth(40);
}

	if(switched33) {
		var player = getPlayerEnt();
		var y = Math.floor(Entity.getYaw(player));
		var p = Math.floor(Entity.getPitch(player));
		Entity.setRot(player, y+3, p);
	}

if(switched34)
{
Player.setHunger(20);
}

	if(switched35)
{		Level.destroyBlock(Player.getPointedBlockX(), Player.getPointedBlockY(), Player.getPointedBlockZ())
}

if(switched36)
{
Level.setTime(0);
}



if(switched37)
{
        var px = getPlayerX();
var py = getPlayerY();
var pz = getPlayerZ();
ModPE.showTipMessage("X: " + parseInt(px) + " Y: " + parseInt(py) + " Z: " + parseInt(pz) + " Gamemode: " + Level.getGameMode() + "." + " Time: " + Level.getTime() + "." + " \nRain/Lightning: " + Math.round(Level.getRainLevel()) + "/" + Math.round(Level.getLightningLevel()) + ". " + "Name: " + Player.getName(Player.getEntity()) + "\nItem ID: " + Player.getCarriedItem() + ":" + Player.getCarriedItemData() + "." + " Biome: " + Level.getBiomeName() + "." + " V" + ModPE.getMinecraftVersion() + "\nWorld Name: " + Level.getWorldName() + "\nArea Brightness: " + Level.getBrightness(getPlayerX(), getPlayerY(), getPlayerZ()) + ". " + "Pointed Block Id : " + Player.getPointedBlockId() + ". " + "Player Health: " + Entity.getHealth(getPlayerEnt())+"/20");
}

if(curticks>0)
{
curticks=curticks-1;
Entity.setVelX(curent,Math.random()*2-1);
Entity.setVelY(curent,Math.random()*2-1);
Entity.setVelZ(curent,Math.random()*2-1);
}

if(switched38)
{
 Player.getZ();      Level.addParticle(ParticleType.enchantmenttable, getPlayerX(), getPlayerY(), getPlayerZ(), 0, 0, 0, 150);
        var x = 
Player.getX();
        var y = Player.getY();
        var z = Player.getZ();      Level.addParticle(ParticleType.heart, x, y, z, 0, 0, 0, 1);
}

if(switched39)
{
setVelY(Player.getEntity(), -0.1)
}

if(switched40)
{
if(Player.getSelectedSlotId() != 7) {
			Player.setSelectedSlotId(Player.getSelectedSlotId() + 1);
		} else {
			Player.setSelectedSlotId(0)
}
   }

if(switched41)
{
ModPE.showTipMessage("\n\n\n" + Player.getName(Player.getEntity()) + "'s Health: " + Entity.getHealth(getPlayerEnt())+"/20");
}

if(toggled1)
{
ModPE.showTipMessage("\n\n\nCurrent FPS: " + Math.round(fps));
gameLoop()
}

if(jumpHeight!="1" && Entity.getVelY(getPlayerEnt())>0 && jump==0){
		setVelY(getPlayerEnt(), jumpVel);
		jump = 1;
	}
	else if(getTile(getPlayerX(), getPlayerY()-2, getPlayerZ())!=0&&jump==1){
		jump = 0;
	}

if(switched45==true){


Server.sendChat(getRandomColor() + "You Like My Hax?");

}


if(switched44==true){
Server.sendChat(getRandomColor() + "❤");
}

if(switched44==true){
Server.sendChat(getRandomColor() + "❤");
}

if(switched44==true){
Server.sendChat(getRandomColor() + "❤");
}

if(switched46)
{
ModPE.showTipMessage(getRandomColor() + "" + Player.getName(Player.getEntity()) + "");
}

if(switched47==true){
clientMessage(" ");
}

if(switched47==true){
clientMessage(" ");
}

if(switched47==true){
clientMessage(" ");
}

if(checkForUpdate==false) {
        print("Checking for an update");
        ctx.runOnUiThread(new java.lang.Runnable({
            run: function() {
                try {
                    checkVersion();
                }
                catch(err) {
                    clientMessage(" Error: \n"+err);
                }
            }
        }));
        checkForUpdate=true;
    }
    if(updateWindow) {
        ctx.runOnUiThread(new java.lang.Runnable({
            run: function() {
                try {
                    updateVersion();
                }
                catch(err) {
                    clientMessage(" Error: \n" + err);
                }
            }
        }));
        updateWindow=false;
    } 
 }
//END OF UPDATE CODE// CREDITS TO @Coder_G for making this Update code//



Block.defineBlock(255,"§aReinforced §3Planks", [["door",3]],false,false,false)
Block.setDestroyTime(255,1.5)
Item.addCraftRecipe(255,4,0,[5,5,0,280,4,0,0,0,0])

Block.defineBlock(253,"§9Command §4Block", [["command_block",0]],false,false,false)
Block.setDestroyTime(253,-1)

Block.defineBlock(254,"§6Polished §bTile", [["daylight_detector_side",0]],false,false,false)
Block.setDestroyTime(254,2)

		
function useItem (x, y, z,itemId, blockId, side)//useItem Code goes here
{
    if(itemId == 280)//If the item used is a stick
    {
        var custom =  Level.spawnMob(x,y+1,z,11,"mob/char.png"); //spawns mob, variable "custom", and uses the skin char
        Entity.setRenderType(custom,3); //changes the rendertype of the mob custom to a player
        clientMessage("§a§oYou have now Spawned a alien"); //clientmessage sent if item is a stick
    }
}//https://github.com/Connor4898/ModPE-Scripts/wiki/ModPE-Script-Templates


var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
///////
//////////functions

function mbd2(){
MBBamenu2.dismiss();
MBamenu2.dismiss();
}

function mb2(){
MBBaMenu2();
MBaMenu2();
}

//////////////////message board lay top

 function MBaMenu2(){
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    ctx.runOnUiThread(new java.lang.Runnable({ run: function(){
        try{
            var MBaLayout = new android.widget.LinearLayout(ctx);
            var MBaScroll = new android.widget.ScrollView(ctx);
            var MBaLayout1 = new android.widget.LinearLayout(ctx);
            MBaLayout.setOrientation(1);
            MBaLayout1.setOrientation(1);

            MBaScroll.addView(MBaLayout);
            MBaLayout1.addView(MBaScroll);
	                  

var scrollText = new android.widget.TextView(ctx);
scrollText.setText("         Welcome "+ Player.getName(Player.getEntity()) +" To AJModsMCPE!    Change Log: Upgraded The Change Log! Camera Is In Glitched Blocks kit! Added Spam 1, Spam 2, Magical Wand, Color Name, And Mute The Chat! Added A Watermark To The Game! New Amazing Layout! Added Area Brightness And Point Block ID To Real Time Display!");
scrollText.setTextSize(15);                                                                                  scrollText.setTextColor(android.graphics.Color.CYAN);

 
scrollText.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));

scrollText.setEllipsize(android.text.TextUtils.TruncateAt.MARQUEE);

scrollText.setMarqueeRepeatLimit(-1);
//
scrollText.setSingleLine();
scrollText.setHorizontallyScrolling(true);
scrollText.setSelected(true);
////////////
MBaLayout.addView(scrollText);



var cT31 = new android.widget.Button(ctx);
                cT31.setText("Dismiss");
				cT31.setTextColor(android.graphics.Color.GREEN);
 var display = new android.util.DisplayMetrics();
ctx.getWindowManager().getDefaultDisplay().getMetrics(display);
cT31.setLayoutParams(new android.widget.LinearLayout.LayoutParams(display.heightPixels / 4, display.heightPixels / 5));
cT31.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
mbd2();


				}
}); 
MBaLayout.addView(cT31);

textview = android.widget.TextView(ctx);            textview.setText("If You Can Not Hit Dismiss Please Relaunch Block Launcher"); 
textview.setTextSize(20);                                                                                  textview.setTextColor(android.graphics.Color.WHITE);
textview.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));       

MBaLayout.addView(textview);
	                   MBamenu2 = new android.widget.PopupWindow(MBaLayout1, ctx.getWindowManager().getDefaultDisplay().getWidth(), ctx.getWindowManager().getDefaultDisplay().getHeight()/1);
MBamenu2.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(125,99,0,0))); 
            MBamenu2.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.LEFT | android.view.Gravity.TOP , 0, 0);
        }catch(error){
            print("Nha R FOUND " + error+"ERRORS");
        }
    }}));
}

/////////////////mb b

 function MBBaMenu2(){
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    ctx.runOnUiThread(new java.lang.Runnable({ run: function(){
        try{
            var MBBaLayout = new android.widget.LinearLayout(ctx);
            var MBBaScroll = new android.widget.ScrollView(ctx);
            var MBBaLayout1 = new android.widget.LinearLayout(ctx);
            MBBaLayout.setOrientation(1);
            MBBaLayout1.setOrientation(1);

            MBBaScroll.addView(MBBaLayout);
            MBBaLayout1.addView(MBBaScroll);
	                  
	                  MBBamenu2 = new android.widget.PopupWindow(MBBaLayout1, ctx.getWindowManager().getDefaultDisplay().getWidth(), ctx.getWindowManager().getDefaultDisplay().getHeight()/1);
MBBamenu2.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(125,0,0,125))); 
            MBBamenu2.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.LEFT | android.view.Gravity.TOP , 0, 0);
        }catch(error){
            print("Nha R FOUND " + error+"ERRORS");
        }
    }}));
}




//////////functions

function mbd(){
MBBamenu.dismiss();
MBamenu.dismiss();
}

function mb(){
MBBaMenu();
MBaMenu();
}

//////////////////message board lay top

 function MBaMenu(){
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    ctx.runOnUiThread(new java.lang.Runnable({ run: function(){
        try{
            var MBaLayout = new android.widget.LinearLayout(ctx);
            var MBaScroll = new android.widget.ScrollView(ctx);
            var MBaLayout1 = new android.widget.LinearLayout(ctx);
            MBaLayout.setOrientation(1);
            MBaLayout1.setOrientation(1);

            MBaScroll.addView(MBaLayout);
            MBaLayout1.addView(MBaScroll);
	                  

var scrollText = new android.widget.TextView(ctx);
scrollText.setText("AJModsMCPE");
scrollText.setTextSize(8);                                                                                  scrollText.setTextColor(android.graphics.Color.CYAN);

 
scrollText.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));

scrollText.setEllipsize(android.text.TextUtils.TruncateAt.MARQUEE);

scrollText.setMarqueeRepeatLimit(-1);
//
scrollText.setSingleLine();
scrollText.setHorizontallyScrolling(true);
scrollText.setSelected(true);
////////////
MBaLayout.addView(scrollText);


	                  MBamenu = new android.widget.PopupWindow(MBaLayout1, ctx.getWindowManager().getDefaultDisplay().getWidth(), ctx.getWindowManager().getDefaultDisplay().getHeight()/25);
MBamenu.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT)); 
            MBamenu.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.CENTER | android.view.Gravity.TOP , 50, 0);
        }catch(error){
            print("Nha R FOUND " + error+"ERRORS");
        }
    }}));
}

/////////////////mb b

 function MBBaMenu(){
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    ctx.runOnUiThread(new java.lang.Runnable({ run: function(){
        try{
            var MBBaLayout = new android.widget.LinearLayout(ctx);
            var MBBaScroll = new android.widget.ScrollView(ctx);
            var MBBaLayout1 = new android.widget.LinearLayout(ctx);
            MBBaLayout.setOrientation(1);
            MBBaLayout1.setOrientation(1);

            MBBaScroll.addView(MBBaLayout);
            MBBaLayout1.addView(MBBaScroll);
	                  
	                  MBBamenu = new android.widget.PopupWindow(MBBaLayout1, ctx.getWindowManager().getDefaultDisplay().getWidth(), ctx.getWindowManager().getDefaultDisplay().getHeight()/45);
MBBamenu.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT)); 
            MBBamenu.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.CENTER | android.view.Gravity.TOP , 50, 0);
        }catch(error){
            print("Nha R FOUND " + error+"ERRORS");
        }
    }}));
}
////////////

//////////extra menu

function mbd4(){
MBBamenu4.dismiss();
MBamenu4.dismiss();
}

function mb4(){
MBBaMenu4();
MBaMenu4();
}

//////////////////message board lay top

 function MBaMenu4(){
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    ctx.runOnUiThread(new java.lang.Runnable({ run: function(){
        try{
            var MBaLayout = new android.widget.LinearLayout(ctx);
            var MBaScroll = new android.widget.ScrollView(ctx);
            var MBaLayout1 = new android.widget.LinearLayout(ctx);
            MBaLayout.setOrientation(1);
            MBaLayout1.setOrientation(1);

            MBaScroll.addView(MBaLayout);
            MBaLayout1.addView(MBaScroll);
	                  

var scrollText = new android.widget.TextView(ctx);
scrollText.setText("⚠Extra Menu⚠");
scrollText.setTextSize(15);                                                                                  scrollText.setTextColor(android.graphics.Color.CYAN);

 
scrollText.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));

scrollText.setEllipsize(android.text.TextUtils.TruncateAt.MARQUEE);

scrollText.setMarqueeRepeatLimit(-1);
//
scrollText.setSingleLine();
scrollText.setHorizontallyScrolling(true);
scrollText.setSelected(true);
////////////
MBaLayout.addView(scrollText);



var cT33 = new android.widget.Button(ctx);
                cT33.setText("Dismiss");
				cT33.setTextColor(android.graphics.Color.BLACK);

cT33.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
mbd4();
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);

				}
}); 
MBaLayout.addView(cT33);

var cT34 = new android.widget.Button(ctx);
                cT34.setText("Main Mods");
				cT34.setTextColor(android.graphics.Color.GREEN);

cT34.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
mbd4()
mb5()
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);

				}
}); 
MBaLayout.addView(cT34);

var cT35 = new android.widget.Button(ctx);
                cT35.setText("Teleport Options");
				cT35.setTextColor(android.graphics.Color.BLACK);

cT35.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
mbd4()
mb6()
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);

				}
}); 
MBaLayout.addView(cT35);

var cT36 = new android.widget.Button(ctx);
                cT36.setText("World Options");
				cT36.setTextColor(android.graphics.Color.RED);

cT36.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
mbd4()
mb7()
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);

				}
}); 
MBaLayout.addView(cT36);

var cT37 = new android.widget.Button(ctx);
                cT37.setText("Fun Mods");
				cT37.setTextColor(android.graphics.Color.MAGENTA);

cT37.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
mbd4()
mb8()
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);

				}
}); 
MBaLayout.addView(cT37);

var cT38 = new android.widget.Button(ctx);
                cT38.setText("Player Info");
				cT38.setTextColor(android.graphics.Color.YELLOW);

cT38.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
mbd4()
mb9()
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);

				}
}); 
MBaLayout.addView(cT38);

var cT39 = new android.widget.Button(ctx);
                cT39.setText("Message Menu");
				cT39.setTextColor(android.graphics.Color.BLUE);

cT39.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
mbd4()
mb10()
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);

				}
}); 
MBaLayout.addView(cT39);

	                   MBamenu4 = new android.widget.PopupWindow(MBaLayout1, ctx.getWindowManager().getDefaultDisplay().getWidth(), ctx.getWindowManager().getDefaultDisplay().getHeight()/1);
MBamenu4.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(125,99,0,0))); 
            MBamenu4.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.LEFT | android.view.Gravity.TOP , 0, 0);
        }catch(error){
            print("AJMODSMCPE FOUND " + error+"ERRORS");
        }
    }}));
}

/////////////////mb b

 function MBBaMenu4(){
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    ctx.runOnUiThread(new java.lang.Runnable({ run: function(){
        try{
            var MBBaLayout = new android.widget.LinearLayout(ctx);
            var MBBaScroll = new android.widget.ScrollView(ctx);
            var MBBaLayout1 = new android.widget.LinearLayout(ctx);
            MBBaLayout.setOrientation(1);
            MBBaLayout1.setOrientation(1);

            MBBaScroll.addView(MBBaLayout);
            MBBaLayout1.addView(MBBaScroll);
	                  
	                  MBBamenu4 = new android.widget.PopupWindow(MBBaLayout1, ctx.getWindowManager().getDefaultDisplay().getWidth(), ctx.getWindowManager().getDefaultDisplay().getHeight()/1);
MBBamenu4.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(125,0,0,125))); 
            MBBamenu4.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.LEFT | android.view.Gravity.TOP , 0, 0);
        }catch(error){
            print("AJMODSMCPE FOUND " + error+"ERRORS");
        }
    }}));
}

//////////Credit

function mbd3(){
MBBamenu3.dismiss();
MBamenu3.dismiss();
}

function mb3(){
MBBaMenu3();
MBaMenu3();
}

//////////////////message board lay top

 function MBaMenu3(){
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    ctx.runOnUiThread(new java.lang.Runnable({ run: function(){
        try{
            var MBaLayout = new android.widget.LinearLayout(ctx);
            var MBaScroll = new android.widget.ScrollView(ctx);
            var MBaLayout1 = new android.widget.LinearLayout(ctx);
            MBaLayout.setOrientation(1);
            MBaLayout1.setOrientation(1);

            MBaScroll.addView(MBaLayout);
            MBaLayout1.addView(MBaScroll);
	                  

var scrollText = new android.widget.TextView(ctx);
scrollText.setText("Credit To @AgameR_Modder, Dr. NHA, @SchokiT, For Helping Me Make This Menu");
scrollText.setTextSize(15);                                                                                  scrollText.setTextColor(android.graphics.Color.CYAN);

 
scrollText.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));

scrollText.setEllipsize(android.text.TextUtils.TruncateAt.MARQUEE);

scrollText.setMarqueeRepeatLimit(-1);
//
scrollText.setSingleLine();
scrollText.setHorizontallyScrolling(true);
scrollText.setSelected(true);
////////////
MBaLayout.addView(scrollText);



var cT32 = new android.widget.Button(ctx);
                cT32.setText("Dismiss");
				cT32.setTextColor(android.graphics.Color.BLACK);

cT32.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
mbd3();
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);

				}
}); 
MBaLayout.addView(cT32);

	                   MBamenu3 = new android.widget.PopupWindow(MBaLayout1, ctx.getWindowManager().getDefaultDisplay().getWidth(), ctx.getWindowManager().getDefaultDisplay().getHeight()/1);
MBamenu3.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(125,99,0,0))); 
            MBamenu3.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.LEFT | android.view.Gravity.TOP , 0, 0);
        }catch(error){
            print("AJMODSMCPE FOUND " + error+"ERRORS");
        }
    }}));
}

/////////////////mb b

 function MBBaMenu3(){
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    ctx.runOnUiThread(new java.lang.Runnable({ run: function(){
        try{
            var MBBaLayout = new android.widget.LinearLayout(ctx);
            var MBBaScroll = new android.widget.ScrollView(ctx);
            var MBBaLayout1 = new android.widget.LinearLayout(ctx);
            MBBaLayout.setOrientation(1);
            MBBaLayout1.setOrientation(1);

            MBBaScroll.addView(MBBaLayout);
            MBBaLayout1.addView(MBBaScroll);
	                  
	                  MBBamenu3 = new android.widget.PopupWindow(MBBaLayout1, ctx.getWindowManager().getDefaultDisplay().getWidth(), ctx.getWindowManager().getDefaultDisplay().getHeight()/1);
MBBamenu3.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(125,0,0,125))); 
            MBBamenu3.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.LEFT | android.view.Gravity.TOP , 0, 0);
        }catch(error){
            print("AJMODSMCPE FOUND " + error+"ERRORS");
        }
    }}));
}

//////////Main Mods

function mbd5(){
MBBamenu5.dismiss();
MBamenu5.dismiss();
}

function mb5(){
MBBaMenu5();
MBaMenu5();
}

//////////////////message board lay top

 function MBaMenu5(){
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    ctx.runOnUiThread(new java.lang.Runnable({ run: function(){
        try{
            var MBaLayout = new android.widget.LinearLayout(ctx);
            var MBaScroll = new android.widget.ScrollView(ctx);
            var MBaLayout1 = new android.widget.LinearLayout(ctx);
            MBaLayout.setOrientation(1);
            MBaLayout1.setOrientation(1);

            MBaScroll.addView(MBaLayout);
            MBaLayout1.addView(MBaScroll);
	                  

var scrollText = new android.widget.TextView(ctx);
scrollText.setText("⚠Main Mods⚠");
scrollText.setTextSize(15);                                                                                  scrollText.setTextColor(android.graphics.Color.GREEN);

 
scrollText.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));

scrollText.setEllipsize(android.text.TextUtils.TruncateAt.MARQUEE);

scrollText.setMarqueeRepeatLimit(-1);
//
scrollText.setSingleLine();
scrollText.setHorizontallyScrolling(true);
scrollText.setSelected(true);
////////////
MBaLayout.addView(scrollText);



var cT41 = new android.widget.Button(ctx);
                cT41.setText("Back");
				cT41.setTextColor(android.graphics.Color.BLACK);

cT41.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
mbd5();
mb4()
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);

				}
}); 
MBaLayout.addView(cT41);

var cT1 = new android.widget.Button(ctx);
                cT1.setText("Creative");
				cT1.setTextColor(android.graphics.Color.GREEN);
                cT1.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
				
				Level.setGameMode(1);

	Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
				}
}); 
MBaLayout.addView(cT1);

var cT18 = new android.widget.Button(ctx);
                cT18.setText("Special Creative Invatory");
				cT18.setTextColor(android.graphics.Color.GREEN);
                cT18.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
for(var j = 0; j < 500; j++) {
Player.addItemCreativeInv(j, 5, 0);
}
if(j==500)
android.widget.Toast.makeText(ctx,new android.text.Html.fromHtml("<b><font color=#FF3200>WARNING: </b><font color=#000000>You Can Not Open The Invatory Prior To Turning This On, Otherwise Back Out And Rejoin"),0).show();
android.widget.Toast.makeText(ctx,new android.text.Html.fromHtml("<b><font color=#FF3200>WARNING: </b><font color=#000000>You Can Not Open The Invatory Prior To Turning This On, Otherwise Back Out And Rejoin"),0).show();
android.widget.Toast.makeText(ctx,new android.text.Html.fromHtml("<b><font color=#FF3200>WARNING: </b><font color=#000000>You Can Not Open The Invatory Prior To Turning This On, Otherwise Back Out And Rejoin"),0).show();

Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
				}
}); 
MBaLayout.addView(cT18);

var cT2 = new android.widget.Button(ctx);
                cT2.setText("Survival");
				cT2.setTextColor(android.graphics.Color.GREEN);
                cT2.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(viewarg){
Level.setGameMode(0);	Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
				}
}); 
MBaLayout.addView(cT2);

var cT3 = new android.widget.Button(ctx);
                cT3.setTextColor(android.graphics.Color.GREEN);
                cT3.setText("Add XP");
                cT3.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
				
				Player.setLevel(1000000);
				Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
				}
}); 
MBaLayout.addView(cT3);

var cT4 = new android.widget.Button(ctx);



var cT7 = new android.widget.Button(ctx);
                cT7.setText("Suicide");
				cT7.setTextColor(android.graphics.Color.GREEN);
                cT7.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){

Player.setHealth(0);
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
				}
}); 

MBaLayout.addView(cT7);

var cT8 = new android.widget.Button(ctx);
                cT8.setText("Restore Health");
				cT8.setTextColor(android.graphics.Color.GREEN);
                cT8.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){

Player.setHealth(20);
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
				}
}); 

MBaLayout.addView(cT8);

var cT24 = new android.widget.Button(ctx);
                cT24.setText("Clear Inventory");
				cT24.setTextColor(android.graphics.Color.GREEN);
cT24.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
            for(var i = 0; i < 50; i++)
       Player.clearInventorySlot(i);
    
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
				}
}); 
MBaLayout.addView(cT24);


	                   MBamenu5 = new android.widget.PopupWindow(MBaLayout1, ctx.getWindowManager().getDefaultDisplay().getWidth(), ctx.getWindowManager().getDefaultDisplay().getHeight()/1);
MBamenu5.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(125,99,0,0))); 
            MBamenu5.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.LEFT | android.view.Gravity.TOP , 0, 0);
        }catch(error){
            print("AJMODSMCPE FOUND " + error+"ERRORS");
        }
    }}));
}

/////////////////mb b

 function MBBaMenu5(){
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    ctx.runOnUiThread(new java.lang.Runnable({ run: function(){
        try{
            var MBBaLayout = new android.widget.LinearLayout(ctx);
            var MBBaScroll = new android.widget.ScrollView(ctx);
            var MBBaLayout1 = new android.widget.LinearLayout(ctx);
            MBBaLayout.setOrientation(1);
            MBBaLayout1.setOrientation(1);

            MBBaScroll.addView(MBBaLayout);
            MBBaLayout1.addView(MBBaScroll);
	                  
	                  MBBamenu5 = new android.widget.PopupWindow(MBBaLayout1, ctx.getWindowManager().getDefaultDisplay().getWidth(), ctx.getWindowManager().getDefaultDisplay().getHeight()/1);
MBBamenu5.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(125,0,0,125))); 
            MBBamenu5.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.LEFT | android.view.Gravity.TOP , 0, 0);
        }catch(error){
            print("AJMODSMCPE FOUND " + error+"ERRORS");
        }
    }}));
}

//////////world op

function mbd7(){
MBBamenu7.dismiss();
MBamenu7.dismiss();
}

function mb7(){
MBBaMenu7();
MBaMenu7();
}

//////////////////message board lay top

 function MBaMenu7(){
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    ctx.runOnUiThread(new java.lang.Runnable({ run: function(){
        try{
            var MBaLayout = new android.widget.LinearLayout(ctx);
            var MBaScroll = new android.widget.ScrollView(ctx);
            var MBaLayout1 = new android.widget.LinearLayout(ctx);
            MBaLayout.setOrientation(1);
            MBaLayout1.setOrientation(1);

            MBaScroll.addView(MBaLayout);
            MBaLayout1.addView(MBaScroll);
	                  

var scrollText = new android.widget.TextView(ctx);
scrollText.setText("⚠World Options⚠");
scrollText.setTextSize(15);                                                                                  scrollText.setTextColor(android.graphics.Color.RED);

 
scrollText.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));

scrollText.setEllipsize(android.text.TextUtils.TruncateAt.MARQUEE);

scrollText.setMarqueeRepeatLimit(-1);
//
scrollText.setSingleLine();
scrollText.setHorizontallyScrolling(true);
scrollText.setSelected(true);
////////////
MBaLayout.addView(scrollText);



var cT43 = new android.widget.Button(ctx);
                cT43.setText("Back");
				cT43.setTextColor(android.graphics.Color.BLACK);

cT43.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
mbd7();
mb4()
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);

				}
}); 
MBaLayout.addView(cT43);

var cT9 = new android.widget.Button(ctx);
                cT9.setText("Set Time To Day");
				cT9.setTextColor(android.graphics.Color.RED);
                cT9.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
Level.setTime(0);
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
				}
}); 

MBaLayout.addView(cT9);

var cT10 = new android.widget.Button(ctx);
                cT10.setText("Set Time To Night");
				cT10.setTextColor(android.graphics.Color.RED);
                cT10.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
Level.setTime(15000);
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
				}
}); 

MBaLayout.addView(cT10);

var cT11 = new android.widget.Button(ctx);
                cT11.setText("Clear Weather");
				cT11.setTextColor(android.graphics.Color.RED);
                cT11.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
Level.setRainLevel(0)
      Level.setLightningLevel(0);
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
				}
}); 

MBaLayout.addView(cT11);

var cT12 = new android.widget.Button(ctx);
                cT12.setText("Clear With Thunder");
				cT12.setTextColor(android.graphics.Color.RED);
                cT12.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
Level.setRainLevel(0)
      Level.setLightningLevel(1);
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
				}
}); 

MBaLayout.addView(cT12);

var cT13 = new android.widget.Button(ctx);
                cT13.setText("Rainy Weather");
				cT13.setTextColor(android.graphics.Color.RED);
                cT13.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
Level.setRainLevel(1);
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
				}
}); 

MBaLayout.addView(cT13);

var cT14 = new android.widget.Button(ctx);
                cT14.setText("Thunder Storm");
				cT14.setTextColor(android.graphics.Color.RED);
                cT14.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
Level.setRainLevel(1)
      Level.setLightningLevel(1);
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
				}
}); 

MBaLayout.addView(cT14);

	                   MBamenu7 = new android.widget.PopupWindow(MBaLayout1, ctx.getWindowManager().getDefaultDisplay().getWidth(), ctx.getWindowManager().getDefaultDisplay().getHeight()/1);
MBamenu7.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(125,99,0,0))); 
            MBamenu7.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.LEFT | android.view.Gravity.TOP , 0, 0);
        }catch(error){
            print("AJMODSMCPE FOUND " + error+"ERRORS");
        }
    }}));
}

/////////////////mb b

 function MBBaMenu7(){
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    ctx.runOnUiThread(new java.lang.Runnable({ run: function(){
        try{
            var MBBaLayout = new android.widget.LinearLayout(ctx);
            var MBBaScroll = new android.widget.ScrollView(ctx);
            var MBBaLayout1 = new android.widget.LinearLayout(ctx);
            MBBaLayout.setOrientation(1);
            MBBaLayout1.setOrientation(1);

            MBBaScroll.addView(MBBaLayout);
            MBBaLayout1.addView(MBBaScroll);
	                  
	                  MBBamenu7 = new android.widget.PopupWindow(MBBaLayout1, ctx.getWindowManager().getDefaultDisplay().getWidth(), ctx.getWindowManager().getDefaultDisplay().getHeight()/1);
MBBamenu7.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(125,0,0,125))); 
            MBBamenu7.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.LEFT | android.view.Gravity.TOP , 0, 0);
        }catch(error){
            print("AJMODSMCPE FOUND " + error+"ERRORS");
        }
    }}));
}

//////////tele op

function mbd6(){
MBBamenu6.dismiss();
MBamenu6.dismiss();
}

function mb6(){
MBBaMenu6();
MBaMenu6();
}

//////////////////message board lay top

 function MBaMenu6(){
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    ctx.runOnUiThread(new java.lang.Runnable({ run: function(){
        try{
            var MBaLayout = new android.widget.LinearLayout(ctx);
            var MBaScroll = new android.widget.ScrollView(ctx);
            var MBaLayout1 = new android.widget.LinearLayout(ctx);
            MBaLayout.setOrientation(1);
            MBaLayout1.setOrientation(1);

            MBaScroll.addView(MBaLayout);
            MBaLayout1.addView(MBaScroll);
	                  

var scrollText = new android.widget.TextView(ctx);
scrollText.setText("⚠Teleport Options⚠");
scrollText.setTextSize(15);                                                                                  scrollText.setTextColor(android.graphics.Color.BLACK);

 
scrollText.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));

scrollText.setEllipsize(android.text.TextUtils.TruncateAt.MARQUEE);

scrollText.setMarqueeRepeatLimit(-1);
//
scrollText.setSingleLine();
scrollText.setHorizontallyScrolling(true);
scrollText.setSelected(true);
////////////
MBaLayout.addView(scrollText);



var cT42 = new android.widget.Button(ctx);
                cT42.setText("Back");
				cT42.setTextColor(android.graphics.Color.BLACK);

cT42.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
mbd6();
mb4()
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);

				}
}); 
MBaLayout.addView(cT42);

var cT6 = new android.widget.Button(ctx);
                cT6.setText("Set Spawn");
				cT6.setTextColor(android.graphics.Color.BLACK);
                cT6.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
clientMessage("Spawn Has Been Set To: \n§4x: " + Math.floor(Player.getX()) + " §4y: " + Math.floor(Player.getY() - 1) + " §4z: " + Math.floor(Player.getZ()));
Level.setSpawn(getPlayerX(), getPlayerY(), getPlayerZ());
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
				}
}); 
MBaLayout.addView(cT6);

var cT20 = new android.widget.Button(ctx);
                cT20.setText("Set Home");
				cT20.setTextColor(android.graphics.Color.BLACK);
                cT20.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
clientMessage("Home Has Been Set To: \n§4x: " + Math.floor(Player.getX()) + " §4y: " + Math.floor(Player.getY() - 1) + " §4z: " + Math.floor(Player.getZ()));
ModPE.saveData("hX",parseInt(Player.getX()));			ModPE.saveData("hY",parseInt(Player.getY()));			ModPE.saveData("hZ",parseInt(Player.getZ()));
ModPE.saveData("setHomeData",1);
android.widget.Toast.makeText(ctx,new android.text.Html.fromHtml("<b><font color=#FF3200>WARNING: </b><font color=#000000>When You Teleport Home For The First Time MCPE Will Crash! But Only The First Time"),0).show();
android.widget.Toast.makeText(ctx,new android.text.Html.fromHtml("<b><font color=#FF3200>WARNING: </b><font color=#000000>When You Teleport Home For The First Time MCPE Will Crash! But Only The First Time"),0).show();
android.widget.Toast.makeText(ctx,new android.text.Html.fromHtml("<b><font color=#FF3200>WARNING: </b><font color=#000000>When You Teleport Home For The First Time MCPE Will Crash! But Only The First Time"),0).show();
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);

				}
});
MBaLayout.addView(cT20);

var cT21 = new android.widget.Button(ctx);
                cT21.setText("Teleport Home");
				cT21.setTextColor(android.graphics.Color.BLACK);
                cT21.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
clientMessage("Welcome §4Home " + Player.getName(Player.getEntity()) + "§4!");
Entity.setPosition(Player.getEntity(), parseInt(ModPE.readData("hX")) + 0.5, parseInt(ModPE.readData("hY")) + 1.5, parseInt(ModPE.readData("hZ")) + 0.5);
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
				}
}); 
MBaLayout.addView(cT21);

	                   MBamenu6 = new android.widget.PopupWindow(MBaLayout1, ctx.getWindowManager().getDefaultDisplay().getWidth(), ctx.getWindowManager().getDefaultDisplay().getHeight()/1);
MBamenu6.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(125,99,0,0))); 
            MBamenu6.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.LEFT | android.view.Gravity.TOP , 0, 0);
        }catch(error){
            print("AJMODSMCPE FOUND " + error+"ERRORS");
        }
    }}));
}

/////////////////mb b

 function MBBaMenu6(){
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    ctx.runOnUiThread(new java.lang.Runnable({ run: function(){
        try{
            var MBBaLayout = new android.widget.LinearLayout(ctx);
            var MBBaScroll = new android.widget.ScrollView(ctx);
            var MBBaLayout1 = new android.widget.LinearLayout(ctx);
            MBBaLayout.setOrientation(1);
            MBBaLayout1.setOrientation(1);

            MBBaScroll.addView(MBBaLayout);
            MBBaLayout1.addView(MBBaScroll);
	                  
	                  MBBamenu6 = new android.widget.PopupWindow(MBBaLayout1, ctx.getWindowManager().getDefaultDisplay().getWidth(), ctx.getWindowManager().getDefaultDisplay().getHeight()/1);
MBBamenu6.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(125,0,0,125))); 
            MBBamenu6.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.LEFT | android.view.Gravity.TOP , 0, 0);
        }catch(error){
            print("AJMODSMCPE FOUND " + error+"ERRORS");
        }
    }}));
}

//////////fun

function mbd8(){
MBBamenu8.dismiss();
MBamenu8.dismiss();
}

function mb8(){
MBBaMenu8();
MBaMenu8();
}

//////////////////message board lay top

 function MBaMenu8(){
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    ctx.runOnUiThread(new java.lang.Runnable({ run: function(){
        try{
            var MBaLayout = new android.widget.LinearLayout(ctx);
            var MBaScroll = new android.widget.ScrollView(ctx);
            var MBaLayout1 = new android.widget.LinearLayout(ctx);
            MBaLayout.setOrientation(1);
            MBaLayout1.setOrientation(1);

            MBaScroll.addView(MBaLayout);
            MBaLayout1.addView(MBaScroll);
	                  

var scrollText = new android.widget.TextView(ctx);
scrollText.setText("⚠Fun Mods⚠");
scrollText.setTextSize(15);                                                                                  scrollText.setTextColor(android.graphics.Color.MAGENTA);

 
scrollText.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));

scrollText.setEllipsize(android.text.TextUtils.TruncateAt.MARQUEE);

scrollText.setMarqueeRepeatLimit(-1);
//
scrollText.setSingleLine();
scrollText.setHorizontallyScrolling(true);
scrollText.setSelected(true);
////////////
MBaLayout.addView(scrollText);



var cT44 = new android.widget.Button(ctx);
                cT44.setText("Back");
				cT44.setTextColor(android.graphics.Color.BLACK);

cT44.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
mbd8();
mb4()
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);

				}
}); 
MBaLayout.addView(cT44);

var cT15 = new android.widget.Button(ctx);
                cT15.setText("Slide Away");
				cT15.setTextColor(android.graphics.Color.MAGENTA);
                cT15.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
setVelX(getPlayerEnt(), 5);
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
				}
}); 

MBaLayout.addView(cT15);

var cT16 = new android.widget.Button(ctx);
                cT16.setText("Free Fall");
				cT16.setTextColor(android.graphics.Color.MAGENTA);
                cT16.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){

setVelY(getPlayerEnt(), 9);
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
				}
}); 


MBaLayout.addView(cT16);


var cT5 = new android.widget.Button(ctx);
                cT5.setText("Spawn A Growing Star");
				cT5.setTextColor(android.graphics.Color.MAGENTA);
                cT5.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
Level.addParticle(ParticleType.crit, getPlayerX(), getPlayerY(), getPlayerZ(), 0, 0, 0, 150);
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
				}
}); 
MBaLayout.addView(cT5);

var cT23 = new android.widget.Button(ctx);
                cT23.setText("Modded Blocks Kit");
				cT23.setTextColor(android.graphics.Color.MAGENTA);
                cT23.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
clientMessage("Enjoy The §4Blocks");
addItemInventory(255,255,0)
      	 
      addItemInventory(254,255,0)
      addItemInventory(253,255,0)
      
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
				}
}); 
MBaLayout.addView(cT23);


var cT19 = new android.widget.Button(ctx);
                cT19.setText("Glitched Blocks Kit");
				cT19.setTextColor(android.graphics.Color.MAGENTA);
                cT19.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
clientMessage("Enjoy The §4Blocks");
addItemInventory(383,255,0) 
      	addItemInventory(162,255,15)
      	addItemInventory(246,255,0)
      	addItemInventory(198,255,0);
      	addItemInventory(9,255,0);
      addItemInventory(11,255,0);
      	addItemInventory(124,255,0);
      	addItemInventory(94,255,0);
      	addItemInventory(90,255,0);
      	addItemInventory(196,255,0);
      addItemInventory(51,255,0);
      	addItemInventory(249,255,0);
      	addItemInventory(26,255,0);
      	addItemInventory(144,255,0);
      	addItemInventory(68,255,0);
      	addItemInventory(247,255,0);
      	addItemInventory(403,255,0);
      	addItemInventory(439,255,0);
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
				}
}); 
MBaLayout.addView(cT19);


var cT22 = new android.widget.Button(ctx);
                cT22.setText("Duplicate Item In Hand To 99+");
				cT22.setTextColor(android.graphics.Color.MAGENTA);
                cT22.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
addItemInventory(getCarriedItem(),255,Player.getCarriedItemData());
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
		}
});	 
MBaLayout.addView(cT22);

var cT47 = new android.widget.Button(ctx);
                cT47.setText("Give Your Self A Magical Wand");
				cT47.setTextColor(android.graphics.Color.MAGENTA);

cT47.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
addItemInventory(431,255,0);
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);

				}
}); 
MBaLayout.addView(cT47);


var cT25 = new android.widget.Button(ctx);
                cT25.setText("Money Drop");
				cT25.setTextColor(android.graphics.Color.MAGENTA);
cT25.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){


 var x = Player.getPointedBlockX();
var y = Player.getPointedBlockY()+1;
var z = Player.getPointedBlockZ();

 Level.dropItem(x,y+5,z,0,264,10);
		Level.dropItem(x-1,y+5,z,0,264,5);
		Level.dropItem(x-1,y+5,z+1,0,264,5);
		Level.dropItem(x,y+5,z-1,0,264,5);
		Level.dropItem(x,y+5,z+1,0,264,5);
		Level.dropItem(x-1,y+5,z-1,0,264,5);
		Level.dropItem(x+1,y+5,z+1,0,264,5);
		Level.dropItem(x+1,y+5,z,0,264,5);
		Level.dropItem(x+1,y+5,z+1,0,264,5); 

android.widget.Toast.makeText(ctx,new android.text.Html.fromHtml("<b><font color=#000000>Only Works In </b><font color=#FF3200>Creative"),0).show();
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
				}
}); 
MBaLayout.addView(cT25);

textview = android.widget.TextView(ctx);            textview.setText("Show FPS"); 
textview.setTextSize(10);                                                                                  textview.setTextColor(android.graphics.Color.MAGENTA);
textview.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));       

MBaLayout.addView(textview);

var button10 = new android.widget.ToggleButton(ctx);
button10.setText("FPS");
button10.setChecked(toggled1);
button10.setOnClickListener(new android.view.View.OnClickListener({
    onClick: function(viewarg){
        if(!toggled1){
            toggled1 = true;
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
        }else{
            toggled1 = false;

}
}
}));
MBaLayout.addView(button10);
	                   MBamenu8 = new android.widget.PopupWindow(MBaLayout1, ctx.getWindowManager().getDefaultDisplay().getWidth(), ctx.getWindowManager().getDefaultDisplay().getHeight()/1);
MBamenu8.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(125,99,0,0))); 
            MBamenu8.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.LEFT | android.view.Gravity.TOP , 0, 0);
        }catch(error){
            print("AJMODSMCPE FOUND " + error+"ERRORS");
        }
    }}));
}

/////////////////mb b

 function MBBaMenu8(){
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    ctx.runOnUiThread(new java.lang.Runnable({ run: function(){
        try{
            var MBBaLayout = new android.widget.LinearLayout(ctx);
            var MBBaScroll = new android.widget.ScrollView(ctx);
            var MBBaLayout1 = new android.widget.LinearLayout(ctx);
            MBBaLayout.setOrientation(1);
            MBBaLayout1.setOrientation(1);

            MBBaScroll.addView(MBBaLayout);
            MBBaLayout1.addView(MBBaScroll);
	                  
	                  MBBamenu8 = new android.widget.PopupWindow(MBBaLayout1, ctx.getWindowManager().getDefaultDisplay().getWidth(), ctx.getWindowManager().getDefaultDisplay().getHeight()/1);
MBBamenu8.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(125,0,0,125))); 
            MBBamenu8.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.LEFT | android.view.Gravity.TOP , 0, 0);
        }catch(error){
            print("AJMODSMCPE FOUND " + error+"ERRORS");
        }
    }}));
}

//////////Info

function mbd9(){
MBBamenu9.dismiss();
MBamenu9.dismiss();
}

function mb9(){
MBBaMenu9();
MBaMenu9();
}

//////////////////message board lay top

 function MBaMenu9(){
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    ctx.runOnUiThread(new java.lang.Runnable({ run: function(){
        try{
            var MBaLayout = new android.widget.LinearLayout(ctx);
            var MBaScroll = new android.widget.ScrollView(ctx);
            var MBaLayout1 = new android.widget.LinearLayout(ctx);
            MBaLayout.setOrientation(1);
            MBaLayout1.setOrientation(1);

            MBaScroll.addView(MBaLayout);
            MBaLayout1.addView(MBaScroll);
	                  

var scrollText = new android.widget.TextView(ctx);
scrollText.setText("⚠Player Info⚠");
scrollText.setTextSize(15);                                                                                  scrollText.setTextColor(android.graphics.Color.YELLOW);

 
scrollText.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));

scrollText.setEllipsize(android.text.TextUtils.TruncateAt.MARQUEE);

scrollText.setMarqueeRepeatLimit(-1);
//
scrollText.setSingleLine();
scrollText.setHorizontallyScrolling(true);
scrollText.setSelected(true);
////////////
MBaLayout.addView(scrollText);



var cT45 = new android.widget.Button(ctx);
                cT45.setText("Back");
				cT45.setTextColor(android.graphics.Color.BLACK);

cT45.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
mbd9();
mb4()
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);

				}
}); 
MBaLayout.addView(cT45);

textview = android.widget.TextView(ctx);            textview.setText("Item ID: " + Player.getCarriedItem() + ":" + Player.getCarriedItemData() + "\nPlayer name: " + Player.getName(Player.getEntity()) +"\nPlayer health: "+Entity.getHealth(getPlayerEnt())+"/20\nWorld name: "+Level.getWorldName()+"\nTime: "+Level.getTime()+"\nGamemode: " +Level.getGameMode()+"\nx:" + Math.round(Player.getX())+" y:"+Math.round(Player.getY())+" z:"+Math.round(Player.getZ()) + "\nRain/Lightning: " + Math.round(Level.getRainLevel()) + "/" + Math.round(Level.getLightningLevel()) + "\nV " + ModPE.getMinecraftVersion() + "\nBiome: " + Level.getBiomeName());
textview.setTextSize(15);                                                                                  textview.setTextColor(android.graphics.Color.YELLOW);
textview.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));       MBaLayout.addView(textview);
	                   MBamenu9 = new android.widget.PopupWindow(MBaLayout1, ctx.getWindowManager().getDefaultDisplay().getWidth(), ctx.getWindowManager().getDefaultDisplay().getHeight()/1);
MBamenu9.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(125,99,0,0))); 
            MBamenu9.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.LEFT | android.view.Gravity.TOP , 0, 0);
        }catch(error){
            print("AJMODSMCPE FOUND " + error+"ERRORS");
        }
    }}));
}

/////////////////mb b

 function MBBaMenu9(){
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    ctx.runOnUiThread(new java.lang.Runnable({ run: function(){
        try{
            var MBBaLayout = new android.widget.LinearLayout(ctx);
            var MBBaScroll = new android.widget.ScrollView(ctx);
            var MBBaLayout1 = new android.widget.LinearLayout(ctx);
            MBBaLayout.setOrientation(1);
            MBBaLayout1.setOrientation(1);

            MBBaScroll.addView(MBBaLayout);
            MBBaLayout1.addView(MBBaScroll);
	                  
	                  MBBamenu9 = new android.widget.PopupWindow(MBBaLayout1, ctx.getWindowManager().getDefaultDisplay().getWidth(), ctx.getWindowManager().getDefaultDisplay().getHeight()/1);
MBBamenu9.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(125,0,0,125))); 
            MBBamenu9.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.LEFT | android.view.Gravity.TOP , 0, 0);
        }catch(error){
            print("AJMODSMCPE FOUND " + error+"ERRORS");
        }
    }}));
}

//////////msg

function mbd10(){
MBBamenu10.dismiss();
MBamenu10.dismiss();
}

function mb10(){
MBBaMenu10();
MBaMenu10();
}

//////////////////message board lay top

 function MBaMenu10(){
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    ctx.runOnUiThread(new java.lang.Runnable({ run: function(){
        try{
            var MBaLayout = new android.widget.LinearLayout(ctx);
            var MBaScroll = new android.widget.ScrollView(ctx);
            var MBaLayout1 = new android.widget.LinearLayout(ctx);
            MBaLayout.setOrientation(1);
            MBaLayout1.setOrientation(1);

            MBaScroll.addView(MBaLayout);
            MBaLayout1.addView(MBaScroll);
	                  

var scrollText = new android.widget.TextView(ctx);
scrollText.setText("⚠Message Menu⚠");
scrollText.setTextSize(15);                                                                                  scrollText.setTextColor(android.graphics.Color.BLUE);

 
scrollText.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));

scrollText.setEllipsize(android.text.TextUtils.TruncateAt.MARQUEE);

scrollText.setMarqueeRepeatLimit(-1);
//
scrollText.setSingleLine();
scrollText.setHorizontallyScrolling(true);
scrollText.setSelected(true);
////////////
MBaLayout.addView(scrollText);



var cT46 = new android.widget.Button(ctx);
                cT46.setText("Back");
				cT46.setTextColor(android.graphics.Color.BLACK);

cT46.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
mbd10();
mb4()
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);

				}
}); 
MBaLayout.addView(cT46);

var button44 = new android.widget.Switch(ctx);
button44.setText("Auto Spam 1");
button44.setTextColor(android.graphics.Color.BLUE);
button44.setChecked(switched44);
button44.setOnCheckedChangeListener(new android.widget.CompoundButton.OnCheckedChangeListener({
onCheckedChanged:
function(){
if(switched44 == false) {
switched44 = true;
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}else if(switched44 == true){
switched44 = false;
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}
}
}));
MBaLayout.addView(button44);

var button45 = new android.widget.Switch(ctx);
button45.setText("Auto Spam 2");
button45.setTextColor(android.graphics.Color.BLUE);
button45.setChecked(switched45);
button45.setOnCheckedChangeListener(new android.widget.CompoundButton.OnCheckedChangeListener({
onCheckedChanged:
function(){
if(switched45 == false) {
switched45 = true;
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}else if(switched45 == true){
switched45 = false;
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}
}
}));
MBaLayout.addView(button45)



var button47 = new android.widget.Switch(ctx);
button47.setText("Mute The Chat");
button47.setTextColor(android.graphics.Color.BLUE);
button47.setChecked(switched47);
button47.setOnCheckedChangeListener(new android.widget.CompoundButton.OnCheckedChangeListener({
onCheckedChanged:
function(){
if(switched47 == false) {
switched47 = true;
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}else if(switched47 == true){
switched47 = false;
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}
}
}));
MBaLayout.addView(button47)

	                   MBamenu10 = new android.widget.PopupWindow(MBaLayout1, ctx.getWindowManager().getDefaultDisplay().getWidth(), ctx.getWindowManager().getDefaultDisplay().getHeight()/1);
MBamenu10.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(125,99,0,0))); 
            MBamenu10.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.LEFT | android.view.Gravity.TOP , 0, 0);
        }catch(error){
            print("AJMODSMCPE FOUND " + error+"ERRORS");
        }
    }}));
}

/////////////////mb b

 function MBBaMenu10(){
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    ctx.runOnUiThread(new java.lang.Runnable({ run: function(){
        try{
            var MBBaLayout = new android.widget.LinearLayout(ctx);
            var MBBaScroll = new android.widget.ScrollView(ctx);
            var MBBaLayout1 = new android.widget.LinearLayout(ctx);
            MBBaLayout.setOrientation(1);
            MBBaLayout1.setOrientation(1);

            MBBaScroll.addView(MBBaLayout);
            MBBaLayout1.addView(MBBaScroll);
	                  
	                  MBBamenu10 = new android.widget.PopupWindow(MBBaLayout1, ctx.getWindowManager().getDefaultDisplay().getWidth(), ctx.getWindowManager().getDefaultDisplay().getHeight()/1);
MBBamenu10.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(125,0,0,125))); 
            MBBamenu10.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.LEFT | android.view.Gravity.TOP , 0, 0);
        }catch(error){
            print("AJMODSMCPE FOUND " + error+"ERRORS");
        }
    }}));
}

var mbbb10 = false;
var mbbb9 = false;
var mbbb8 = false;
var mbbb7 = false;
var mbbb6 = false;
var mbbb5 = false;
var mbbb4 = false;
var mbbb3 = false;
var mbbb2 = false;
var mbbb = false;
var toggled1 = false;
var switched11 = false;
var switched19 = false;
var switched20 = false;
var switched21 = false;
var switched22 = false;
var switched23 = false;
var switched24 = false;
var switched25 = false;
var switched26 = false;
var switched27 = false;
var switched28 = false;
var switched29 = false;
var switched30 = false;
var switched31 = false;
var switched32 = false;
var switched33 = false;
var switched34 = false;
var switched35 = false;
var switched36 = false;
var switched37 = false;
var switched38 = false;
var switched39 = false;
var switched40 = false;
var switched41 = false;
var switched42 = false;
var switched43 = false;
var switched44 = false;
var switched45 = false;
var switched46 = false;
var switched47 = false;
var sbpProgress1 = 0;
var sbpProgress2 = 0;
var sbpProgress3 = 0;
var s = 1;
var Xpos = 0;
var Zpos = 0;
var s = 0;
var Xdiff = 0;
var Zdiff = 0;
var isFalling = false;
var ride = null;
const VEL_Y_OFFSET = -0.07840000092983246;
var can = 1;
var canGetHP = 1;
var HP;
var gravity = -0.07840000092983246;
var playerDir = [0, 0, 0];
var mobDir = [0, 0, 0];
var DEG_TO_RAD = Math.PI / 180;
var playerFlySpeed = 1;
var fps = 0;
var lastLoop = new Date;
var jumpUI = null;
var jumpHeight = "1";
var speed = "1";
var jump = 0;
var jumpVel = 0;
var playerDir = [0, 0, 0];
var mobDir = [0, 0, 0];
var DEG_TO_RAD = Math.PI / 180;
var curticks=0;
ctx.runOnUiThread(new java.lang.Runnable(){
run:function(){
try{
mb();
mb2();
android.widget.Toast.makeText(ctx,new android.text.Html.fromHtml("<b><font color=#29FF00>Loading </b><font color=#FF9B00>AJModsMCPE <b><font color=#FF3900>..."),0).show();
android.widget.Toast.makeText(ctx,new android.text.Html.fromHtml("<b><font color=#FF3900>Loading </b><font color=#FC0094>AJModsMCPE <b><font color=#FF9B00>..."),0).show();
android.widget.Toast.makeText(ctx,new android.text.Html.fromHtml("<b><font color=#1E90FF>Load </b><font color=#9700E8>Succesful!!!"),0).show();
android.widget.Toast.makeText(ctx,new android.text.Html.fromHtml("<b><font color=#FF8605>Thank You For <b><font color=#FF3900>Choosing AJModsMCPE"),0).show();
}catch(err){
clientMessage("Error:"+err)
}
}
})


ModPE.langEdit("menu.copyright","§aMojang §1& §eAJ170!           §8◻§4§oAJModsMCPE§2 V1.8§8◻");
ModPE.langEdit("menu.version","§2 1.7");
ModPE.langEdit("menu.play","§bPlay");
ModPE.langEdit("menu.options","§6Settings");
ModPE.langEdit("menu.skins","§5Skins");
ModPE.langEdit("playscreen.header.local","§6Select world");
ModPE.langEdit("skins.title","§6Skins");
ModPE.langEdit("options.title","§5Settings");
ModPE.langEdit("deathScreen.message","§4Wasted");
ModPE.langEdit("playscreen.new","§5New");
ModPE.langEdit("playscreen.quit","§6Back");
ModPE.langEdit("skins.restore.button","§5Restore");
ModPE.langEdit("createWorldScreen.advanced","§bAdvanced");
ModPE.langEdit("externalServerScreen.addServer","§6Add Server");
ModPE.langEdit("multiplayer.player.joined","§5%s joined the game");
ModPE.langEdit("multiplayer.player.left","§b%s left the game");
ModPE.langEdit("deathScreen.quit","§bMain Menu");
ModPE.langEdit("deathScreen.respawn","§5Respawn");
ModPE.langEdit("pauseScreen.quit","§bMain Menu");
ModPE.langEdit("pauseScreen.options","§6Settings");
ModPE.langEdit("pauseScreen.back","§5Back to game");
ModPE.langEdit("menu.returnToGame","§5Back to game");
ModPE.langEdit("death.attack.mob","§6%1$s was slain by %2$s");
ModPE.langEdit("death.attack.fall","§b%1$s hit the ground too hard");
ModPE.langEdit("death.attack.explosion","§6%1$s blew up");
ModPE.langEdit("death.attack.arrow","§5%1$s was shot by %2$s");
ModPE.langEdit("death.attack.drown","§b%1$s drowned");
ModPE.langEdit("death.fell.accident.generic","§6%1$s fell from a high place");
ModPE.langEdit("death.attack.outOfWorld","§5%1$s fell out of the world");
ModPE.langEdit("death.attack.onFire","§b%1$s burned to death");
ModPE.langEdit("death.attack.magic","§6%1$s was killed by magic");
ModPE.langEdit("death.attack.inWall","§5%1$s suffocated in a wall");
ModPE.langEdit("death.attack.lava","§b%1$s tried to swim in lava");
ModPE.langEdit("death.attack.inFire","§6%1$s went up in flames");
ModPE.langEdit("death.attack.cactus","§5%1$s was pricked to death");
ModPE.langEdit("commands.op.success","§lOpped %s");
ModPE.langEdit("commands.banip.success","§rBanned IP address §l%s");
ModPE.langEdit("commands.banip.success.players","§rBanned IP address §l%s §rbelonging to %s");
ModPE.langEdit("chatScreen.hide","§bHide");
ModPE.langEdit("action.interact.createMap","§6Create Map");
ModPE.langEdit("createWorldScreen.action.editLocal","§5Make Infinite");
ModPE.langEdit("createWorldScreen.action.local","§7Create World");
ModPE.langEdit("createWorldScreen.alwaysDay","§9Always Day");
ModPE.langEdit("createWorldScreen.delete","§bDelete");
ModPE.langEdit("createWorldScreen.game.settings","§bGame Settings");
ModPE.langEdit("createWorldScreen.gameMode.creative","§6Creative");
ModPE.langEdit("createWorldScreen.gameMode.survival","§5Survival");
ModPE.langEdit("createWorldScreen.header.local","§2AJ170 Was Here!");

            


var starterUI = null;
var closeUI = null;
var droidPE = null;
var gunUI = null;
var jumpUI = null;
var flyUI = null;
var controlUI = null;


 
function dip2px(ctx, dips){
    return Math.ceil(dips * ctx.getResources().getDisplayMetrics().density);
}

function newLevel(){
    clientMessage("§l§3===========================");
clientMessage ("§b§l§oWelcome §4§l§o" + Player.getName(Player.getEntity()) + "§b§l§o To §6§l§oAJModsMCPE");
clientMessage ("§b§l§oMenu By §6170_Crew");
clientMessage("§b§l§ox: " + Math.floor(Player.getX()) + " §b§l§oy: " + Math.floor(Player.getY() - 1) + " §b§l§oz: " + Math.floor(Player.getZ()));
clientMessage("§l§3===========================");
    starter();
}
 
function starter(){
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    ctx.runOnUiThread(new java.lang.Runnable({ run: function(){
        try{
            var layout = new android.widget.LinearLayout(ctx);
                layout.setOrientation(0);
             
            var menuBtn = new android.widget.ImageButton(ctx);
			menuBtn.setImageDrawable(ctx.getResources().getDrawable(android.R.drawable.status_bar_item_background));
            menuBtn.setOnClickListener(new android.view.View.OnClickListener({
                onClick: function(viewarg){
                             
         
                 
ctx.getSystemService(android.content.Context.VIBRATOR_SERVICE).vibrate(37);                 
                 
					Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.chestopen", 1, 1);
					if(gunUI != null){
                        gunUI.dismiss();
						gunUI = null;
                    }
                    if(flyUI != null){
                        flyUI.dismiss();
						flyUI = null;
                    }
					if(controlUI != null){
						controlUI.dismiss();
						controlUI = null;
					}
					mainMenu();
					close();
                }
            }));
            layout.addView(menuBtn);
             
            starterUI = new android.widget.PopupWindow(layout, dip2px(ctx, 30), dip2px(ctx, 50));
   
 
            starterUI.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.RIGHT | android.view.Gravity.TOP, 0, 40);
        }catch(err){
            print("The Image GUI-Button could not be displayed, because: " + err);
        }
    }}));
}
 
function close(){
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    ctx.runOnUiThread(new java.lang.Runnable({ run: function(){
        try{
            var closeLayout = new android.widget.LinearLayout(ctx);
            closeLayout.setOrientation(0);
        var closeBtn = new android.widget.ImageButton(ctx);
			closeBtn.setImageDrawable(ctx.getResources().getDrawable(android.R.drawable.ic_delete));
            closeBtn.setOnClickListener(new android.view.View.OnClickListener({
                onClick: function(viewarg){
ctx.getSystemService(android.content.Context.VIBRATOR_SERVICE).vibrate(37);				Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.chestclosed", 1, 1);
                    droidPE.dismiss();
                    closeUI.dismiss();
                }
            }));
            closeLayout.addView(closeBtn);
             
            closeUI = new android.widget.PopupWindow(closeLayout, dip2px(ctx,32), dip2px(ctx,32));
            closeUI.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.RIGHT | android.view.Gravity.TOP, 0, 0);
        }catch(e){
            print("The X-Button could not be displayed, because: " + e);
        }
    }}));
}

function mainMenu(){
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    ctx.runOnUiThread(new java.lang.Runnable({ run: function(){
        try{
            var menuLayout = new android.widget.LinearLayout(ctx);
            var menuScroll = new android.widget.ScrollView(ctx);
            var menuLayout1 = new android.widget.LinearLayout(ctx);
            menuLayout.setOrientation(1);
            menuLayout1.setOrientation(1);
             
            menuScroll.addView(menuLayout);
            menuLayout1.addView(menuScroll);
             
            var layoutParams = new android.widget.LinearLayout.LayoutParams(android.widget.RelativeLayout.LayoutParams.WRAP_CONTENT, android.widget.RelativeLayout.LayoutParams.WRAP_CONTENT);
                layoutParams.setMargins(dip2px(ctx, 15), 0, 0, 0);

            var pmm= new android.widget.ImageView(ctx);
                pmm.setImageBitmap(android.graphics.BitmapFactory.decodeByteArray(android.util.Base64.decode(pmmm,0), 0, android.util.Base64.decode(pmmm,0).length))
                 menuLayout.addView(pmm);
			 
	var titleX = new android.widget.TextView(ctx);
    var Ytitle = new android.widget.TextView(ctx);
          Ytitle.setTextSize(13);
          Ytitle.setText("            Welcome " + Player.getName(Player.getEntity()) + "!");

    Ytitle.setTextColor(android.graphics.Color.MAGENTA);
          menuLayout.addView(Ytitle);



	var background1 = new android.graphics.drawable.BitmapDrawable(scaledBackgroundDarkDirtImageDecoded1);
	var scrollText = new android.widget.TextView(ctx);
scrollText.setText("⚠AJModsMCPE⚠ V 1.8");
scrollText.setTextSize(30);                                                                                  scrollText.setTextColor(android.graphics.Color.RED);
scrollText.setBackgroundDrawable(background1);
scrollText.setEllipsize(android.text.TextUtils.TruncateAt.MARQUEE);
scrollText.setMarqueeRepeatLimit(-1);
scrollText.setSingleLine();
scrollText.setHorizontallyScrolling(true);
scrollText.setSelected(true);

menuLayout.addView(scrollText);



var scrollText = new android.widget.TextView(ctx);
scrollText.setText("===========================================================================================================================================================================================================================================================================================================================");
scrollText.setTextSize(20);                                                                                  scrollText.setTextColor(android.graphics.Color.CYAN);
scrollText.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));
scrollText.setEllipsize(android.text.TextUtils.TruncateAt.MARQUEE);
scrollText.setMarqueeRepeatLimit(-1);
scrollText.setSingleLine();
scrollText.setHorizontallyScrolling(true);
scrollText.setSelected(true);

menuLayout.addView(scrollText);


var scrollText = new android.widget.TextView(ctx);
scrollText.setText("⚠Switches⚠");
scrollText.setTextSize(20);                                                                                  scrollText.setTextColor(android.graphics.Color.WHITE);
scrollText.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.BLACK));
scrollText.setEllipsize(android.text.TextUtils.TruncateAt.MARQUEE);
scrollText.setMarqueeRepeatLimit(-1);
scrollText.setSingleLine();
scrollText.setHorizontallyScrolling(true);
scrollText.setSelected(true);

menuLayout.addView(scrollText);
//GREEN CYAN MAGENTA YELLOW RED BLACK
			
			

var cT29 = new android.widget.Button(ctx);
                cT29.setText("Make All Mods Work On Servers");
				cT29.setTextColor(android.graphics.Color.GREEN);
cT29.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
android.widget.Toast.makeText(ctx,"Opening the URL...",0).show();
						var intentBrowser = new android.content.Intent(ctx);
						intentBrowser.setAction(android.content.Intent.ACTION_VIEW);
						intentBrowser.setData(android.net.Uri.parse("http://www.mediafire.com/?an8kfbbxk9adlry"));
	ctx.startActivity(intentBrowser)

Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
droidPE.dismiss();
closeUI.dismiss();
				}
}); 
menuLayout.addView(cT29);

/* var cT30 = new android.widget.Button(ctx);
                cT30.setText("Turn Off Change Log");
				cT30.setTextColor(android.graphics.Color.GREEN);
cT30.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
mbd();
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);

				}
}); 
menuLayout.addView(cT30);
 */

var button11 = new android.widget.Switch(ctx);
button11.setText("Fly in Survival");
button11.setTextColor(android.graphics.Color.GREEN);
button11.setChecked(switched11);
button11.setOnCheckedChangeListener(new android.widget.CompoundButton.OnCheckedChangeListener({
onCheckedChanged: function(){
if(!switched11){
switched11 = true;
clientMessage("Fly [§4On§f]");
Player.setCanFly(1);
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}else{
switched11 = false;
clientMessage("Fly [§4Off§f]");
Player.setCanFly(0);
}
button11.setChecked(switched11);
}
}));
menuLayout.addView(button11)

var button22 = new android.widget.Switch(ctx);
button22.setText("Pause The Game");
button22.setTextColor(android.graphics.Color.GREEN);
button22.setChecked(switched22);
button22.setOnCheckedChangeListener(new android.widget.CompoundButton.OnCheckedChangeListener({
onCheckedChanged: function(){
if(!switched22){
switched22 = true;
clientMessage("Pause Game [§4On§f]");
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);			
ModPE.setGameSpeed(0);
}else{
switched22 = false;
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);			
clientMessage("Pause Game [§4Off§f]");
ModPE.setGameSpeed(20);
}
button22.setChecked(switched22);
}
}));
menuLayout.addView(button22)

var button25 = new android.widget.Switch(ctx);
button25.setText("Climb Up Walls");
button25.setTextColor(android.graphics.Color.GREEN);
button25.setChecked(switched25);
button25.setOnCheckedChangeListener(new android.widget.CompoundButton.OnCheckedChangeListener({
onCheckedChanged: function(){
if(switched25 == false) {
switched25 = true;
clientMessage("Wall Climb [§4On§f]");
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}else if(switched25 == true){
switched25 = false;
clientMessage("Wall Climb [§4Off§f]");
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}
}
}));

menuLayout.addView(button25)

var button27 = new android.widget.Switch(ctx);
button27.setText("Walk On Liquid");
button27.setTextColor(android.graphics.Color.GREEN);
button27.setChecked(switched27);
button27.setOnCheckedChangeListener(new android.widget.CompoundButton.OnCheckedChangeListener({
onCheckedChanged: function(){
if(switched27 == false) {
switched27 = true;
clientMessage("Walk On Liquid [§4On§f]");
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}else if(switched27 == true){
switched27 = false;
clientMessage("Walk On Liquid [§4Off§f]");
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}
}
}));

menuLayout.addView(button27)

/* var button28 = new android.widget.Switch(ctx);
button28.setText("Super Jump");
button28.setTextColor(android.graphics.Color.GREEN);
button28.setChecked(mbbb);
button28.setOnCheckedChangeListener(new android.widget.CompoundButton.OnCheckedChangeListener({
onCheckedChanged: function(){
if(!mbbb){   
     print("message board on");
mb();
                  mbbb = true;
}else{
print("message board off");
mbd();
               mbbb = false;
}
}
}));

menuLayout.addView(button28) */

var button29 = new android.widget.Switch(ctx);
button29.setText("Super Speed");
button29.setTextColor(android.graphics.Color.GREEN);
button29.setChecked(switched29);
button29.setOnCheckedChangeListener(new android.widget.CompoundButton.OnCheckedChangeListener({
onCheckedChanged: function(){
if(switched29 == false) {
switched29 = true;
clientMessage("Super Speed [§4On§f]");
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}else if(switched29 == true){
switched29 = false;
clientMessage("Super Speed [§4Off§f]");
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}
}
}));

menuLayout.addView(button29)

var button30 = new android.widget.Switch(ctx);
button30.setText("No Fall Damage");
button30.setTextColor(android.graphics.Color.GREEN);
button30.setChecked(switched30);
button30.setOnCheckedChangeListener(new android.widget.CompoundButton.OnCheckedChangeListener({
onCheckedChanged: function(){
if(switched30 == false) {
switched30 = true;
clientMessage("No Fall Damage [§4On§f]");
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}else if(switched30 == true){
switched30 = false;
clientMessage("No Fall Damage [§4Off§f]");
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}
}
}));

menuLayout.addView(button30)

var button31 = new android.widget.Switch(ctx);
button31.setText("Infininte Hearts");
button31.setTextColor(android.graphics.Color.GREEN);
button31.setChecked(switched31);
button31.setOnCheckedChangeListener(new android.widget.CompoundButton.OnCheckedChangeListener({
onCheckedChanged: function(){
if(switched31 == false) {
switched31 = true;
clientMessage("Infinite Hearts [§4On§f]");
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}else if(switched31 == true){
switched31 = false;
clientMessage("Infinite Hearts [§4Off§f]");
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}
}
}));

menuLayout.addView(button31)

var button34 = new android.widget.Switch(ctx);
button34.setText("Infinite Hunger");
button34.setTextColor(android.graphics.Color.GREEN);
button34.setChecked(switched34);
button34.setOnCheckedChangeListener(new android.widget.CompoundButton.OnCheckedChangeListener({
onCheckedChanged:
function(){
if(switched34 == false) {
switched34 = true;
clientMessage("Infinite Hunger [§4On§f]");
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}else if(switched34 == true){
switched34 = false;
clientMessage("Infinite Hunger [§4Off§f]");
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}
}
}));
menuLayout.addView(button34)

var button32 = new android.widget.Switch(ctx);
button32.setText("Sniper Bow");
button32.setTextColor(android.graphics.Color.GREEN);
button32.setChecked(switched32);
button32.setOnCheckedChangeListener(new android.widget.CompoundButton.OnCheckedChangeListener({
onCheckedChanged: function(){
if(switched32 == false) {
switched32 = true;
clientMessage("Sniper Bow [§4On§f]");
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}else if(switched32 == true){
switched32 = false;
clientMessage("Sniper Bow [§4Off§f]");
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}
}
}));

menuLayout.addView(button32)

var button35 = new android.widget.Switch(ctx);
button35.setText("Super Instant Mine");
button35.setTextColor(android.graphics.Color.GREEN);
button35.setChecked(switched35);
button35.setOnCheckedChangeListener(new android.widget.CompoundButton.OnCheckedChangeListener({
onCheckedChanged:
function(){
if(switched35 == false) {
switched35 = true;
clientMessage("Super Instant Mine [§4On§f]");
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}else if(switched35 == true){
switched35 = false;
clientMessage("Super Instant Mine [§4Off§f]");
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}
}
}));
menuLayout.addView(button35)

var button41 = new android.widget.Switch(ctx);
button41.setText("Show " + Player.getName(Player.getEntity()) + "'s Health Bar");
button41.setTextColor(android.graphics.Color.GREEN);
button41.setChecked(switched41);
button41.setOnCheckedChangeListener(new android.widget.CompoundButton.OnCheckedChangeListener({
onCheckedChanged:
function(){
if(switched41 == false) {
switched41 = true;
clientMessage("Show " + Player.getName(Player.getEntity()) + " Health Bar [§4On§f]");
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}else if(switched41 == true){
switched41 = false;
clientMessage("Show " + Player.getName(Player.getEntity()) + " Health Bar [§4Off§f]");
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}
}
}));
menuLayout.addView(button41)

var button42 = new android.widget.Switch(ctx);
button42.setText("Knockback Attack");
button42.setTextColor(android.graphics.Color.GREEN);
button42.setChecked(switched42);
button42.setOnCheckedChangeListener(new android.widget.CompoundButton.OnCheckedChangeListener({
onCheckedChanged:
function(){
if(switched42 == false) {
switched42 = true;
clientMessage("Knockback Attack [§4On§f]");
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}else if(switched42 == true){
switched42 = false;
clientMessage("Knockback Attack [§4Off§f]");
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}
}
}));
menuLayout.addView(button42)

var button43 = new android.widget.Switch(ctx);
button43.setText("Instant Kill");
button43.setTextColor(android.graphics.Color.GREEN);
button43.setChecked(switched43);
button43.setOnCheckedChangeListener(new android.widget.CompoundButton.OnCheckedChangeListener({
onCheckedChanged:
function(){
if(switched43 == false) {
switched43 = true;
clientMessage("Instant Kill [§4On§f]");
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}else if(switched43 == true){
switched43 = false;
clientMessage("Instant Kill [§4Off§f]");
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}
}
}));
menuLayout.addView(button43)

/* textview = android.widget.TextView(ctx);            textview.setText("Jump Height Changer"); 
textview.setTextSize(10);                                                                                  textview.setTextColor(android.graphics.Color.GREEN);
textview.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));       

menuLayout.addView(textview);

var sbp3 = new android.widget.SeekBar(ctx);
sbp3.setMax(3);
sbp3.setProgress(sbpProgress3);
sbp3.setOnSeekBarChangeListener(new android.widget.SeekBar.OnSeekBarChangeListener() {
onStopTrackingTouch: function(view)
{
sbpProgress3 = sbp3.getProgress();
if(sbpProgress3==0)
{
Entity.removeEffect(getPlayerEnt(),8);
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
clientMessage("Jump Height Has Been §4Reset");
}
if(sbpProgress3==1)
{
Entity.addEffect(getPlayerEnt(),8,10000000,1);
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
clientMessage("Jump Height Set To§4 2 Blocks");
}
if(sbpProgress3==2)
{
Entity.addEffect(getPlayerEnt(),8,10000000,2);
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
clientMessage("Jump Height Set To§4 3 Blocks High");
}
if(sbpProgress3==3)
{
Entity.addEffect(getPlayerEnt(),8,10000000,3);
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
clientMessage("Jump Height Set To§4 5 Blocks");
}
}
});
        menuLayout.addView(sbp3);
 */

var button26 = new android.widget.Switch(ctx);
button26.setText("Show Coordinates");
button26.setTextColor(android.graphics.Color.RED);
button26.setChecked(switched26);
button26.setOnCheckedChangeListener(new android.widget.CompoundButton.OnCheckedChangeListener({
onCheckedChanged: function(){
if(switched26 == false) {
switched26 = true;
clientMessage("Coordinates [§4On§f]");
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}else if(switched26 == true){
switched26 = false;
clientMessage("Coordinates [§4Off§f]");
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}
}
}));

menuLayout.addView(button26)



var button37 = new android.widget.Switch(ctx);
button37.setText("Real Time Display (Player Info)");
button37.setTextColor(android.graphics.Color.RED);
button37.setChecked(switched37);
button37.setOnCheckedChangeListener(new android.widget.CompoundButton.OnCheckedChangeListener({
onCheckedChanged:
function(){
if(switched37 == false) {
switched37 = true;
clientMessage("Real Time Display [§4On§f]");
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}else if(switched37 == true){
switched37 = false;
clientMessage("Real Time Display [§4Off§f]");
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}
}
}));
menuLayout.addView(button37);

var button36 = new android.widget.Switch(ctx);
button36.setText("Only Day");
button36.setTextColor(android.graphics.Color.RED);
button36.setChecked(switched36);
button36.setOnCheckedChangeListener(new android.widget.CompoundButton.OnCheckedChangeListener({
onCheckedChanged:
function(){
if(switched36 == false) {
switched36 = true;
clientMessage("Only Day [§4On§f]");
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}else if(switched36 == true){
switched36 = false;
clientMessage("Only Day [§4Off§f]");
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}
}
}));
menuLayout.addView(button36);






var button19 = new android.widget.Switch(ctx);
button19.setText("Upside Down Screen");
button19.setTextColor(android.graphics.Color.MAGENTA);
button19.setChecked(switched19);
button19.setOnCheckedChangeListener(new android.widget.CompoundButton.OnCheckedChangeListener({
onCheckedChanged: function(){
if(!switched19){
switched19 = true;
clientMessage("§4WHY THE F**K WOULD YOU DO THIS???");
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);			
ModPE.setFov(300);
}else{
switched19 = false;
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);			
clientMessage("§4...");
ModPE.resetFov();
}
button19.setChecked(switched19);
}
}));
menuLayout.addView(button19)

var button20 = new android.widget.Switch(ctx);
button20.setText("Slow Motion");
button20.setTextColor(android.graphics.Color.MAGENTA);
button20.setChecked(switched20);
button20.setOnCheckedChangeListener(new android.widget.CompoundButton.OnCheckedChangeListener({
onCheckedChanged: function(){
if(!switched20){
switched20 = true;
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);			
clientMessage("Slow Motion §4Activated");
ModPE.setGameSpeed(10);
}else{
switched20 = false;
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);			
clientMessage("Slow Motion §4DeActivated");
ModPE.setGameSpeed(20);
}
button20.setChecked(switched20);
}
}));
menuLayout.addView(button20)

var button21 = new android.widget.Switch(ctx);
button21.setText("Pro Mod");
button21.setTextColor(android.graphics.Color.MAGENTA);
button21.setChecked(switched21);
button21.setOnCheckedChangeListener(new android.widget.CompoundButton.OnCheckedChangeListener({
onCheckedChanged: function(){
if(!switched21){
switched21 = true;
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);			
clientMessage("Pro Mod §4Activated");
ModPE.setFov(120);
}else{
switched21 = false;
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);			
clientMessage("Pro Mod §4DeActivated");
ModPE.resetFov();
}
button21.setChecked(switched21);
}
}));
menuLayout.addView(button21)

var button23 = new android.widget.Switch(ctx);
button23.setText("Walk Through Walls");
button23.setTextColor(android.graphics.Color.MAGENTA);
button23.setChecked(switched23);
button23.setOnCheckedChangeListener(new android.widget.CompoundButton.OnCheckedChangeListener({
onCheckedChanged: function(){
if(!switched23){
switched23 = true;
clientMessage("Walk Through Walls [§4On§f]");
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
Entity.setCollisionSize(Player.getEntity(), 0, 0);
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}else{
switched23 = false;
Entity.setCollisionSize(Player.getEntity(), 0.6, 1.8);
clientMessage("Walk Through Walls [§4Off§f]");
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}
button23.setChecked(switched23);
}
}));
menuLayout.addView(button23)

var button33 = new android.widget.Switch(ctx);
button33.setText("Derp Mode");
button33.setTextColor(android.graphics.Color.MAGENTA);
button33.setChecked(switched33);
button33.setOnCheckedChangeListener(new android.widget.CompoundButton.OnCheckedChangeListener({
onCheckedChanged:
function(){
if(switched33 == false) {
switched33 = true;
clientMessage("Derp Mode [§4On§f]");
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}else if(switched33 == true){
switched33 = false;
clientMessage("Derp Mode [§4Off§f]");
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}
}
}));
menuLayout.addView(button33)

var button38 = new android.widget.Switch(ctx);
button38.setText("Particles");
button38.setTextColor(android.graphics.Color.MAGENTA);
button38.setChecked(switched38);
button38.setOnCheckedChangeListener(new android.widget.CompoundButton.OnCheckedChangeListener({
onCheckedChanged:
function(){
if(switched38 == false) {
switched38 = true;
clientMessage("Particles [§4On§f]");
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}else if(switched38 == true){
switched38 = false;
clientMessage("Particles [§4Off§f]");
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}
}
}));
menuLayout.addView(button38)

var button39 = new android.widget.Switch(ctx);
button39.setText("Parachute Fall");
button39.setTextColor(android.graphics.Color.MAGENTA);
button39.setChecked(switched39);
button39.setOnCheckedChangeListener(new android.widget.CompoundButton.OnCheckedChangeListener({
onCheckedChanged:
function(){
if(switched39 == false) {
switched39 = true;
clientMessage("Parachute Fall [§4On§f]");
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}else if(switched39 == true){
switched39 = false;
clientMessage("Parachute Fall [§4Off§f]");
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}
}
}));
menuLayout.addView(button39)

var button40 = new android.widget.Switch(ctx);
button40.setText("Auto Switch");
button40.setTextColor(android.graphics.Color.MAGENTA);
button40.setChecked(switched40);
button40.setOnCheckedChangeListener(new android.widget.CompoundButton.OnCheckedChangeListener({
onCheckedChanged:
function(){
if(switched40 == false) {
switched40 = true;
clientMessage("Auto Switch [§4On§f]");
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}else if(switched40 == true){
switched40 = false;
clientMessage("Auto Switch [§4Off§f]");
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}
}
}));
menuLayout.addView(button40)



var button46 = new android.widget.Switch(ctx);
button46.setText("Colord Name");
button46.setTextColor(android.graphics.Color.MAGENTA);
button46.setChecked(switched46);
button46.setOnCheckedChangeListener(new android.widget.CompoundButton.OnCheckedChangeListener({
onCheckedChanged:
function(){
if(switched46 == false) {
switched46 = true;
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}else if(switched46 == true){
switched46 = false;
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}
}
}));
menuLayout.addView(button46)







textview = android.widget.TextView(ctx);            textview.setText("⚠Game Rules⚠"); 
textview.setTextSize(20);                                                                                  textview.setTextColor(android.graphics.Color.WHITE);
textview.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.BLACK));       

menuLayout.addView(textview);

var jumpBtn = new android.widget.TextView(ctx);
			jumpBtn.setTextSize(18);
			jumpBtn.setText("Jump Height: " + jumpHeight + " Blocks");
jumpBtn.setTextColor(android.graphics.Color.BLUE);	jumpBtn.setLayoutParams(layoutParams);
			jumpBtn.setOnClickListener(new android.view.View.OnClickListener({
				onClick: function(viewarg){
					if(jumpHeight=="1"){
						jumpHeight = "2";
                        
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);                        jumpVel = 0.5;
					}
					else if(jumpHeight=="2"){
						jumpHeight = "3";
						Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
						jumpVel = 0.7;
					}
					else if(jumpHeight=="3"){
						jumpHeight = "4";
						Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
						jumpVel = 0.8;
					}
					else if(jumpHeight=="4"){
						jumpVel = 0.9;
						Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
						jumpHeight = "5";
					}
					else if(jumpHeight=="5"){
						jumpVel = 1;
						Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
						jumpHeight = "6";
					}
					else if(jumpHeight=="6"){
						jumpHeight = "1";
					Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
					}
					jumpBtn.setText("Jump Height: " + jumpHeight + " Blocks");
jumpBtn.setTextColor(android.graphics.Color.BLUE);				
				}
			}));
			menuLayout.addView(jumpBtn);

textview = android.widget.TextView(ctx);            textview.setText("Game Speed Changer"); 
textview.setTextSize(10);                                                                                  textview.setTextColor(android.graphics.Color.BLUE);
textview.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));       

menuLayout.addView(textview);

var sbp1 = new android.widget.SeekBar(ctx);
sbp1.setMax(3);
sbp1.setProgress(sbpProgress1);
sbp1.setOnSeekBarChangeListener(new android.widget.SeekBar.OnSeekBarChangeListener() {
onStopTrackingTouch: function(view)
{
sbpProgress1 = sbp1.getProgress();
if(sbpProgress1==0)
{
ModPE.setGameSpeed(20);
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
clientMessage("Speed Set To §4Normal");
}
if(sbpProgress1==1)
{
ModPE.setGameSpeed(30);
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
clientMessage("Speed Set To §4+20%");
}
if(sbpProgress1==2)
{
ModPE.setGameSpeed(40);
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
clientMessage("Speed Set To §4+30%");
}
if(sbpProgress1==3)
{
ModPE.setGameSpeed(50);
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
clientMessage("Speed Set To §4+40%");
}
}
});
        menuLayout.addView(sbp1);


textview = android.widget.TextView(ctx);            textview.setText("Zoom Changer"); 
textview.setTextSize(10);                                                                                  textview.setTextColor(android.graphics.Color.BLUE);
textview.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));       

menuLayout.addView(textview);

var sbp2 = new android.widget.SeekBar(ctx);
sbp2.setMax(3);
sbp2.setProgress(sbpProgress2);
sbp2.setOnSeekBarChangeListener(new android.widget.SeekBar.OnSeekBarChangeListener() {
onStopTrackingTouch: function(view)
{
sbpProgress2 = sbp2.getProgress();
if(sbpProgress2==0)
{
ModPE.resetFov();
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
clientMessage("Zoom Set To §4Normal");
}
if(sbpProgress2==1)
{
ModPE.setFov(40);
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
clientMessage("Zoom Set To §4+20%");
}
if(sbpProgress2==2)
{
ModPE.setFov(30);
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
clientMessage("Zoom Set To §4+40%");
}
if(sbpProgress2==3)
{
ModPE.setFov(20);
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
clientMessage("Zoom Set To §4+60%");
}
}
});
        menuLayout.addView(sbp2);





textview = android.widget.TextView(ctx);            textview.setText("---------------------"); 
textview.setTextSize(20);                                                                                  textview.setTextColor(android.graphics.Color.GRAY);
textview.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));       

menuLayout.addView(textview);

var cT40 = new android.widget.Button(ctx);
                cT40.setText("Extras Menu");
				cT40.setTextColor(android.graphics.Color.BLACK);

cT40.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
mb4();
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
droidPE.dismiss();
closeUI.dismiss();

				}
}); 
menuLayout.addView(cT40);


var scrollText = new android.widget.TextView(ctx);
scrollText.setText("⚠Extra Mods⚠ Tap The Groud With A Stick To Spawn An Alien");
scrollText.setTextSize(20);                                                                                  scrollText.setTextColor(android.graphics.Color.CYAN);
scrollText.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.RED));
scrollText.setEllipsize(android.text.TextUtils.TruncateAt.MARQUEE);
scrollText.setMarqueeRepeatLimit(-1);
scrollText.setSingleLine();
scrollText.setHorizontallyScrolling(true);
scrollText.setSelected(true);

menuLayout.addView(scrollText);
   
var cT33 = new android.widget.Button(ctx);
                cT33.setText("Credit");
				cT33.setTextColor(android.graphics.Color.BLACK);

cT33.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
mb3();
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
droidPE.dismiss();
closeUI.dismiss();

				}
}); 
menuLayout.addView(cT33);

   
textview = android.widget.TextView(ctx);            textview.setText("---------------------"); 
textview.setTextSize(20);                                                                                  textview.setTextColor(android.graphics.Color.GRAY);
textview.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));       

menuLayout.addView(textview);

textview = android.widget.TextView(ctx);            textview.setText("How Many Bugs Are Patched"); 
textview.setTextSize(10);                                                                                  textview.setTextColor(android.graphics.Color.WHITE);
textview.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));       

menuLayout.addView(textview);

var bar = new android.widget.RatingBar(ctx, null, android.R.attr.progressBarStyleHorizontal);
    bar.setMax(100);
    bar.setProgress(82);
   
  android.widget.Toast.makeText(ctx,new android.text.Html.fromHtml("<b><font color=#FFFC00>Can You Find </b><font color=#29FF00>My Hidden Button?"),0).show(); menuLayout.addView(bar);




//coding   
 var cmd= new android.widget.ImageView(ctx);
   cmd.setImageBitmap(android.graphics.BitmapFactory.decodeByteArray(android.util.Base64.decode(cmdd,0), 0, android.util.Base64.decode(cmdd,0).length))
  menuLayout.addView(cmd)

 var cmd= new android.widget.ImageView(ctx);
   cmd.setImageBitmap(android.graphics.BitmapFactory.decodeByteArray(android.util.Base64.decode(cmdd4,0), 0, android.util.Base64.decode(cmdd4,0).length))
  menuLayout.addView(cmd)

 
 var cmd= new android.widget.ImageView(ctx);
   cmd.setImageBitmap(android.graphics.BitmapFactory.decodeByteArray(android.util.Base64.decode(cmdd3,0), 0, android.util.Base64.decode(cmdd3,0).length))
  menuLayout.addView(cmd)


 var cmd= new android.widget.ImageView(ctx);
   cmd.setImageBitmap(android.graphics.BitmapFactory.decodeByteArray(android.util.Base64.decode(cmdd2,0), 0, android.util.Base64.decode(cmdd2,0).length))
  menuLayout.addView(cmd)

var cT27 = new android.widget.Button(ctx);
                cT27.setText("YouTube");
				cT27.setTextColor(android.graphics.Color.BLUE);
cT27.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
android.widget.Toast.makeText(ctx,"Opening the URL...",0).show();
						var intentBrowser = new android.content.Intent(ctx);
						intentBrowser.setAction(android.content.Intent.ACTION_VIEW);
						intentBrowser.setData(android.net.Uri.parse("https://www.youtube.com/c/AJ170"));
	ctx.startActivity(intentBrowser)

Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
droidPE.dismiss();
closeUI.dismiss();
				}
}); 
menuLayout.addView(cT27);

var cT26 = new android.widget.Button(ctx);
                cT26.setText("Twitter");
				cT26.setTextColor(android.graphics.Color.BLUE);
cT26.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
android.widget.Toast.makeText(ctx,"Opening the URL...",0).show();
						var intentBrowser = new android.content.Intent(ctx);
						intentBrowser.setAction(android.content.Intent.ACTION_VIEW);
						intentBrowser.setData(android.net.Uri.parse("https://twitter.com/AJ170_iOS_King?s=09"));
	ctx.startActivity(intentBrowser)

Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
droidPE.dismiss();
closeUI.dismiss();
				}
}); 
menuLayout.addView(cT26);

var cT28 = new android.widget.Button(ctx);
                cT28.setText("KiK");
				cT28.setTextColor(android.graphics.Color.BLUE);
cT28.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
android.widget.Toast.makeText(ctx,"Opening the URL...",0).show();
						var intentBrowser = new android.content.Intent(ctx);
						intentBrowser.setAction(android.content.Intent.ACTION_VIEW);
						intentBrowser.setData(android.net.Uri.parse("http://kik.me/AJ170.iPA"));
	ctx.startActivity(intentBrowser)

Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
droidPE.dismiss();
closeUI.dismiss();
				}
}); 
menuLayout.addView(cT28);

//Menu Background Settings
                       var background = new android.graphics.drawable.BitmapDrawable(scaledBackgroundDarkDirtImageDecoded);
                           background.setTileModeXY(android.graphics.Shader.TileMode.REPEAT, android.graphics.Shader.TileMode.REPEAT);
                       droidPE = new android.widget.PopupWindow(menuLayout1, ctx.getWindowManager().getDefaultDisplay().getWidth()/2.3, ctx.getWindowManager().getDefaultDisplay().getHeight());
			           droidPE.setBackgroundDrawable(background); droidPE.setAnimationStyle(android.R.style.Animation_Translucent);
droidPE.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.RIGHT | android.view.Gravity.TOP, 0, 0);
        }catch(error){
            print("The menu could not be displayed, because: " + error);
        }
    }}));
}

function leaveGame(){
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    ctx.runOnUiThread(new java.lang.Runnable({ run: function(){
        if(starterUI != null){
            starterUI.dismiss();
			starterUI = null;
        }
        if(closeUI != null){
            closeUI.dismiss();
			closeUI = null;
        }
        if(droidPE != null){
            droidPE.dismiss();
			droidPE = null;
        }
        if(gunUI != null){
            gunUI.dismiss();
			gunUI = null;
        }
        if(flyUI != null){
            flyUI.dismiss();
			flyUI = null;
        }
		if(controlUI != null){
			controlUI.dismiss();
			controlUI = null;
		}
    }}));
}

var backgroundDarkDirtImage1 = ""
var backgroundDarkDirtImageDecoded1 = new android.graphics.BitmapFactory.decodeByteArray(android.util.Base64.decode(backgroundDarkDirtImage1, 0), 0, android.util.Base64.decode(backgroundDarkDirtImage1, 0).length);
var scaledBackgroundDarkDirtImageDecoded1 = new android.graphics.Bitmap.createBitmap(backgroundDarkDirtImageDecoded1);



//Background
var backgroundDarkDirtImage = "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAABw0lEQVR4nM2WS0/CQBSFPwiPCosS0UhidOnCn+D//yW6kQgJ1RR5KS7aU50DE9wNZ9POdGZ6z7mPua2nx7s9QLna8Bef620wvsqH/GfdclWNB1n36P5ZUQbjNonReri93ANc9CuL58USOGSg79tsDMD79CVY5wq5Mn6+kF4BxYB8I8iX9zcjjn0X3LcOnSP4eckV6Mhnu/4IgElWWTyjslDfPbrd5/KxfK+xEMui9Ao0L+sFACUhw+dpNT/OB8AvQ/kwlj0fDOsf1OfWzH1degXESD4WI1ns9cCjOlb5NsVb9YMsjA2PofQKNL5eLYDDCtbJJ9V88QocMhC8xpOH854lUji9AnqJMStXcwC6xsCZKRbKfpjnQqw+pFfAK1PMZ265Z4PqhOCxJJxfHdBL7L4WfN7zPsb4IFsIFT4fBYRonhPmudd23fPN+iK8TZsfWl05HwXch265dz7yYS+/rtcf74ikkLJkVzNXFiVXoOmKZZHf+57/w6wHxHvAU/DYSq5AEwPOXCg33wC091/BvFdK76LVScV6SCG9AqeYyNenOiE9Y7Hh2SOkV8AnxNz7/WZDXcnG/fnRA7338/2udHIFfgBs9yLA5bCE1QAAAABJRU5ErkJggg==";
var backgroundDarkDirtImageDecoded = new android.graphics.BitmapFactory.decodeByteArray(android.util.Base64.decode(backgroundDarkDirtImage, 0), 0, android.util.Base64.decode(backgroundDarkDirtImage, 0).length);
var scaledBackgroundDarkDirtImageDecoded = new android.graphics.Bitmap.createBitmap(backgroundDarkDirtImageDecoded);

//Banner MCPE Main
var pmmm = ""

//Logo 2K+ Coding
var cmdd = "iVBORw0KGgoAAAANSUhEUgAAAUAAAABACAYAAABr564eAAAEGUlEQVR4nO3dX07cMBDH8aTiIqyQuAC3qMQbF+EgvQhvSNyCC1RCy1HSB+K2zO7ImcRjx5nv54WSOH/qrJIf42QzTtM0/G8cx+8TAKBz0zSN16b/qL0jALAXN+kfKfk9PT212xsAcJDObzIJkgABhDUOw0DyAxDCy8vLMAz/kiAJEEBYN7kG7+/vNfYDAIp7eHj49nv6SzfVBEmAAMJSEyDJD0Dv0nlMJsGEBAggLE6AAMLiBAggLE6AAMLiBAggrOx9gEd1Pn9enX463RZZ79L1WNvjy9Z+046/FOW4yP6M8rkkAQIIq3kCfPv8utL8vK1zpcld2Wpf+Y5+hd07+j82EiCAsJonwFrJb6u1NUO5nGyvJc6l21ubaK3rl/OXbte6fmv70rVA6/HUltNqarn2mq39rLWPnoBJgADCap4AP+Ya4F3lJLh0FHBrwiqV2JbOz1m7fi35WUcPc+vPtS89Smld3vtzsHT91n62/iUQBQkQQFjNEmAa/X1ttH1rTcW6nlL3E3rpff2t7OXzkWztZ61GGQUJEEBYzWuAz3Pt79ecCJ87GRVOvO4bXLq+tbW4tftr3a+jWDvq7c2rn492/DQkQABhVU+ActT3o3EtMCdXI/FKftb7wqzJb+19Zzne69e24/VMsDb63Jq1n637z7PAAHBw6nuBS70TJNX2ksf5Z0p89+KnVPv+QADHI98Jkt4PTAIEENbmGqD8NhdZ05Ojuvfz/JT40nJvIimm+R+f12sWJEMAW5EAAYS1OQHKb3O5E4nuTSQ+WftLCe+3mH6XuT+w1TPEAI6DBAggLLf7AGUylLU8LenJ0WDtyRCSH4CtSIAAwqr2JMhFYpsTn6zlPSqjvqWdz+er00+nk8vy3u1LS9u39ket/fO2tv/lcmv7o9Xx33oce/sckAABhNX8WeBnZbqX3BWq9Hzv9tb5Xnq54ues7d9S/b7X43tUJEAAYVVPgHLU91FM9+Z15dRqNq3a16YlWY13rTS3XCly+6VqgBqvfrPWNpcut3ckQABhVU+A8smOWqO+mq1XbGvyKd1eW947iSzVqlZaS+v9KdVvuc/RUWuSJEAAYVVPgHt758fa0Tzv++SWtvcajWxlaa0zl6B7/f+3kuvPvdeg1yIBAgir2VvhWn2bS6kkZk0Y3u2PolQ/9Z6ENXu/z7O3/iYBAgirWQJs9W0uW2tH1uW921vnW9W6z856/6DXfrWuLbb+fFn3R2vXSxIkAQIIy/2tcL3r7YoG4BJvhQMAoVkNsBckP+C4SIAAwuIECCAsToAAwlJrgGnUhNFgAL2So78SCRBAWDfTNI3DMAzjOF69HzB3BgWAXpEAAYQ1TtP0fYKSBAGgd+kJkPSXLwkQQFgXCfDvjDkJAsBRpOSXkAABhPUHCu+KMg1KktQAAAAASUVORK5CYII"

//Featured
var cmdd3 = "iVBORw0KGgoAAAANSUhEUgAAAUAAAABACAYAAABr564eAAAG7UlEQVR4nO3dSYwUVRzH8W/DzDDAMMyAIJuCQ2RRIkQwitF4MB4kJmIimpB4MJogJEQ96IWD8eCBgxuaAPFIYkw44EKMUWLiwRiVJSAguAxCHOMAI9vA7NMe/lViF1OprqWre+b9Ppeeqnr1+nV159Vv3qvqLhSLRf6vUCiUrhARGeWKxWJhpPXj8m6IiEitqPP/8JPfunXrqtcaEZEK8Pu3YBJUAhQRZxUAJT8RccLu3buB60lQCVBEnFUXVWD//v15tENEJHOrVq0qWfb/0/XHBJUARcRZoQlQyU9ERju/HwsmQZ8SoIg4Sx2giDhLHaCIOEsdoIg4Sx2giDgr8jrAsaq9/dSI69vabsuk3nLriVteTNrjFvb+B7nyvgSPpyufSyVAEXGWcwkw6syW95lvrJ9ha52Ov9uUAEXEWc4lwKSSjhkG9wuWD0uc5T5f0kQbt/7g9nKfN279cctnPRYY9/0M2y9sTC2qfJi0xzmsvOsJWAlQRJyVWwJ8Z76deSa22PL4Ovti1v5r9hMkm37O90xU7ixg2oSVVWIrd3uUpPWHJb+4s4dR9UeVz3qWMu7+lf4clFt/3OMc9z8BVygBioizckuABa+rndBkya+h2VaM+2cYgPcW2ploaNDKNUy0x6EBe9z8e7YJMe6YStx6srqesFJGe/3VUiufD1/a4xw2RukKJUARcVZuCbBoQY/BXn/ZVgx7ia9+kj02eQmxsdX65r5LVu7dYTtDvXiqtmatKnXdYLn1JR2LS9reuO0aK5LOeldapY7zWHv/wigBioizMk+A/lhecMzupdO2vKPZttdPsqQ3POQ1pMGWm2aNB6BliU0X9567CkBfd0/WTS1L1BhJpZJf3OvC4ia/pNedRal0/WHPU6l7gsNmn6st7nGO237dCywiMsaF/i5w3N8E8ZNfQ5Mtbzg88plj53IrN/km63sHe+06QH+WePodNhjYOGMyAD1/dwNw9oglwOd+WBCrXSIiwd8E8X8fWAlQRJyV2RjgtIXWl9ZNtMdd004DcM27zm+438pNmW1jfDNWtNr2Tkt43R1W4MqfNk3cc96WB3tt/4INEYaOMYqIxKUEKCLOSp0Aty+1RDZtaTMAxWFvTM+LbF3HLOH1XiyWbL9y+jIA4ydYH9w0t8G2e7PCQ332R+uiKQAs3/ImAKc/etkKbEvbchFxnRKgiDgrdQLc6H2Ly2cPdAIw/e4lAHQdOAFA62Kb1Z3zyFoAzn33OQDnj1wCYHjAbgWZ4N0bPGFaPQCTZluinHHfGgCGejusnkeftSfe9mnapouI45QARcRZqRPgl69akpv54DMAXDz6hbfFxvpal90OQMOM1QBMmnMAgPEnbQzw6lkb6xvwvhfQ75Lrp1gyvHrmIAD9F/YB0PnjWa/+WxO1t729vaxybW1tiepPym9X3s+btbSvI+z9yeu4RLU/bHu57Y76/MUtH7ZflLivM2n5cttbrc+/EqCIOCt1AhwesOv0mu/c4T3a+uNb7ZaQzm+PA9B16BUAZq5eCcDKrV/Z9n02xjd7zWEATrxlY3/nD18B4Nwh27/fJpN5/sCCtE0GRn/SGmuSJq+82hOWaJK2O6vyta5W3s8wSoAi4qzUCXDR5gsjrm9eOAuAlhV2j/HABW9W+J49JeX85PfXJ0sB6L9kd4B0n7Vk2eclv5Z5hbRNLRE8o0edieKOTSUdE8pq7CUsuaRtb1j5ao2ZhknbnnKPZ7n1BNXK8Y77erKqv9rJz6cEKCLOSj8L/LglsyXrFwBw88NbAZj35G8AdOxZDMDcJ06OuH9Px/sA/LH3F+D6HSPLN60AoO9CFwDz158B4OPXGgFYu2tOqnaXewaq9BhPuUkvrqjZyqwSZrBc3io9xlSppBK33rzbkdX7qTFAEZEalToBvvCT3Qny4TeW0G59+qmS7WHJz9d//nsA7v9gqGT90TfsDpKZq1eUrL/rdfu2mO0HLXluPJbPt8LEPSNWKxH5ws6slTrjJx0jE6kmJUARcVbqBLh3g92ZMdBt3/P39TrrU3u8sbzGqVbulofsNz6Cs8ZTl+8asd5lW66VLHfuuxeAyyd/BaD/2g27VFTWY4a1ptpjMWNVrYx11bpqHR8lQBFxVuoE+NjOmeUVPOg9vp22p28JPFZW3Hsb014vFjVLnLW8Xl/adtRqgsqr3ZW+7jFK0tcZ93pY3QssIpKTzH4VTkSkVulX4UREAtQBioiz1AGKiLPUAYqIs9QBioizQq8D9GdNNBssIqNVcPY3SAlQRJxVVywWCwCFQmHE6wGjelARkdFKCVBEnFUoFoulK0KSoIjIaOffAeL/56sEKCLOuiEB/rfBS4IiImOFn/x8SoAi4qx/AdRuElgn3LRwAAAAAElFTkSuQmCC"

//Android Logo
var cmdd2 = ""


//1K downloads
var cmdd4 = "iVBORw0KGgoAAAANSUhEUgAAAUAAAABACAYAAABr564eAAAEPklEQVR4nO3dP07cQBTH8eeIE3CDLBIloqCm4AhIiAvQcBs6GnokuAMNLRwABMsFaGhonSKZEE92GL/543/v+6liezwe7JX3t8923LRtK/9qmqY7AwBmrm3bZtP8H0MPBACmYsv9wyW/k5OT8UYDABW485ufBEmAAMxqRITkB8CE29tbEflKgiRAAGZtxRo8PDwMMQ4AKO7g4KAz7X7pupogCRCAWcEESPIDMHfuPOYnQYcECMAsToAAzOIECMAsToAAzOIECMCs6H2AS7Vev22cv1r9LNJv33607fFb7n4LHX+flePi708rn0sSIACzzCXA2Dfb0N98S/+GnTr2v20kQABmmUuAqVJrhv56fvtQ4uy7vdREq+3fX953u9r+te1L1wK1xzO0XqimFmsfkrufQ+2tJ2ASIACzJpcAd3Z2OtOvr69VttP3KmBuwiqV2Pouj0ntP5T8tFcPY/3H2pe+Sqldv/bnoG//2v2s/SVgBQkQgFmjJUA/6TlnZ2ed6aurKxEpnwS1NRVtP6XuJ6xl7v2PZSqfDyd3P4dqlFaQAAGYVT0BxpLe6empiIg8PT19265WEsxV677Bvv2l1uJSx6sd11KkXvWurdZ+XtrxCyEBAjCrWALsm/Qcl/hCyc/Z39/v9DN0EozVSGolP+19Ydrkl3rfWUzt/kPbqfVMcOjq89i0+1k7fp4FBoCFC74XuO87QVzyOz4+FhGR8/Pzje1iSc93cXHx7fLHx0cREXl/f1f1C8Ae/50g7v3AJEAAZhWrAbrkd3l5KSIiR0dHvdYLJb29vb1v13MJEABSkQABmFX8PkCX/O7u7jrTqUnPeXl5KTA6APhCAgRgVrEE6F/l3d7eFhGR6+trESHpAZgeEiAAs4olwJubm8707u5ur/VCie/z81NEwld7S93/t16vRURktVolrecL9VO7fWmh7Q89jlSpx7W23HFN9e+aKxIgALOyE6D/TO7h4aGIiDw/P3fmx2p79/f3G+fXetIjlnBi68WSm1teu712udZQ2wHGQAIEYFaxGmAoCfqGTnohfuLKpe2ndvux9K1dpibjkKnXcGPjm3vNda5IgADMKv4kiJ8EPz4+OtNL+99btEmldPvQ+toEkmuo2mRu/6njzK3hxo4TCW8cJEAAZlV7J8jU3t1Rmvabu1Z7bW1tqqY+7twabCjBx34JTHV/LAUJEIBZo70XeC60NaGQ2u1RR9+aYa6+NUY+F2WRAAGYZS4B5l411dZsarfXLtca+u8snahCCarU3xXbboz2/r+p10rnhgQIwKzst8ItHd+4wPzxVjgA8JirAWqR/IDlIgECMIsTIACzOAECMCtYA3RXTbgaDGCu/Ku/PhIgALO22rZtRESaptl4P2DsDAoAc0UCBGBW07Ztd0YgCQLA3LknQNwvXxIgALP+S4B/F/xJggCwFC75OSRAAGb9AlkFgx+paTkXAAAAAElFTkSuQmCC"
