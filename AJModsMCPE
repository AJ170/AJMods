/*                      ___
    / \                |     |
  / ∆ \     ___    |     |
 / ___ \   \   \__|     |
/          \   \______  |
* @author AJ170

Made By AJ170 If You Want To Use Any Code Please Ask I Will More Than Likly Let You Contact Me @AJ170_iOS_King (Twitter) or kik.me/AJ170.iPA (KiK)
*/

//Widgets
var Button = android.widget.Button;
var LinearLayout = android.widget.LinearLayout;
var RelativeLayout = android.widget.RelativeLayout;
var PopupWindow = android.widget.PopupWindow;
var ScrollView = android.widget.ScrollView;
var TextView = android.widget.TextView;
var CheckBox = android.widget.CheckBox;
var Switch = android.widget.Switch;
var ImageView = android.widget.ImageView;
var EditText = android.widget.EditText;
var CompoundButton = android.widget.CompoundButton;
var SeekBar = android.widget.SeekBar;
var ProgressBar = android.widget.ProgressBar;
var ToggleButton = android.widget.ToggleButton;
var Toast = android.widget.Toast;
var FrameLayout = android.widget.FrameLayout;

//Graphics and View
var Typeface = android.graphics.Typeface;
var Color = android.graphics.Color;
var View = android.view.View;
var ColorDrawable = android.graphics.drawable.ColorDrawable;
var Gravity = android.view.Gravity;
var BitmapFactory = android.graphics.BitmapFactory;
var ViewGroup = android.view.ViewGroup;
var GradientDrawable = android.graphics.drawable.GradientDrawable;
var Bitmap = android.graphics.Bitmap;
var Canvas = android.graphics.Canvas;
var Paint = android.graphics.Paint;
var Path = android.graphics.Path;
var LinearGradient = android.graphics.LinearGradient;
var Shader = android.graphics.Shader;
var MotionEvent = android.view.MotionEvent;
var PorterDuff = android.graphics.PorterDuff;
var BitmapDrawable = android.graphics.drawable.BitmapDrawable;
var StateListDrawable = android.graphics.drawable.StateListDrawable;
var ViewTreeObserver = android.view.ViewTreeObserver;
var TranslateAnimation = android.view.animation.TranslateAnimation;
var Animation = android.view.animation.Animation;
var ClipDrawable = android.graphics.drawable.ClipDrawable;
var LightingColorFilter = android.graphics.LightingColorFilter;
var WindowManager = android.view.WindowManager;

//Other
var Environment = android.os.Environment;
var File = java.io.File;
var FileOutputStream = java.io.FileOutputStream;
var Runnable = java.lang.Runnable;
var Base64 = android.util.Base64;

var AlertDialog = {
    Builder: function() {
        return android.app.AlertDialog.Builder;
    }
}

var DialogInterface = android.content.DialogInterface;
var DataOutputStream = java.io.DataOutputStream;
var BufferedReader = java.io.BufferedReader;
var Thread = java.lang.Thread;
var TypedValue = android.util.TypedValue;
var Byte = java.lang.Byte;
var Context = android.content.Context;
var Handler = android.os.Handler;
var TextWatcher = android.text.TextWatcher;
var FileWriter = java.io.FileWriter;
var InputStreamReader = java.io.InputStreamReader;
var SpannableStringBuilder = android.text.SpannableStringBuilder;
var ImageSpan = android.text.style.ImageSpan;
var Spannable = android.text.Spannable;
var StringBuffer = java.lang.StringBuffer;
var Html = android.text.Html;
var ZipFile = java.util.zip.ZipFile;
var ByteBuffer = java.nio.ByteBuffer;
var MediaPlayer = android.media.MediaPlayer;
var String = java.lang.String;
var StringBuilder = java.lang.StringBuilder;
var printWriter = java.io.printWriter;

//Web
var URL = java.net.URL;
var Uri = android.net.Uri;
var WebView = android.webkit.WebView;
var MalformedURLException = java.net.MalformedURLException;

//BlockLauncher and Mozilla JavaScript
var ScriptManager = net.zhuoweizhang.mcpelauncher.ScriptManager;
var Utils = net.zhuoweizhang.mcpelauncher.Utils;
var PatchManager = net.zhuoweizhang.mcpelauncher.PatchManager;
var ScriptableObject = org.mozilla.javascript.ScriptableObject;

var cx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get()
var metrics = cx.getResources().getDisplayMetrics();
var dp = metrics.density;
var buttonX=5*dp,buttonY=5*dp;
var pressed = false;
var mX = null, mY = null;
var greenPos = 0;

function CNameOpen() {
ctx.runOnUiThread(new java.lang.Runnable(){
run: function(){ 
try{
CustomN = new android.widget.PopupWindow();
var Layer = new android.widget.LinearLayout(ctx);
var Name = new android.widget.EditText(ctx);
var CNDialog = new android.app.Dialog(ctx);
var xit = new android.widget.Button(ctx);

CNDialog.setTitle("Input Name");
CNDialog.setContentView(Layer);

Layer.setOrientation(android.widget.LinearLayout.VERTICAL);
CNDialog.show();
Layer.addView(Name);
Layer.addView(xit);

Name.setHint("Enter Name");
xit.setText("Done");

xit.setOnClickListener(new android.view.View.OnClickListener(){
onClick: function(view){
dup = Name.getText().toString();
CNDialog.dismiss();
STOpen();

}
});

CustomN.setHeight(android.widget.LinearLayout.LayoutParams.WRAP_CONTENT);
CustomN.setWidth(android.widget.LinearLayout.LayoutParams.WRAP_CONTENT);
CustomN.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.TOP, 0, 0);
} catch (e){
print("Error :(:"+e)
}
}});
}

function Info() {
ctx.runOnUiThread(new java.lang.Runnable(){
run: function(){ 
try{
Log = new android.widget.PopupWindow();
var toplayer = new android.widget.LinearLayout(ctx);
var Layer = new android.widget.LinearLayout(ctx);
var scroller = new android.widget.ScrollView(ctx);
var third = new android.widget.TextView(ctx);
var second = new android.widget.TextView(ctx);
var first = new android.widget.TextView(ctx);
var thirdy = new android.widget.TextView(ctx);
var secondy = new android.widget.TextView(ctx);
var firsty = new android.widget.TextView(ctx);
var buggy = new android.widget.TextView(ctx);
var support = new android.widget.TextView(ctx);
var Dialogy = new android.app.Dialog(ctx);
var Exit = new android.widget.Button(ctx);

Dialogy.setTitle("Important Info:");
Dialogy.setContentView(toplayer);

scroller.addView(Layer);
toplayer.addView(scroller);

toplayer.setOrientation(android.widget.LinearLayout.HORIZONTAL);
Layer.setOrientation(android.widget.LinearLayout.VERTICAL);
Dialogy.show();
Layer.addView(third);
Layer.addView(second);
Layer.addView(first);
Layer.addView(thirdy);
Layer.addView(secondy);
Layer.addView(firsty);
Layer.addView(buggy);
Layer.addView(support);
Layer.addView(Exit);

buggy.setTextSize(20);

third.setText("Press And Hold Menu Button To Move It!");
second.setText("\nIf Health Indactors Have No Images Relaunch BlockLauncher!");
first.setText("\nMenu Looks Better On White Theme!");
thirdy.setText("\nThank You All For Supporting My Menu I Love You All!");
secondy.setText("\nMessage Me On KiK If You Want To Be A Beta Tester! (Link In Menu)");
firsty.setText("\nAlways Room To Improove And Mods To Add!");
buggy.setText("\nBugs:");
support.setText("Sometimes You Cant Hit Dismiss \nBefore Turning Off Sniper/Lantern You Have To Select A Diffrent Item \n XYZ Teleporter Is Broken\nUnknown Bug(Pls. Report It)\n\n\n@AJ170_iOS_King\nYouTube AJ170 \nKiK AJ170.iPA \n(Links At The Bottom Of The Main Menu)");
Exit.setText("Done");

Exit.setOnClickListener(new android.view.View.OnClickListener(){
onClick: function(view){
Dialogy.dismiss();
}
});

Log.setHeight(android.widget.LinearLayout.LayoutParams.WRAP_CONTENT);
Log.setWidth(android.widget.LinearLayout.LayoutParams.WRAP_CONTENT);
Log.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.TOP, 0, 0);
} catch (e){
print("AJMODS MCPE FOUND A ERROR "+e)
}
}});
}

function STOpen() {
ctx.runOnUiThread(new java.lang.Runnable(){
run: function(){ 
try{
Custom = new android.widget.PopupWindow();
var Layer = new android.widget.LinearLayout(ctx);
var conti = new android.widget.Button(ctx);
var STDialog = new android.app.Dialog(ctx);
var xit = new android.widget.Button(ctx);

STDialog.setTitle("Enter Time");
STDialog.setContentView(Layer);

Layer.setOrientation(android.widget.LinearLayout.VERTICAL);
STDialog.show();
Layer.addView(conti);
Layer.addView(xit);

conti.setText("Continues Naming");
xit.setText("Once Naming");

conti.setOnClickListener(new android.view.View.OnClickListener(){
onClick: function(view){
STDialog.dismiss();
setName = 2;
cntr = 1;
}
});

xit.setOnClickListener(new android.view.View.OnClickListener(){
onClick: function(view){
STDialog.dismiss();
setName = 1;
}
});

Custom.setHeight(android.widget.LinearLayout.LayoutParams.WRAP_CONTENT);
Custom.setWidth(android.widget.LinearLayout.LayoutParams.WRAP_CONTENT);
Custom.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.TOP, 0, 0);
} catch (e){
print("The Time Dialog Is Malfunctioning:"+e)
}
}});
}


function color5(){
var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    ctx.runOnUiThread(new java.lang.Runnable({ run: function(){
        try{

var hackBtn5 = android.widget.TextView(ctx);

var blackBtn5 = android.widget.Button(ctx);
blackBtn5.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));

var whiteBtn5 = android.widget.Button(ctx);
whiteBtn5.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));

var pinkBtn5 = android.widget.Button(ctx);
pinkBtn5.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));

var redBtn5 = android.widget.Button(ctx);
redBtn5.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));

var blueBtn5 = android.widget.Button(ctx);
blueBtn5.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));


var mepBtn5 = android.widget.Button(ctx);
mepBtn5.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));


var tranBtn5 = android.widget.Button(ctx);
tranBtn5.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));

var cBtn5 = android.widget.Button(ctx);
cBtn5.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));
cBtn5.setTextColor(android.graphics.Color.BLACK);
hackBtn5.setText("Select Button Color");
hackBtn5.setTextSize(15);
hackBtn5.setTextColor(android.graphics.Color.BLACK);

var tmiLayout = new android.widget.LinearLayout(ctx);
tmiLayout.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.GREEN));
var tmiLayout1 = new android.widget.LinearLayout(ctx);
tmiLayout1.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.GREEN));
var tmiScroll = android.widget.ScrollView(ctx);
tmiScroll.addView(tmiLayout);
tmiLayout1.setOrientation(android.widget.LinearLayout.VERTICAL);
tmiLayout1.addView(tmiScroll);
 
 
var tmiDialog = new android.app.Dialog(ctx);
tmiDialog.setContentView(tmiLayout1);
tmiDialog.setTitle("Button colors");
tmiLayout.setGravity(android.view.Gravity.CENTER);

blackBtn5.setText("Blue");

whiteBtn5.setText("Green");

pinkBtn5.setText("Red");

redBtn5.setText("Yellow");

blueBtn5.setText("White");

mepBtn5.setText("Black");

tranBtn5.setText("Transparent");

cBtn5.setText("Close");


tmiDialog.show();
tmiLayout.setOrientation(android.widget.LinearLayout.VERTICAL);
//tmiLayout1.setPadding(25);
tmiLayout.addView(hackBtn5);
tmiLayout.addView(blackBtn5);
tmiLayout.addView(whiteBtn5);
tmiLayout.addView(pinkBtn5);
tmiLayout.addView(redBtn5);
tmiLayout.addView(blueBtn5);
tmiLayout.addView(mepBtn5);
tmiLayout.addView(tranBtn5);
tmiLayout.addView(cBtn5);

blackBtn5.setOnClickListener(new android.view.View.OnClickListener(){
onClick: function(viewarg){


Backmenu.dismiss();
BackMenu();
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
mbd12();
BUTcurr2 = BUTblue2
mb12();
             

}});


 whiteBtn5.setOnClickListener(new android.view.View.OnClickListener(){
onClick: function(viewarg){


Backmenu.dismiss();
BackMenu();
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
mbd12();
BUTcurr2 = BUTgreen2
mb12();


}});


pinkBtn5.setOnClickListener(new android.view.View.OnClickListener(){
onClick: function(viewarg){


Backmenu.dismiss();
BackMenu();
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
mbd12();
BUTcurr2 = BUTred2
mb12();

 
}});


redBtn5.setOnClickListener(new android.view.View.OnClickListener(){
onClick: function(viewarg){


Backmenu.dismiss();
BackMenu();
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
mbd12();
BUTcurr2 = BUTyellow2
mb12();

 
}});


blueBtn5.setOnClickListener(new android.view.View.OnClickListener(){
onClick: function(viewarg){


Backmenu.dismiss();
BackMenu();
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
mbd12();
BUTcurr2 = BUTwhite2
mb12();

 
}});

mepBtn5.setOnClickListener(new android.view.View.OnClickListener(){
onClick: function(viewarg){


Backmenu.dismiss();
BackMenu();
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
mbd12();
BUTcurr2 = BUTblack2
mb12();

 
}});


tranBtn5.setOnClickListener(new android.view.View.OnClickListener(){
onClick: function(viewarg){


Backmenu.dismiss();
BackMenu();
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
mbd12();
BUTcurr2 = BUTtran2
mb12();

 
}});


cBtn5.setOnClickListener(new  android.view.View.OnClickListener(){

onClick: function(viewarg){
           tmiDialog.dismiss();
}});






} catch(errr) {
print(errr);
}
}}));
}



function color3(){
var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    ctx.runOnUiThread(new java.lang.Runnable({ run: function(){
        try{

var hackBtn4 = android.widget.TextView(ctx);

var blackBtn4 = android.widget.Button(ctx);
blackBtn4.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));

var whiteBtn4 = android.widget.Button(ctx);
whiteBtn4.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));

var pinkBtn4 = android.widget.Button(ctx);
pinkBtn4.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));

var redBtn4 = android.widget.Button(ctx);
redBtn4.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));

var blueBtn4 = android.widget.Button(ctx);
blueBtn4.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));


var mepBtn3 = android.widget.Button(ctx);
mepBtn3.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));


var cBtn4 = android.widget.Button(ctx);
cBtn4.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));
cBtn4.setTextColor(android.graphics.Color.BLACK);
hackBtn4.setText("Select Button Text Color");
hackBtn4.setTextSize(15);
hackBtn4.setTextColor(android.graphics.Color.BLACK);

var tmiLayout = new android.widget.LinearLayout(ctx);
tmiLayout.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.GREEN));
var tmiLayout1 = new android.widget.LinearLayout(ctx);
tmiLayout1.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.GREEN));
var tmiScroll = android.widget.ScrollView(ctx);
tmiScroll.addView(tmiLayout);
tmiLayout1.setOrientation(android.widget.LinearLayout.VERTICAL);
tmiLayout1.addView(tmiScroll);
 
 
var tmiDialog = new android.app.Dialog(ctx);
tmiDialog.setContentView(tmiLayout1);
tmiDialog.setTitle("Text Colors");
tmiLayout.setGravity(android.view.Gravity.CENTER);

blackBtn4.setText("Blue");

whiteBtn4.setText("Green");

pinkBtn4.setText("Red");

redBtn4.setText("Yellow");

blueBtn4.setText("White");

mepBtn3.setText("Black");

cBtn4.setText("Close");


tmiDialog.show();
tmiLayout.setOrientation(android.widget.LinearLayout.VERTICAL);
//tmiLayout1.setPadding(25);
tmiLayout.addView(hackBtn4);
tmiLayout.addView(blackBtn4);
tmiLayout.addView(whiteBtn4);
tmiLayout.addView(pinkBtn4);
tmiLayout.addView(redBtn4);
tmiLayout.addView(blueBtn4);
tmiLayout.addView(mepBtn3);
tmiLayout.addView(cBtn4);

blackBtn4.setOnClickListener(new android.view.View.OnClickListener(){
onClick: function(viewarg){


Backmenu.dismiss();
BackMenu();
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
mbd12();
BUTcurr = BUTblue
mb12();
             

}});


 whiteBtn4.setOnClickListener(new android.view.View.OnClickListener(){
onClick: function(viewarg){


Backmenu.dismiss();
BackMenu();
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
mbd12();
BUTcurr = BUTgreen
mb12();


}});


pinkBtn4.setOnClickListener(new android.view.View.OnClickListener(){
onClick: function(viewarg){


Backmenu.dismiss();
BackMenu();
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
mbd12();
BUTcurr = BUTred
mb12();

 
}});


redBtn4.setOnClickListener(new android.view.View.OnClickListener(){
onClick: function(viewarg){


Backmenu.dismiss();
BackMenu();
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
mbd12();
BUTcurr = BUTyellow
mb12();

 
}});


blueBtn4.setOnClickListener(new android.view.View.OnClickListener(){
onClick: function(viewarg){


Backmenu.dismiss();
BackMenu();
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
mbd12();
BUTcurr = BUTwhite
mb12();

 
}});

mepBtn3.setOnClickListener(new android.view.View.OnClickListener(){
onClick: function(viewarg){


Backmenu.dismiss();
BackMenu();
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
mbd12();
BUTcurr = BUTblack
mb12();

 
}});


cBtn4.setOnClickListener(new  android.view.View.OnClickListener(){

onClick: function(viewarg){
           tmiDialog.dismiss();
}});






} catch(errr) {
print(errr);
}
}}));
}


function color4(){
var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    ctx.runOnUiThread(new java.lang.Runnable({ run: function(){
        try{

var hackBtn3 = android.widget.TextView(ctx);

var blackBtn3 = android.widget.Button(ctx);
blackBtn3.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));

var whiteBtn3 = android.widget.Button(ctx);
whiteBtn3.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));

var pinkBtn3 = android.widget.Button(ctx);
pinkBtn3.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));

var redBtn3 = android.widget.Button(ctx);
redBtn3.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));

var blueBtn3 = android.widget.Button(ctx);
blueBtn3.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));




var cBtn3 = android.widget.Button(ctx);
cBtn3.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));
cBtn3.setTextColor(android.graphics.Color.BLACK);
hackBtn3.setText("Select Button Size");
hackBtn3.setTextSize(15);
hackBtn3.setTextColor(android.graphics.Color.BLACK);

var tmiLayout = new android.widget.LinearLayout(ctx);
tmiLayout.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.GREEN));
var tmiLayout1 = new android.widget.LinearLayout(ctx);
tmiLayout1.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.GREEN));
var tmiScroll = android.widget.ScrollView(ctx);
tmiScroll.addView(tmiLayout);
tmiLayout1.setOrientation(android.widget.LinearLayout.VERTICAL);
tmiLayout1.addView(tmiScroll);
 
 
var tmiDialog = new android.app.Dialog(ctx);
tmiDialog.setContentView(tmiLayout1);
tmiDialog.setTitle("Button Sizes");
tmiLayout.setGravity(android.view.Gravity.CENTER);

blackBtn3.setText("Extra Small");

whiteBtn3.setText("Small");

pinkBtn3.setText("Normal");

redBtn3.setText("Large");

blueBtn3.setText("Extra Large");


cBtn3.setText("Close");


tmiDialog.show();
tmiLayout.setOrientation(android.widget.LinearLayout.VERTICAL);
//tmiLayout1.setPadding(25);
tmiLayout.addView(hackBtn3);
tmiLayout.addView(blackBtn3);
tmiLayout.addView(whiteBtn3);
tmiLayout.addView(pinkBtn3);
tmiLayout.addView(redBtn3);
tmiLayout.addView(blueBtn3);
tmiLayout.addView(cBtn3);

blackBtn3.setOnClickListener(new android.view.View.OnClickListener(){
onClick: function(viewarg){


Backmenu.dismiss();
BackMenu();
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
mbd12();
BUTsize = BUTsize1
mb12();
             

}});


 whiteBtn3.setOnClickListener(new android.view.View.OnClickListener(){
onClick: function(viewarg){


Backmenu.dismiss();
BackMenu();
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
mbd12();
BUTsize = BUTsize2
mb12();


}});


pinkBtn3.setOnClickListener(new android.view.View.OnClickListener(){
onClick: function(viewarg){


Backmenu.dismiss();
BackMenu();
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
mbd12();
BUTsize = BUTsize3
mb12();

 
}});


redBtn3.setOnClickListener(new android.view.View.OnClickListener(){
onClick: function(viewarg){


Backmenu.dismiss();
BackMenu();
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
mbd12();
BUTsize = BUTsize5
mb12();

 
}});


blueBtn3.setOnClickListener(new android.view.View.OnClickListener(){
onClick: function(viewarg){


Backmenu.dismiss();
BackMenu();
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
mbd12();
BUTsize = BUTsize6
mb12();

 
}});


cBtn3.setOnClickListener(new  android.view.View.OnClickListener(){

onClick: function(viewarg){
           tmiDialog.dismiss();
}});






} catch(errr) {
print(errr);
}
}}));
}


function color2(){
var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    ctx.runOnUiThread(new java.lang.Runnable({ run: function(){
        try{

var hackBtn2 = android.widget.TextView(ctx);

var blackBtn2 = android.widget.Button(ctx);
blackBtn2.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));

var whiteBtn2 = android.widget.Button(ctx);
whiteBtn2.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));

var pinkBtn2 = android.widget.Button(ctx);
pinkBtn2.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));

var redBtn2 = android.widget.Button(ctx);
redBtn2.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));

var blueBtn2 = android.widget.Button(ctx);
blueBtn2.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));


var ltgrayBtn2 = android.widget.Button(ctx);
ltgrayBtn2.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));


var grayBtn2 = android.widget.Button(ctx);
grayBtn2.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));


var drkgrayBtn2 = android.widget.Button(ctx);
drkgrayBtn2.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));


var ylwBtn2 = android.widget.Button(ctx);
ylwBtn2.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));


var cyanBtn2 = android.widget.Button(ctx);
cyanBtn2.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));


var grnBtn2 = android.widget.Button(ctx);
grnBtn2.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));


var cBtn2 = android.widget.Button(ctx);
cBtn2.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));
cBtn2.setTextColor(android.graphics.Color.BLACK);
hackBtn2.setText("Solid Colors");
hackBtn2.setTextSize(15);
hackBtn2.setTextColor(android.graphics.Color.BLACK);

var tmiLayout = new android.widget.LinearLayout(ctx);
tmiLayout.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.GREEN));
var tmiLayout1 = new android.widget.LinearLayout(ctx);
tmiLayout1.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.GREEN));
var tmiScroll = android.widget.ScrollView(ctx);
tmiScroll.addView(tmiLayout);
tmiLayout1.setOrientation(android.widget.LinearLayout.VERTICAL);
tmiLayout1.addView(tmiScroll);
 
 
var tmiDialog = new android.app.Dialog(ctx);
tmiDialog.setContentView(tmiLayout1);
tmiDialog.setTitle("Color Menu 2");
tmiLayout.setGravity(android.view.Gravity.CENTER);
blackBtn2.setText("Black");

whiteBtn2.setText("White");

pinkBtn2.setText("Magenta");

redBtn2.setText("Red");

blueBtn2.setText("Blue");

ltgrayBtn2.setText("Light Gray");

grayBtn2.setText("Gray");

drkgrayBtn2.setText("Dark Gray");

ylwBtn2.setText("Yellow");

cyanBtn2.setText("Cyan");

grnBtn2.setText("Green");


cBtn2.setText("Close");


tmiDialog.show();
tmiLayout.setOrientation(android.widget.LinearLayout.VERTICAL);
//tmiLayout1.setPadding(25);
tmiLayout.addView(hackBtn2);
tmiLayout.addView(blackBtn2);
tmiLayout.addView(whiteBtn2);
tmiLayout.addView(pinkBtn2);
tmiLayout.addView(redBtn2);
tmiLayout.addView(blueBtn2);
tmiLayout.addView(ltgrayBtn2);
tmiLayout.addView(grayBtn2);
tmiLayout.addView(drkgrayBtn2);
tmiLayout.addView(ylwBtn2);
tmiLayout.addView(cyanBtn2);
tmiLayout.addView(grnBtn2);

tmiLayout.addView(cBtn2);

blackBtn2.setOnClickListener(new android.view.View.OnClickListener(){
onClick: function(viewarg){


Backmenu.dismiss();
GUIColor = GUIColor25
BackMenu();
currentColour = "black";
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
mbd12();
mb12();
             

}});


 whiteBtn2.setOnClickListener(new android.view.View.OnClickListener(){
onClick: function(viewarg){


Backmenu.dismiss();
GUIColor = GUIColor24
currentColour = "white";
BackMenu();
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
mbd12();
mb12();


}});


pinkBtn2.setOnClickListener(new android.view.View.OnClickListener(){
onClick: function(viewarg){


Backmenu.dismiss();
GUIColor = GUIColor22
BackMenu();
currentColour = "pink";
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
mbd12();
mb12();

 
}});


redBtn2.setOnClickListener(new android.view.View.OnClickListener(){
onClick: function(viewarg){


Backmenu.dismiss();
GUIColor = GUIColor23
BackMenu();
currentColour = "red";
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
mbd12();
mb12();

 
}});


blueBtn2.setOnClickListener(new android.view.View.OnClickListener(){
onClick: function(viewarg){


Backmenu.dismiss();
GUIColor = GUIColor21
BackMenu();
currentColour = "blue";
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
mbd12();
mb12();

 
}});


ltgrayBtn2.setOnClickListener(new android.view.View.OnClickListener(){
onClick: function(viewarg){


Backmenu.dismiss();
GUIColor = GUIColor16
BackMenu();
currentColour = "Light Gray";
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
mbd12();
mb12();

 
}});


grayBtn2.setOnClickListener(new android.view.View.OnClickListener(){
onClick: function(viewarg){


Backmenu.dismiss();
GUIColor = GUIColor17
BackMenu();
currentColour = "Gray";
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
mbd12();
mb12();

 
}});


drkgrayBtn2.setOnClickListener(new android.view.View.OnClickListener(){
onClick: function(viewarg){


Backmenu.dismiss();
GUIColor = GUIColor18
BackMenu();
currentColour = "Dark Gray";
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
mbd12();
mb12();

 
}});


ylwBtn2.setOnClickListener(new android.view.View.OnClickListener(){
onClick: function(viewarg){


Backmenu.dismiss();
GUIColor = GUIColor20
BackMenu();
currentColour = "yellow";
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
mbd12();
mb12();

 
}});


cyanBtn2.setOnClickListener(new android.view.View.OnClickListener(){
onClick: function(viewarg){


Backmenu.dismiss();
GUIColor = GUIColor19
BackMenu();
currentColour = "cyan";
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
mbd12();
mb12();

 
}});


grnBtn2.setOnClickListener(new android.view.View.OnClickListener(){
onClick: function(viewarg){


Backmenu.dismiss();
GUIColor = GUIColor15
BackMenu();
currentColour = "green";
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
mbd12();
mb12();

 
}});




cBtn2.setOnClickListener(new  android.view.View.OnClickListener(){

onClick: function(viewarg){
           tmiDialog.dismiss();
}});






} catch(errr) {
print(errr);
}
}}));
}

///////////////
function color1(){
var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    ctx.runOnUiThread(new java.lang.Runnable({ run: function(){
        try{

var hackBtn = android.widget.TextView(ctx);

var blackBtn = android.widget.Button(ctx);
blackBtn.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));

var whiteBtn = android.widget.Button(ctx);
whiteBtn.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));

var pinkBtn = android.widget.Button(ctx);
pinkBtn.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));

var redBtn = android.widget.Button(ctx);
redBtn.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));

var blueBtn = android.widget.Button(ctx);
blueBtn.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));


var ltgrayBtn = android.widget.Button(ctx);
ltgrayBtn.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));


var grayBtn = android.widget.Button(ctx);
grayBtn.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));


var drkgrayBtn = android.widget.Button(ctx);
drkgrayBtn.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));


var ylwBtn = android.widget.Button(ctx);
ylwBtn.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));


var cyanBtn = android.widget.Button(ctx);
cyanBtn.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));


var grnBtn = android.widget.Button(ctx);
grnBtn.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));


var traBtn = android.widget.Button(ctx);
traBtn.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));


var cBtn = android.widget.Button(ctx);
cBtn.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));
cBtn.setTextColor(android.graphics.Color.BLACK);
hackBtn.setText("Transparent Colors");
hackBtn.setTextSize(15);
hackBtn.setTextColor(android.graphics.Color.BLACK);

var tmiLayout = new android.widget.LinearLayout(ctx);
tmiLayout.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.GREEN));
var tmiLayout1 = new android.widget.LinearLayout(ctx);
tmiLayout1.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.GREEN));
var tmiScroll = android.widget.ScrollView(ctx);
tmiScroll.addView(tmiLayout);
tmiLayout1.setOrientation(android.widget.LinearLayout.VERTICAL);
tmiLayout1.addView(tmiScroll);
 
 
var tmiDialog = new android.app.Dialog(ctx);
tmiDialog.setContentView(tmiLayout1);
tmiDialog.setTitle("Color Menu 1");
tmiLayout.setGravity(android.view.Gravity.CENTER);
blackBtn.setText("Black");

whiteBtn.setText("White");

pinkBtn.setText("Pink");

redBtn.setText("Red");

blueBtn.setText("Blue");

ltgrayBtn.setText("Light Gray");

grayBtn.setText("Gray");

drkgrayBtn.setText("Dark Gray");

ylwBtn.setText("Yellow");

cyanBtn.setText("Cyan");

grnBtn.setText("Green");

traBtn.setText("Transparent");

cBtn.setText("Close");


tmiDialog.show();
tmiLayout.setOrientation(android.widget.LinearLayout.VERTICAL);
//tmiLayout1.setPadding(25);
tmiLayout.addView(hackBtn);
tmiLayout.addView(blackBtn);
tmiLayout.addView(whiteBtn);
tmiLayout.addView(pinkBtn);
tmiLayout.addView(redBtn);
tmiLayout.addView(blueBtn);
tmiLayout.addView(ltgrayBtn);
tmiLayout.addView(grayBtn);
tmiLayout.addView(drkgrayBtn);
tmiLayout.addView(ylwBtn);
tmiLayout.addView(cyanBtn);
tmiLayout.addView(grnBtn);
tmiLayout.addView(traBtn);
tmiLayout.addView(cBtn);

blackBtn.setOnClickListener(new android.view.View.OnClickListener(){
onClick: function(viewarg){


Backmenu.dismiss();
GUIColor = GUIColor2
BackMenu();
currentColour = "black";
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
mbd12();
mb12();
             

}});


 whiteBtn.setOnClickListener(new android.view.View.OnClickListener(){
onClick: function(viewarg){


Backmenu.dismiss();
GUIColor = GUIColor3
currentColour = "white";
BackMenu();
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
mbd12();
mb12();


}});


pinkBtn.setOnClickListener(new android.view.View.OnClickListener(){
onClick: function(viewarg){


Backmenu.dismiss();
GUIColor = GUIColor99
BackMenu();
currentColour = "pink";
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
mbd12();
mb12();

 
}});


redBtn.setOnClickListener(new android.view.View.OnClickListener(){
onClick: function(viewarg){


Backmenu.dismiss();
GUIColor = GUIColor4
BackMenu();
currentColour = "red";
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
mbd12();
mb12();

 
}});


blueBtn.setOnClickListener(new android.view.View.OnClickListener(){
onClick: function(viewarg){


Backmenu.dismiss();
GUIColor = GUIColor5
BackMenu();
currentColour = "blue";
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
mbd12();
mb12();

 
}});


ltgrayBtn.setOnClickListener(new android.view.View.OnClickListener(){
onClick: function(viewarg){


Backmenu.dismiss();
GUIColor = GUIColor6
BackMenu();
currentColour = "Light Gray";
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
mbd12();
mb12();

 
}});


grayBtn.setOnClickListener(new android.view.View.OnClickListener(){
onClick: function(viewarg){


Backmenu.dismiss();
GUIColor = GUIColor7
BackMenu();
currentColour = "Gray";
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
mbd12();
mb12();

 
}});


drkgrayBtn.setOnClickListener(new android.view.View.OnClickListener(){
onClick: function(viewarg){


Backmenu.dismiss();
GUIColor = GUIColor10
BackMenu();
currentColour = "Dark Gray";
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
mbd12();
mb12();

 
}});


ylwBtn.setOnClickListener(new android.view.View.OnClickListener(){
onClick: function(viewarg){


Backmenu.dismiss();
GUIColor = GUIColor8
BackMenu();
currentColour = "yellow";
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
mbd12();
mb12();

 
}});


cyanBtn.setOnClickListener(new android.view.View.OnClickListener(){
onClick: function(viewarg){


Backmenu.dismiss();
GUIColor = GUIColor9
BackMenu();
currentColour = "cyan";
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
mbd12();
mb12();

 
}});


grnBtn.setOnClickListener(new android.view.View.OnClickListener(){
onClick: function(viewarg){


Backmenu.dismiss();
GUIColor = GUIColor11
BackMenu();
currentColour = "green";
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
mbd12();
mb12();

 
}});


traBtn.setOnClickListener(new android.view.View.OnClickListener(){
onClick: function(viewarg){


Backmenu.dismiss();
GUIColor = GUIColor1
BackMenu();
currentColour = "transparant";
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
mbd12();
mb12();

 
}});



cBtn.setOnClickListener(new  android.view.View.OnClickListener(){

onClick: function(viewarg){
           tmiDialog.dismiss();
}});






} catch(errr) {
print(errr);
}
}}));
}




function hack(){
var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    ctx.runOnUiThread(new java.lang.Runnable({ run: function(){
        try{
var timeLayout = new android.widget.LinearLayout(ctx);

timeLayout.setGravity(android.view.Gravity.RIGHT);
timeLayout.setOrientation(android.widget.LinearLayout.VERTICAL);
timeLayout.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.GREEN));
var hackBtn = android.widget.TextView(ctx);
var flyBtn = android.widget.Button(ctx);
flyBtn.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));
var godBtn = android.widget.Button(ctx);
godBtn.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));
var insBtn = android.widget.Button(ctx);
insBtn.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));
var cBtn = android.widget.Button(ctx);
cBtn.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));
cBtn.setTextColor(android.graphics.Color.BLACK);
hackBtn.setText("Select Menu Position");
hackBtn.setTextSize(15);
hackBtn.setTextColor(android.graphics.Color.BLACK);
flyBtn.setText("Right");
godBtn.setText("Center");
insBtn.setText("Left");

cBtn.setText("Close");
var timeDialog = new android.app.Dialog(ctx);
timeDialog.show();
timeDialog.setContentView(timeLayout);
timeDialog.setTitle("Menu Position");

timeLayout.addView(hackBtn);
timeLayout.addView(flyBtn);
timeLayout.addView(godBtn);
timeLayout.addView(insBtn);
timeLayout.addView(cBtn);

flyBtn.setOnClickListener(new android.view.View.OnClickListener(){
onClick: function(viewarg){
              
                  mbd12();
Backmenu.dismiss();
GUIPos = GUIright
GUIPos1 = GUIcen
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
BackMenu();
mb12()
      
        
}
});


 godBtn.setOnClickListener(new android.view.View.OnClickListener(){
onClick: function(viewarg){
          
 
mbd12();
Backmenu.dismiss();
GUIPos = GUIcen
GUIPos1 = GUIcen
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
BackMenu();
mb12()
}


}

);

insBtn.setOnClickListener(new android.view.View.OnClickListener(){
onClick: function(viewarg){

mbd12();
Backmenu.dismiss();
GUIPos = GUIleft
GUIPos1 = GUIcen
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
BackMenu();
mb12()

 
}
});

cBtn.setOnClickListener(new  android.view.View.OnClickListener(){

onClick: function(viewarg){
           timeDialog.dismiss();
}});

} catch(errr) {
print(errr);
}
}}));
}




function teleportation(){
var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    ctx.runOnUiThread(new java.lang.Runnable({ run: function(){
        try{
var cancelBtn = android.widget.Button(ctx);
cancelBtn.setText("Cancel");
cancelBtn.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));
cancelBtn.setTextColor(android.graphics.Color.BLACK);
 var tpLayout = new android.widget.LinearLayout(ctx);
tpLayout.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.RED));
var etX = new android.widget.EditText(ctx);
var etY = new android.widget.EditText(ctx);
var etZ = new android.widget.EditText(ctx);
var txtX = android.widget.TextView(ctx);
txtX.setTextSize(12);
txtX.setText(" X:");
var txtY = android.widget.TextView(ctx);
txtY.setTextSize(12);
txtY.setText(" Y:");
var txtZ = android.widget.TextView(ctx);
txtZ.setTextSize(12);
txtZ.setText(" Z:");
var tpBtn = new android.widget.Button(ctx);
tpBtn.setText("XYZ Teleport");
tpBtn.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));
 etX.setInputType(number);
etY.setInputType(number);
etZ.setInputType(number);
etX.setText("0");
etY.setText("0");
etZ.setText("0");
etX.setHint("X");
etY.setHint("Y");
etZ.setHint("Z");
var tpDialog = new android.app.Dialog(ctx);
tpDialog.setContentView(tpLayout);
tpDialog.setTitle("XYZ Teleport"); tpLayout.setGravity(android.view.Gravity.CENTER);
tpLayout.setOrientation(android.widget.LinearLayout.VERTICAL);
tpLayout.addView(txtX);
tpLayout.addView(etX);
tpLayout.addView(txtY);
tpLayout.addView(etY);
tpLayout.addView(txtZ);
tpLayout.addView(etZ);
tpLayout.addView(tpBtn);
tpLayout.addView(cancelBtn);
tpDialog.show();
 tpBtn.setOnClickListener(new android.view.View.OnClickListener(){

onClick: function(viewarg){
if((etX.getText()==0 || etY.getText()==0 || etZ.getText()==0) && (etX.getText()!==0 || etY.getText()!== 0 || etZ.getText()!== 0)){
ModPE.showTipMessage("§4Must be different!");
tpDialog.dismiss();
} else {
var tx = parseInt(etX.getText());
var ty = parseInt(etY.getText());
var tz = parseInt(etZ.getText());

Entity.setPosition(getPlayerEnt(), tx, ty, tz);

tpDialog.dismiss();

}
}

});

cancelBtn.setOnClickListener(new android.view.View.OnClickListener(){ onClick: function(viewarg){
          
          tpDialog.dismiss();
}});

}catch(err){
            ModPE.showTipMessage("An error occured: " + err);
        }}}));

}

function tmiD(){
var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    ctx.runOnUiThread(new java.lang.Runnable({ run: function(){
        try{
var txtId = android.widget.TextView(ctx);
txtId.setText(" Item Id:");
txtId.setTextSize(12);
var txtAmount = android.widget.TextView(ctx);
txtAmount.setText(" Item Amount:");
txtAmount.setTextSize(12);
var txtData = android.widget.TextView(ctx);
txtData.setText(" Item Data:");
txtData.setTextSize(12);
var tmiLayout = new android.widget.LinearLayout(ctx);
tmiLayout.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.CYAN));
var tmiLayout1 = new android.widget.LinearLayout(ctx);
tmiLayout1.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.CYAN));
var tmiScroll = android.widget.ScrollView(ctx);
tmiScroll.addView(tmiLayout);
tmiLayout1.setOrientation(android.widget.LinearLayout.VERTICAL);
tmiLayout1.addView(tmiScroll);
var tmi = android.widget.Button(ctx);
var id = new android.widget.EditText(ctx);
var amount = new android.widget.EditText(ctx);
var data = new android.widget.EditText(ctx);
var add = new android.widget.Button(ctx);
add.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));
var cancel = new android.widget.Button(ctx);
cancel.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));
cancel.setTextColor(android.graphics.Color.BLACK);
 tmi.setText("Add Item To Inventory"); 
var tmiDialog = new android.app.Dialog(ctx);
tmiDialog.setContentView(tmiLayout1);
tmiDialog.setTitle("Add Item To Inventory");
tmiLayout.setGravity(android.view.Gravity.CENTER);
cancel.setText("Cancel");
   add.setText("Add");
id.setHint("Item ID");
id.setText("1");
amount.setHint("Amount");
amount.setText("1")
data.setHint("Data/Damage");
data.setText("0");
id.setInputType(numbers);
amount.setInputType(numbers);
data.setInputType(numbers);
var fullstack = android.widget.Button(ctx);
fullstack.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));
var currAmount = amount.getText()==1;
fullstack.setText(currAmount?"Fullstack":"One");

tmiDialog.show();
tmiLayout.setOrientation(android.widget.LinearLayout.VERTICAL);
//tmiLayout1.setPadding(25);
tmiLayout.addView(txtId);
tmiLayout.addView(id);
tmiLayout.addView(txtAmount);
tmiLayout.addView(amount);
tmiLayout.addView(txtData);
tmiLayout.addView(data);
tmiLayout.addView(fullstack);
tmiLayout.addView(add);
tmiLayout.addView(cancel);

fullstack.setOnClickListener(new android.view.View.OnClickListener(){
onClick: function(viewarg){
currAmount = !currAmount;
amount.setText(currAmount?"1":"64");
fullstack.setText(currAmount?"Fullstack":"One");
}});

 add.setOnClickListener(new android.view.View.OnClickListener(){

onClick: function(viewarg){

var itemId = parseInt(id.getText());
var iAmount = parseInt(amount.getText());
var iData = parseInt(data.getText());

if(itemId == null){

itemId = "1";

}

if(iData == null){

iData = "0";


}

Player.addItemInventory(itemId, iAmount, iData);

if(Level.getGameMode() == 1){

Entity.setCarriedItem(getPlayerEnt(), itemId, iAmount, iData);

}

tmiDialog.dismiss();





}


});
cancel.setOnClickListener (new android.view.View.OnClickListener(){
onClick : function(viewarg){

tmiDialog.dismiss();
}});
}
catch(e) {
print(e);

}}}));
}


function MainWeb() {
ctx.runOnUiThread(new java.lang.Runnable(){
run: function(){ 
try{
Weddy = new android.widget.PopupWindow();
var Layer = new android.widget.LinearLayout(ctx);
Weddy.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.CYAN));
var URL = new android.widget.EditText(ctx);
var Exit = new android.widget.Button(ctx);
var Wed = new android.app.Dialog(ctx);
Wed.setTitle("Browser");
Wed.setContentView(Layer);

Layer.setOrientation(android.widget.LinearLayout.VERTICAL);
Wed.show();
Layer.addView(URL);
Layer.addView(Exit);
Exit.setText("Search");

Exit.setOnClickListener(new android.view.View.OnClickListener(){
onClick: function(view){
Wed.dismiss();
ie = URL.getText().toString().replace(" ", "+").replace("@","%40");
Searched();
}
});

Weddy.setHeight(android.widget.LinearLayout.LayoutParams.WRAP_CONTENT);
Weddy.setWidth(android.widget.LinearLayout.LayoutParams.WRAP_CONTENT);
Weddy.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.TOP, 0, 0);
} catch (e){
print("The Searcher Can't Be Showed Right Now:"+e)
}
}});
}

function Searched() {
ctx.runOnUiThread(new java.lang.Runnable(){
run: function(){ 
try{
Webby = new android.widget.PopupWindow();
var Layer = new android.widget.LinearLayout(ctx);
var Back = new android.widget.Button(ctx);
var Web = new android.app.Dialog(ctx);
var WebKit=new android.webkit.WebView(ctx);
var Set=WebKit.getSettings();
Set.setJavaScriptEnabled(true);
WebKit.setWebChromeClient(new android.webkit.WebChromeClient());
WebKit.setWebViewClient(new android.webkit.WebViewClient());
sites = uri1 + ie + uri2 + ie + uri3;
WebKit.loadUrl(sites);

Web.setTitle("Browser");
Web.setContentView(Layer);

Layer.setOrientation(android.widget.LinearLayout.VERTICAL);
Web.show();
Layer.addView(WebKit);
Layer.addView(Back);
Back.setText("Back");

Back.setOnClickListener(new android.view.View.OnClickListener(){
onClick: function(view){
MainWeb()
Web.dismiss();
}
});

Webby.setHeight(android.widget.LinearLayout.LayoutParams.WRAP_CONTENT);
Webby.setWidth(android.widget.LinearLayout.LayoutParams.WRAP_CONTENT);
Webby.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.TOP, 0, 0);
} catch (e){
print("The Browser Can't Be Showed Right Now:"+e)
}
}});
}



function gameLoop(){
    var thisLoop = new Date;
    fps = 1000 / (thisLoop - lastLoop);
    lastLoop = thisLoop;
}

/* credit to alpha hack team for fps and special creative inv */
/***********************/
function toDirectionalVector(vector, yaw, pitch) {

    vector[0] = Math.cos(yaw) * Math.cos(pitch);
    vector[1] = Math.sin(pitch);
    vector[2] = Math.sin(yaw) * Math.cos(pitch);
}

ModPE.setItem(431,"blaze_rod",0,"§4§l§oM§ba§5g§2i§ec");

function useItem(x, y, z, a, b, c) {
    if (tp == true) {
        setPosition(getPlayerEnt(), x, y + 3.1, z)
    }
}


function attackHook(attacker, victim)
{
destroyerid=431; if(Player.getCarriedItem()==destroyerid&&Player.isPlayer(victim)==false){
Entity.setFireTicks(victim,5);
Entity.setHealth(victim, 3);
curticks=100;
curent=victim;
}

if(switched43)
{
Entity.setHealth(victim, 1);
Entity.setFireTicks(victim, 3);
}

if(switched42) {
    toDirectionalVector(mobDir, (getYaw() + 90) * DEG_TO_RAD, getPitch() * DEG_TO_RAD * -1);
    setVelX(victim, 5 * mobDir[0]);
    setVelZ(victim, 5 * mobDir[2]);
}

if (autocrit == true) {
        setPosition(getPlayerEnt(), Player.getX(), Player.getY() + 1.3, Player.getZ())
    }

if(switched49) {
    Level.addParticle(ParticleType.redstone,Entity.getX(victim),Entity.getY(victim)+1,Entity.getZ(victim)-1,0,0,0,3);
}

{
if(Entity.getEntityTypeId(victim)==15)
{
x="10";
}
else if(Entity.getEntityTypeId(victim)==10)
{
x="4"; 
}
else if(Entity.getEntityTypeId(victim)==11)
{
x="10"; 
}
else if(Entity.getEntityTypeId(victim)==12)
{
x="10"; 
}
else if(Entity.getEntityTypeId(victim)==13)
{
x="8"; 
}
else if(Entity.getEntityTypeId(victim)==14)
{
x="10"; 
}
else if(Entity.getEntityTypeId(victim)==16)
{
x="10"; 
}
else if(Entity.getEntityTypeId(victim)==17)
{
x="10"; 
}
else if(Entity.getEntityTypeId(victim)==32)
{
x="20"; 
}
else if(Entity.getEntityTypeId(victim)==33)
{
x="20"; 
}
else if(Entity.getEntityTypeId(victim)==34)
{
x="15"; 
}
else if(Entity.getEntityTypeId(victim)==35)
{
x="16"; 
}
else if(Entity.getEntityTypeId(victim)==36)
{
x="20"; 
}
else if(Entity.getEntityTypeId(victim)==37)
{
x="16"; 
}
else if(Entity.getEntityTypeId(victim)==38)
{
x="40"; 
}
else if(Entity.getEntityTypeId(victim)==39)
{
x="8"; 
}
else if(Entity.getEntityTypeId(victim)==22)
{
x="10"; 
}
else if(Entity.getEntityTypeId(victim)==18)
{
x="3"; 
}
else if(Entity.getEntityTypeId(victim)==19)
{
x="6"; 
}
else if(Entity.getEntityTypeId(victim)==40)
{
x="12"; 
}
else if(Entity.getEntityTypeId(victim)==41)
{
x="10"; 
}
else if(Entity.getEntityTypeId(victim)==42)
{
x="16"; 
}
else if(Entity.getEntityTypeId(victim)==43)
{
x="20"; 
}
else if(Entity.getEntityTypeId(victim)==44)
{
x="10"; 
}
var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get(); 
ctx.runOnUiThread(new java.lang.Runnable(){
run: function(){
 
try{
if(activatedGUI==true)
{
GUI.dismiss();
GUI2.dismiss();
GUI3.dismiss();
GUI4.dismiss();
activatedGUI=false;
}

activatedGUI=true;
GUI = new android.widget.PopupWindow();
var layout = new android.widget.LinearLayout(ctx);
layout.setOrientation(android.widget.LinearLayout.VERTICAL);
GUI.setContentView(layout);
GUI.setWidth(405);
GUI.setHeight(105);
var btn = new android.widget.Button(ctx);
layout.addView(btn);
btn.setBackgroundDrawable(mainimg);
btn.setText("\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n");
GUI.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.LEFT | android.view.Gravity.TOP, 10, 40);

GUI2 = new android.widget.PopupWindow();
var layout2 = new android.widget.LinearLayout(ctx);
layout2.setOrientation(android.widget.LinearLayout.VERTICAL);
GUI2.setContentView(layout2);
GUI2.setWidth(37);
GUI2.setHeight(75);
var btn2 = new android.widget.Button(ctx);
layout2.addView(btn2);
if(Entity.getEntityTypeId(victim)==15)
{
btn2.setBackgroundDrawable(villagerimg);
}
else if(Entity.getEntityTypeId(victim)==10)
{
btn2.setBackgroundDrawable(chickenimg);
}
else if(Entity.getEntityTypeId(victim)==11)
{
btn2.setBackgroundDrawable(cowimg);
}
else if(Entity.getEntityTypeId(victim)==12)
{
btn2.setBackgroundDrawable(pigimg);
}
else if(Entity.getEntityTypeId(victim)==13)
{
btn2.setBackgroundDrawable(sheepimg);
}
else if(Entity.getEntityTypeId(victim)==14)
{
btn2.setBackgroundDrawable(wolfimg);
}
else if(Entity.getEntityTypeId(victim)==16)
{
btn2.setBackgroundDrawable(mooshroomimg);
}
else if(Entity.getEntityTypeId(victim)==17)
{
btn2.setBackgroundDrawable(squidimg);
}
else if(Entity.getEntityTypeId(victim)==32)
{
btn2.setBackgroundDrawable(zombieimg);
}
else if(Entity.getEntityTypeId(victim)==33)
{
btn2.setBackgroundDrawable(creeperimg);
}
else if(Entity.getEntityTypeId(victim)==34)
{
btn2.setBackgroundDrawable(skeletonimg);
}
else if(Entity.getEntityTypeId(victim)==35)
{
btn2.setBackgroundDrawable(spiderimg);
}
else if(Entity.getEntityTypeId(victim)==36)
{
btn2.setBackgroundDrawable(zombiepigmanimg);
}
else if(Entity.getEntityTypeId(victim)==37)

{
btn2.setBackgroundDrawable(slimeimg);
}
else if(Entity.getEntityTypeId(victim)==38)
{
btn2.setBackgroundDrawable(endermanimg);
}
else if(Entity.getEntityTypeId(victim)==39)
{
btn2.setBackgroundDrawable(silverfishimg);
}
else if(Entity.getEntityTypeId(victim)==22)
{
btn2.setBackgroundDrawable(ocelotimg);
}
else if(Entity.getEntityTypeId(victim)==18)
{
btn2.setBackgroundDrawable(rabbitimg);
}
else if(Entity.getEntityTypeId(victim)==19)
{
btn2.setBackgroundDrawable(batimg);
}
else if(Entity.getEntityTypeId(victim)==40)
{
btn2.setBackgroundDrawable(cavespiderimg);
}
else if(Entity.getEntityTypeId(victim)==41)
{
btn2.setBackgroundDrawable(ghastimg);
}
else if(Entity.getEntityTypeId(victim)==42)
{
btn2.setBackgroundDrawable(magmacubeimg);
}
else if(Entity.getEntityTypeId(victim)==43)
{
btn2.setBackgroundDrawable(blazeimg);
}
else if(Entity.getEntityTypeId(victim)==44)
{
btn2.setBackgroundDrawable(zombieimg);
}
btn2.setText("\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n");
GUI2.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.LEFT | android.view.Gravity.TOP, 45, 55);

GUI3 = new android.widget.PopupWindow();
var layout3 = new android.widget.LinearLayout(ctx);
layout3.setOrientation(android.widget.LinearLayout.VERTICAL);
GUI3.setContentView(layout3);
GUI3.setWidth(250);
GUI3.setHeight(250);
var btn3 = new android.widget.Button(ctx);
layout3.addView(btn3);
btn3.setBackgroundDrawable(nothingimg);
if(Entity.getEntityTypeId(victim)==15)
{
btn3.setText("Villager"); 
}
else if(Entity.getEntityTypeId(victim)==10)
{
btn3.setText("Chicken"); 
}
else if(Entity.getEntityTypeId(victim)==11)
{
btn3.setText("Cow"); 
}
else if(Entity.getEntityTypeId(victim)==12)
{
btn3.setText("Pig"); 
}
else if(Entity.getEntityTypeId(victim)==13)
{
btn3.setText("Sheep"); 
}
else if(Entity.getEntityTypeId(victim)==14)
{
btn3.setText("Wolf"); 
}
else if(Entity.getEntityTypeId(victim)==16)
{
btn3.setText("Mooshroom"); 
}
else if(Entity.getEntityTypeId(victim)==17)
{
btn3.setText("Squid"); 
}
else if(Entity.getEntityTypeId(victim)==32)
{
btn3.setText("Zombie"); 
}
else if(Entity.getEntityTypeId(victim)==33)
{
btn3.setText("Creeper"); 
}
else if(Entity.getEntityTypeId(victim)==34)
{
btn3.setText("Skeleton"); 
}
else if(Entity.getEntityTypeId(victim)==35)
{
btn3.setText("Spider"); 
}
else if(Entity.getEntityTypeId(victim)==36)
{
btn3.setText("Pig Zombie"); 
}
else if(Entity.getEntityTypeId(victim)==37)
{
btn3.setText("Slime"); 
}
else if(Entity.getEntityTypeId(victim)==38)
{
btn3.setText("Enderman"); 
}
else if(Entity.getEntityTypeId(victim)==39)
{
btn3.setText("Silverfish"); 
}
else if(Entity.getEntityTypeId(victim)==22)
{
btn3.setText("Ocelot"); 
}
else if(Entity.getEntityTypeId(victim)==18)
{
btn3.setText("Rabbit"); 
}
else if(Entity.getEntityTypeId(victim)==19)
{
btn3.setText("Bat"); 
}
else if(Entity.getEntityTypeId(victim)==40)
{
btn3.setText("Cave Spider"); 
}
else if(Entity.getEntityTypeId(victim)==41)
{
btn3.setText("Ghast"); 
}
else if(Entity.getEntityTypeId(victim)==42)
{
btn3.setText("Magma Cube"); 
}
else if(Entity.getEntityTypeId(victim)==43)
{
btn3.setText("Blaze"); 
}
else if(Entity.getEntityTypeId(victim)==44)
{
btn3.setText("Zombie"); 
}
GUI3.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.LEFT | android.view.Gravity.TOP, NameX, NameY);

GUI4 = new android.widget.PopupWindow();
var layout4 = new android.widget.LinearLayout(ctx);
layout4.setOrientation(android.widget.LinearLayout.VERTICAL);
GUI4.setContentView(layout4);
GUI4.setWidth(250);
GUI4.setHeight(250);
var btn4 = new android.widget.Button(ctx);
layout4.addView(btn4);
btn4.setBackgroundDrawable(nothingimg);

btn4.setText(Entity.getHealth(victim)+ " / "+x);

GUI4.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.LEFT | android.view.Gravity.TOP, HealthX, HealthY);
}
catch(e)
{
}
}
})
start=true;
}
if(setName==1) {
	Entity.setNameTag(victim,dup);
	clientMessage("§4Continues Naming Disabled");
	setName = 0;
	dup = "";
}
if(setName==2)  {
	Entity.setNameTag(victim,dup);
	clientMessage("§2Continues Naming Enabled For 1 Minute");
}
}

function getRandomColor(){
var a=Object.keys(ChatColor);
return ChatColor[a[Math.floor(Math.random()*(a.length+1))]]
}


//Update Code//
var version="2.3";
var checkForUpdate=false;
var updateWindow=false;
var newUpdate;
var updateMod; 
var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get(); 
 
 function checkVersion() {
    var r  = new java.lang.Runnable() {
        run: function() {
            try {
                var urls= new java.net.URL("https://raw.githubusercontent.com/AJ170/AJMods/master/MasterVersion.txt");
                var check = urls.openConnection();
                check.setRequestMethod("GET");
                check.setDoOutput(true);
                check.connect();
                check.getContentLength();
                var script = check.getInputStream();
                var typeb = java.lang.reflect.Array.newInstance(java.lang.Byte.TYPE, 1024);
                var byteCount = 0; 
                var checkedVersion;
                while((byteCount = script.read(typeb)) != -1) { 
                    checkedVersion = new java.lang.String(typeb, 0, byteCount);               
                }
                newUpdate = checkedVersion;
                if(version+"\n" != checkedVersion) {
                    clientMessage("AJModsMCPE" + newUpdate);
                    updateWindow=true;
                }
                else if(version+"\n"==checkedVersion){
                clientMessage("There aren't any updates right now");
                }
            }
            catch(err) {
                clientMessage("Update check failed ");
                if(err=="JavaException: java.net.UnknownHostException: raw.githubusercontent.com") {
                                clientMessage("Cannot connect to the internet.");
                            }
                            else {
                                clientMessage("  Error: \n" + err);
                            } 
            }
        }
    }
    var threadt = new java.lang.Thread(r);
    threadt.start();
}
function updateVersion() {
    try {
        var upd = new android.app.AlertDialog.Builder(ctx);
        upd.setTitle("AJMods has an update!");
        upd.setMessage("AJMods has an update!\nDo you want to update it now?\nCurrent version: " + version + "\nNew version: " + newUpdate + "\nRestart after updating!");
        upd.setNegativeButton("Nope", new android.content.DialogInterface.OnClickListener() {
            onClick: function(par1) {
            dialog.dismiss(); 
   }
        });
        upd.setPositiveButton("Update!", new android.content.DialogInterface.OnClickListener() {
            onClick: function(par1) {
                var ru  = new java.lang.Runnable() {
                    run: function() {
                        try {
                            var urls = new java.net.URL("https://raw.githubusercontent.com/AJ170/AJMods/master/AJModsMCPE");
                            var check = urls.openConnection();
                            check.setRequestMethod("GET");
                            check.setDoOutput(true);
                            check.connect();
                            check.getContentLength();
                            var script = check.getInputStream();
                            var typeb = java.lang.reflect.Array.newInstance(java.lang.Byte.TYPE, 1024);
                            var byteCount = 0;
                            while((byteCount = script.read(typeb)) != -1) { 
                                updateMod += new java.lang.String(typeb, 0, byteCount);               
                            }
                            var modpeFolder = ctx.getDir("modscripts", 0);
                            var modpeFile = new java.io.File(modpeFolder, "AJModsMCPE.js");
                            var update = new java.io.PrintWriter(modpeFile);
                            update.write(updateMod);
                            update.flush();
                            update.close();
                             
                            try {
                                net.zhuoweizhang.mcpelauncher.ScriptManager.setEnabled(modpeFile, false);
                                net.zhuoweizhang.mcpelauncher.ScriptManager.setEnabled(modpeFile, true);
                                clientMessage("AJMods Mod has been downloaded and enabled!");
                                   
                            }
                            catch(err) {
                                clientMessage(" Error: \n" + err);
                            }
                        }
                        catch(err) {
                            clientMessage(" Error: \n" + err);
                        }
                    }
                }
                var threadt = new java.lang.Thread(ru);
                threadt.start();
            }
        });
        var dialog = upd.create();
        dialog.show() 
    }
    catch(err) {
        clientMessage(" Error: \n" + err);
    }
}
function modTick() {
var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get(); 
ctx.runOnUiThread(new java.lang.Runnable(){
run: function(){
if(activatedChangingGUI==1)
{
activatedChangingGUI=0;
GUI5 = new android.widget.PopupWindow();
var layout5 = new android.widget.LinearLayout(ctx);
layout5.setOrientation(android.widget.LinearLayout.VERTICAL);
GUI5.setContentView(layout5);
GUI5.setWidth(75);
GUI5.setHeight(75);
var btn5 = new android.widget.Button(ctx);
layout5.addView(btn5);
btn5.setText("-");
btn5.setOnClickListener(new android.view.View.OnClickListener({ 
onClick: function(viewarg)
{
NameX= NameX-5;
}
}));
GUI5.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.RIGHT | android.view.Gravity.BOTTOM, 5, 5);

GUI6 = new android.widget.PopupWindow();
var layout6 = new android.widget.LinearLayout(ctx);
layout6.setOrientation(android.widget.LinearLayout.VERTICAL);
GUI6.setContentView(layout6);
GUI6.setWidth(75);
GUI6.setHeight(75);
var btn6 = new android.widget.Button(ctx);
layout6.addView(btn6);
btn6.setText("+");
btn6.setOnClickListener(new android.view.View.OnClickListener({ 
onClick: function(viewarg)
{
NameX= NameX+5;
}
}));
GUI6.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.RIGHT | android.view.Gravity.BOTTOM, 5, 85);

GUI7 = new android.widget.PopupWindow();
var layout7 = new android.widget.LinearLayout(ctx);
layout7.setOrientation(android.widget.LinearLayout.VERTICAL);
GUI7.setContentView(layout7);
GUI7.setWidth(75);
GUI7.setHeight(75);
var btn7 = new android.widget.Button(ctx);
layout7.addView(btn7);
btn7.setText("-");
btn7.setOnClickListener(new android.view.View.OnClickListener({ 
onClick: function(viewarg)
{
NameY= NameY-5;
}
}));
GUI7.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.RIGHT | android.view.Gravity.BOTTOM, 85, 5);

 GUI8 = new android.widget.PopupWindow();
var layout8 = new android.widget.LinearLayout(ctx);
layout8.setOrientation(android.widget.LinearLayout.VERTICAL);
GUI8.setContentView(layout8);
GUI8.setWidth(75);
GUI8.setHeight(75);
var btn8 = new android.widget.Button(ctx);
layout8.addView(btn8);
btn8.setText("+");
btn8.setOnClickListener(new android.view.View.OnClickListener({ 
onClick: function(viewarg)
{
NameY= NameY+5;
}
}));
GUI8.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.RIGHT | android.view.Gravity.BOTTOM, 85, 85);

GUI9 = new android.widget.PopupWindow();
var layout9 = new android.widget.LinearLayout(ctx);
layout9.setOrientation(android.widget.LinearLayout.VERTICAL);
GUI9.setContentView(layout9);
GUI9.setWidth(75);
GUI9.setHeight(75);
var btn9 = new android.widget.Button(ctx);
layout9.addView(btn9);
btn9.setText("-");
btn9.setOnClickListener(new android.view.View.OnClickListener({ 
onClick: function(viewarg)
{
HealthX= HealthX-5;
}
}));
GUI9.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.RIGHT | android.view.Gravity.BOTTOM, 5, 165);

GUI10 = new android.widget.PopupWindow();
var layout10 = new android.widget.LinearLayout(ctx);
layout10.setOrientation(android.widget.LinearLayout.VERTICAL);
GUI10.setContentView(layout10);
GUI10.setWidth(75);
GUI10.setHeight(75);
var btn10 = new android.widget.Button(ctx);
layout10.addView(btn10);
btn10.setText("+");
btn10.setOnClickListener(new android.view.View.OnClickListener({ 
onClick: function(viewarg)
{
HealthX= HealthX+5;
}
}));
GUI10.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.RIGHT | android.view.Gravity.BOTTOM, 5, 245);

GUI11 = new android.widget.PopupWindow();
var layout11 = new android.widget.LinearLayout(ctx);
layout11.setOrientation(android.widget.LinearLayout.VERTICAL);
GUI11.setContentView(layout11);
GUI11.setWidth(75);
GUI11.setHeight(75);
var btn11 = new android.widget.Button(ctx);
layout11.addView(btn11);
btn11.setText("-");
btn11.setOnClickListener(new android.view.View.OnClickListener({ 
onClick: function(viewarg)
{
HealthY= HealthY-5;
}
}));
GUI11.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.RIGHT | android.view.Gravity.BOTTOM, 85, 165);

 GUI12 = new android.widget.PopupWindow();
var layout12 = new android.widget.LinearLayout(ctx);
layout12.setOrientation(android.widget.LinearLayout.VERTICAL);
GUI12.setContentView(layout12);
GUI12.setWidth(75);
GUI12.setHeight(75);
var btn12 = new android.widget.Button(ctx);
layout12.addView(btn12);
btn12.setText("+");
btn12.setOnClickListener(new android.view.View.OnClickListener({ 
onClick: function(viewarg)
{
HealthY= HealthY+5;
}
}));
GUI12.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.RIGHT | android.view.Gravity.BOTTOM, 85, 245);
}
else if(activatedChangingGUI==2)
{
GUI5.dismiss();
GUI6.dismiss();
GUI7.dismiss();
GUI8.dismiss();
GUI9.dismiss();
GUI10.dismiss();
GUI11.dismiss();
GUI12.dismiss();
}
}
})

if(start==true)
{
ticker--;
}
if(ticker==0)
{
start=false;
ticker=60;
var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get(); 
ctx.runOnUiThread(new java.lang.Runnable(){
run: function(){
GUI.dismiss();
GUI2.dismiss();
GUI3.dismiss();
GUI4.dismiss();
}
})
}

if(switched25) {
var PlayerX =parseInt(Player.getX());
var PlayerY =parseInt(Player.getY());
var PlayerZ =parseInt(Player.getZ());
if(getTile(PlayerX+1, PlayerY, PlayerZ) !=0 
|| getTile(PlayerX-1, PlayerY, PlayerZ) !=0 
|| getTile(PlayerX, PlayerY, PlayerZ+1) !=0 
|| getTile(PlayerX, PlayerY, PlayerZ-1) !=0) {
if(Entity.getVelY(getPlayerEnt()) <= 0.6) {
setVelY(getPlayerEnt(), 0.6);
}
}
}

if(switched26)
{
var px = getPlayerX();
var py = getPlayerY();
var pz = getPlayerZ();
ModPE.showTipMessage("\n\n\n\n" + "X: " + parseInt(px) + " Y: " + parseInt(py) + " Z: " + parseInt(pz));
}

if(switched27)
	{

	if(Level.getTile(getPlayerX(), getPlayerY()-2, getPlayerZ())==8 || Level.getTile(getPlayerX(), getPlayerY()-2, getPlayerZ())==9 || Level.getTile(getPlayerX(), getPlayerY()-2, getPlayerZ())==10 || Level.getTile(getPlayerX(), getPlayerY()-2, getPlayerZ())==11) {
			setVelY(getPlayerEnt(), 0);
		}
	}

	/* if(switched28) {
		if(Entity.getVelY(getPlayerEnt())< -0.1) {
			setVelY(getPlayerEnt(),-0.5);
		}
		if(Entity.getVelY(getPlayerEnt())< 0.35 && Entity.getVelY(getPlayerEnt())> 0.2 && can==1 && canGetHP==1) {
			setVelY(getPlayerEnt(), 0.6);
			can = 2;
			HP = Entity.getHealth(getPlayerEnt());
			canGetHP = 0;
		}
		if(Entity.getVelY(getPlayerEnt())>gravity && can==2) {
			Player.setHealth(HP);
			canGetHP = 1;
			can = 0;
		}
		if(Entity.getVelY(getPlayerEnt())==gravity && can==0) {
			Player.setHealth(HP);
			canGetHP = 1;
			can = 1;
		}
	} */

if(switched29)
	{
		if(s==1)
		{
			Xpos=getPlayerX();
			Zpos=getPlayerZ();
			s=s+1;
		}
		else 
		{
			if(s==3)
			{
				s=1;
				Xdiff=getPlayerX()-Xpos;
				Zdiff=getPlayerZ()-Zpos;
				setVelX(getPlayerEnt(), Xdiff);
				setVelZ(getPlayerEnt(), Zdiff);
				Xdiff=0;
				Zdiff=0;
			}
		}
		if(s!=1)
		{
			s=s+1;
		}
	}

	if(switched30)
	{
		if(Entity.getVelY(Player.getEntity()) <= -0.5 && !isFalling)
		{
			// Player is falling
			if(Level.getGameMode() == 0)
				Entity.addEffect(Player.getEntity(), MobEffect.jump, 999999, 254, false, false);

			isFalling = true;
		}

		if(isFalling)
		{
			if(Level.getTile(Math.floor(Player.getX()), Math.floor(Player.getY()) - 2, Math.floor(Player.getZ())) > 0)
			{
				if(Entity.getVelY(Player.getEntity()) == VEL_Y_OFFSET)
				{

					isFalling = false;

					if(Level.getGameMode() == 0)
					{
						// Entity.removeEffect(entity, id) doesn't remove particles of the effect https://github.com/zhuowei/MCPELauncher/issues/241

						//Entity.removeEffect(Player.getEntity(), MobEffect.jump);
						Entity.removeAllEffects(Player.getEntity());
					}
				}
			}
		}
	}

if(switched32)
{
carriedItem=Player.getCarriedItem();

if(carriedItem==261){
ModPE.setFov(20);
zoom=false;
}

if(zoom==false){
if(carriedItem!=261){
ModPE.resetFov();
zoom=true;
}
}
}

if(switched31)
{
Player.setHealth(1000);
}

	if(switched33) {
		var player = getPlayerEnt();
		var y = Math.floor(Entity.getYaw(player));
		var p = Math.floor(Entity.getPitch(player));
		Entity.setRot(player, y+3, p);
	}

if(switched34)
{
Player.setHunger(20);
}

	if(switched35)
{		Level.destroyBlock(Player.getPointedBlockX(), Player.getPointedBlockY(), Player.getPointedBlockZ())
}

if(switched36)
{
Level.setTime(0);
}



if(switched37)
{
        var px = getPlayerX();
var py = getPlayerY();
var pz = getPlayerZ();
ModPE.showTipMessage("X: " + parseInt(px) + " Y: " + parseInt(py) + " Z: " + parseInt(pz) + " Gamemode: " + Level.getGameMode() + "." + " Time: " + Level.getTime() + "." + " \nRain/Lightning: " + Math.round(Level.getRainLevel()) + "/" + Math.round(Level.getLightningLevel()) + ". " + "Name: " + Player.getName(Player.getEntity()) + "\nItem ID: " + Player.getCarriedItem() + ":" + Player.getCarriedItemData() + "." + " Biome: " + Level.getBiomeName() + "." + " V" + ModPE.getMinecraftVersion() + "\nWorld Name: " + Level.getWorldName() + "\nArea Brightness: " + Level.getBrightness(getPlayerX(), getPlayerY(), getPlayerZ()) + ". " + "Pointed Block Id : " + Player.getPointedBlockId() + ". " + "Player Health: " + Entity.getHealth(getPlayerEnt())+"/20");
}

if(curticks>0)
{
curticks=curticks-1;
Entity.setVelX(curent,Math.random()*2-1);
Entity.setVelY(curent,Math.random()*2-1);
Entity.setVelZ(curent,Math.random()*2-1);
}

if(switched38)
{
 
        var x = 
Player.getX();
        var y = Player.getY();
        var z = Player.getZ();      Level.addParticle(ParticleType.portal, Entity.getX(Player.getEntity()) + 0, Entity.getY(Player.getEntity()) - 1, Entity.getZ(Player.getEntity()) + 0, 0, 0, 0, 8);
Level.addParticle(ParticleType.portal, Entity.getX(Player.getEntity()) + 0, Entity.getY(Player.getEntity()) + 1, Entity.getZ(Player.getEntity()) + 0, 0, 0, 0, 8);
Level.addParticle(ParticleType.portal, Entity.getX(Player.getEntity()) + 1, Entity.getY(Player.getEntity()) - 1, Entity.getZ(Player.getEntity()) + 0, 0, 0, 0, 1);
Level.addParticle(ParticleType.portal, Entity.getX(Player.getEntity()) + 0, Entity.getY(Player.getEntity()) - 1, Entity.getZ(Player.getEntity()) + 1, 0, 0, 0, 1);
Level.addParticle(ParticleType.portal, Entity.getX(Player.getEntity()) - 1, Entity.getY(Player.getEntity()) - 1, Entity.getZ(Player.getEntity()) + 0, 0, 0, 0, 1);
Level.addParticle(ParticleType.portal, Entity.getX(Player.getEntity()) + 0, Entity.getY(Player.getEntity()) - 1, Entity.getZ(Player.getEntity()) - 1, 0, 0, 0, 1);
Level.addParticle(ParticleType.portal, Entity.getX(Player.getEntity()) + 1, Entity.getY(Player.getEntity()) + 1, Entity.getZ(Player.getEntity()) + 0, 0, 0, 0, 8);
Level.addParticle(ParticleType.portal, Entity.getX(Player.getEntity()) + 0, Entity.getY(Player.getEntity()) + 1, Entity.getZ(Player.getEntity()) + 1, 0, 0, 0, 8);
Level.addParticle(ParticleType.portal, Entity.getX(Player.getEntity()) - 1, Entity.getY(Player.getEntity()) + 1, Entity.getZ(Player.getEntity()) + 0, 0, 0, 0, 8);
Level.addParticle(ParticleType.portal, Entity.getX(Player.getEntity()) + 0, Entity.getY(Player.getEntity()) + 1, Entity.getZ(Player.getEntity()) - 1, 0, 0, 0, 8);
Level.addParticle(ParticleType.portal,Entity.getX(Player.getEntity()) + 0, Entity.getY(Player.getEntity()) + 0,
Entity.getZ(Player.getEntity()) + 1, 0, 0, 0, 8);
Level.addParticle(ParticleType.portal,Entity.getX(Player.getEntity()) + 0, Entity.getY(Player.getEntity()) + 0,
Entity.getZ(Player.getEntity()) - 1, 0, 0, 0, 8);
Level.addParticle(ParticleType.portal,Entity.getX(Player.getEntity()) + 1, Entity.getY(Player.getEntity()) + 0,
Entity.getZ(Player.getEntity()) + 0, 0, 0, 0, 8);
Level.addParticle(ParticleType.portal,Entity.getX(Player.getEntity()) - 1, Entity.getY(Player.getEntity()) + 0,
Entity.getZ(Player.getEntity()) + 0, 0, 0, 0, 8);

}

if(switched39)
{
setVelY(Player.getEntity(), -0.1)
}

if(switched40)
{
if(Player.getSelectedSlotId() != 7) {
			Player.setSelectedSlotId(Player.getSelectedSlotId() + 1);
		} else {
			Player.setSelectedSlotId(0)
}
   }

if(switched41)
{
ModPE.showTipMessage("\n\n\n" + Player.getName(Player.getEntity()) + "'s Health: " + Entity.getHealth(getPlayerEnt())+"/20");
}

if(toggled1)
{
ModPE.showTipMessage("\n\n\nCurrent FPS: " + Math.round(fps));
gameLoop()
}

if(jumpHeight!="1" && Entity.getVelY(getPlayerEnt())>0 && jump==0){
		setVelY(getPlayerEnt(), jumpVel);
		jump = 1;
	}
	else if(getTile(getPlayerX(), getPlayerY()-2, getPlayerZ())!=0&&jump==1){
		jump = 0;
	}

if(switched45==true){


Server.sendChat(getRandomColor() + "You Like My Hax?");

}


if(switched44==true){
Server.sendChat(getRandomColor() + "❤");
}

if(switched44==true){
Server.sendChat(getRandomColor() + "❤");
}

if(switched44==true){
Server.sendChat(getRandomColor() + "❤");
}

if(switched46)
{
ModPE.showTipMessage(getRandomColor() + "" + Player.getName(Player.getEntity()) + "");
}

if(switched47==true){
clientMessage(" ");
}

if(switched47==true){
clientMessage(" ");
}

if(switched47==true){
clientMessage(" ");
}

if (pointKill == true) {
        for (ent = 1; ent <= 100; ent++) {
            if (Entity.getEntityTypeId(Player.getPointedEntity()) == ent) {
                Entity.setHealth(Player.getPointedEntity(), -1)
            }
        }
    }

if (entiStop == true) {
        for (ent = 1; ent <= 100; ent++) {
            if (Entity.getEntityTypeId(Player.getPointedEntity()) == ent) {
                Entity.setPositionRelative(Player.getPointedEntity(), Entity.getX(), Entity.getY() + 0.5, Entity.getZ())
}
    }
        }

if(switched48)
{
if(Player.getCarriedItem()==50){
setTile(getPlayerX(), getPlayerY(), getPlayerZ(), 200);
}
if(Player.getCarriedItem()==325&&Player.getCarriedItemData()==10){
setTile(getPlayerX(), getPlayerY(), getPlayerZ(), 200);
}
if(Player.getCarriedItem()==89){
setTile(getPlayerX(), getPlayerY(), getPlayerZ(), 200);
}
if(Player.getCarriedItem()==359){
Block.setDestroyTime(214, 0);
}
var x = Player.getX();
var y = Player.getY();
var z = Player.getZ();
if(getTile(x-1,y,z)==200){
setTile(x-1,y,z,0);
}
var x = Player.getX();
var y = Player.getY();
var z = Player.getZ();
if(getTile(x+1,y,z)==200){
setTile(x+1,y,z,0);
}
var x = Player.getX();
var y = Player.getY();
var z = Player.getZ();
if(getTile(x,y,z-1)==200){
setTile(x,y,z-1,0);
}
var x = Player.getX();
var y = Player.getY();
var z = Player.getZ();
if(getTile(x,y,z+1)==200){
setTile(x,y,z+1,0);
}
var x = Player.getX();
var y = Player.getY();
var z = Player.getZ();
if(getTile(x-1,y,z+1)==200){
setTile(x-1,y,z+1,0);
}
var x = Player.getX();
var y = Player.getY();
var z = Player.getZ();
if(getTile(x-1,y,z-1)==200){
setTile(x-1,y,z-1,0);
}
var x = Player.getX();
var y = Player.getY();
var z = Player.getZ();
if(getTile(x+1,y,z+1)==200){
setTile(x+1,y,z+1,0);
}
var x = Player.getX();
var y = Player.getY();
var z = Player.getZ();
if(getTile(x+1,y,z-1)==200){
setTile(x+1,y,z-1,0);
}
var x = Player.getX();
var y = Player.getY();
var z = Player.getZ();
if(getTile(x,y-1,z)==200){
setTile(x,y-1,z,0);
}
var x = Player.getX();
var y = Player.getY();
var z = Player.getZ();
if(getTile(x,y+1,z)==200){
setTile(x,y+1,z,0);
}
}

if(switched50)
{
var mobs = Entity.getAll();
	for(var i = 0; i < mobs.length; i++) {
		var x = Entity.getX(mobs[i]) - getPlayerX();
		var y = Entity.getY(mobs[i]) - getPlayerY();
		var z = Entity.getZ(mobs[i]) - getPlayerZ();
		if(x*x+y*y+z*z<=4*4 && mobs[i] != getPlayerEnt() && Entity.getEntityTypeId(mobs[i]) != EntityType.ARROW && Entity.getEntityTypeId(mobs[i]) != EntityType.BOAT && Entity.getEntityTypeId(mobs[i]) != EntityType.EGG && Entity.getEntityTypeId(mobs[i]) != EntityType.EXPERIENCE_ORB && Entity.getEntityTypeId(mobs[i]) != EntityType.EXPERIENCE_POTION && Entity.getEntityTypeId(mobs[i]) != EntityType.FALLING_BLOCK && Entity.getEntityTypeId(mobs[i]) != EntityType.FIREBALL && Entity.getEntityTypeId(mobs[i]) != EntityType.FISHING_HOOK && Entity.getEntityTypeId(mobs[i]) != EntityType.ITEM && Entity.getEntityTypeId(mobs[i]) != EntityType.LIGHTNING_BOLT && Entity.getEntityTypeId(mobs[i]) != EntityType.MINECART && Entity.getEntityTypeId(mobs[i]) != EntityType.PAINTING && Entity.getEntityTypeId(mobs[i]) != EntityType.PRIMED_TNT && Entity.getEntityTypeId(mobs[i]) != EntityType.SMALL_FIREBALL && Entity.getEntityTypeId(mobs[i]) != EntityType.SNOWBALL && Entity.getEntityTypeId(mobs[i]) != EntityType.THROWN_POTION) {
			if(Entity.getX(mobs[i]) > getPlayerX() && Entity.getZ(mobs[i]) > getPlayerZ()) {
				setRot(90, getPitch());
			}
			Entity.setHealth(mobs[i], 0);
		}
	}
}

if(switched51)
{
var mobs = Entity.getAll();
	for(var i = 0; i < mobs.length; i++) {
		var x = Entity.getX(mobs[i]) - getPlayerX();
		var y = Entity.getY(mobs[i]) - getPlayerY();
		var z = Entity.getZ(mobs[i]) - getPlayerZ();
		if(x*x+y*y+z*z<=4*4 && mobs[i] != getPlayerEnt() && Entity.getEntityTypeId(mobs[i]) != EntityType.ARROW && Entity.getEntityTypeId(mobs[i]) != EntityType.BOAT && Entity.getEntityTypeId(mobs[i]) != EntityType.EGG && Entity.getEntityTypeId(mobs[i]) != EntityType.EXPERIENCE_ORB && Entity.getEntityTypeId(mobs[i]) != EntityType.EXPERIENCE_POTION && Entity.getEntityTypeId(mobs[i]) != EntityType.FALLING_BLOCK && Entity.getEntityTypeId(mobs[i]) != EntityType.FIREBALL && Entity.getEntityTypeId(mobs[i]) != EntityType.FISHING_HOOK && Entity.getEntityTypeId(mobs[i]) != EntityType.ITEM && Entity.getEntityTypeId(mobs[i]) != EntityType.LIGHTNING_BOLT && Entity.getEntityTypeId(mobs[i]) != EntityType.MINECART && Entity.getEntityTypeId(mobs[i]) != EntityType.PAINTING && Entity.getEntityTypeId(mobs[i]) != EntityType.PRIMED_TNT && Entity.getEntityTypeId(mobs[i]) != EntityType.SMALL_FIREBALL && Entity.getEntityTypeId(mobs[i]) != EntityType.SNOWBALL && Entity.getEntityTypeId(mobs[i]) != EntityType.THROWN_POTION) {
			if(Entity.getX(mobs[i]) > getPlayerX() && Entity.getZ(mobs[i]) > getPlayerZ()) {
				setRot(90, getPitch());
			}
			Entity.setImmobile(mobs[i], true);
		}
	}
}

if(setName==3) {
	dup = "";
	setName = 0;
}
if(cntr==1) {
tick++;
	if(tick==20) {
		tickSec++;
		tick = 0;
		clientMessage("A Second Has Passed");
	}
	if(tickSec==60) {
		tickMin++;
		tickSec = 0;
		clientMessage("A Minute Has Passed");
	}
	if(setName==2 && tickMin==1) {
		cntr = 0;
		setName = 0;
		clientMessage(ChatColor.RED + "Continues Naming Disabled");
	}
}
if(cntr==0) {
	tick = 0;
	tickSec = 0;
	tickMin = 0;
}



if(checkForUpdate==false) {
        print("Checking for an update");
        ctx.runOnUiThread(new java.lang.Runnable({
            run: function() {
                try {
                    checkVersion();
                }
                catch(err) {
                    clientMessage(" Error: \n"+err);
                }
            }
        }));
        checkForUpdate=true;
    }
    if(updateWindow) {
        ctx.runOnUiThread(new java.lang.Runnable({
            run: function() {
                try {
                    updateVersion();
                }
                catch(err) {
                    clientMessage(" Error: \n" + err);
                }
            }
        }));
        updateWindow=false;
    } 
 }
//END OF UPDATE CODE// CREDITS TO @Coder_G for making this Update code//



Block.defineBlock(255,"§aReinforced §3Planks", [["door",3]],false,false,false)
Block.setDestroyTime(255,1.5)
Item.addCraftRecipe(255,4,0,[5,5,0,280,4,0,0,0,0])

Block.defineBlock(253,"§9Command §4Block", [["command_block",0]],false,false,false)
Block.setDestroyTime(253,-1)

Block.defineBlock(254,"§6Polished §bTile", [["daylight_detector_side",0]],false,false,false)
Block.setDestroyTime(254,2)

		
function useItem (x, y, z,itemId, blockId, side)//useItem Code goes here
{
    if(itemId == 280)//If the item used is a stick
    {
        var custom =  Level.spawnMob(x,y+1,z,11,"mob/char.png"); //spawns mob, variable "custom", and uses the skin char
        Entity.setRenderType(custom,3); //changes the rendertype of the mob custom to a player
        clientMessage("§a§oYou have now Spawned a alien"); //clientmessage sent if item is a stick
    }
}//https://github.com/Connor4898/ModPE-Scripts/wiki/ModPE-Script-Templates


var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
///////
//////////functions

function mbd2(){
MBBamenu2.dismiss();
MBamenu2.dismiss();
}

function mb2(){
MBBaMenu2();
MBaMenu2();
}

//////////////////message board lay top

 function MBaMenu2(){
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    ctx.runOnUiThread(new java.lang.Runnable({ run: function(){
        try{
            var MBaLayout = new android.widget.LinearLayout(ctx);
            var MBaScroll = new android.widget.ScrollView(ctx);
            var MBaLayout1 = new android.widget.LinearLayout(ctx);
            MBaLayout.setOrientation(1);
            MBaLayout1.setOrientation(1);

            MBaScroll.addView(MBaLayout);
            MBaLayout1.addView(MBaScroll);
	                  

var scrollText = new android.widget.TextView(ctx);
scrollText.setText("         Welcome "+ Player.getName(Player.getEntity()) +" To AJModsMCPE!    Change Log: Added Button Color To Settings, Lantern, Blood, Kill/Freeze Aura, New Damage Indactors, Moveable Buttons, Mob Name Tags, Death Messages For Mobs, Improved Flashing Text, Menu Now Loads At Speed Of Popup Messages, Important Info Popup, Under The Hood Improvements.");
scrollText.setTextSize(15);                                                                                  scrollText.setTextColor(android.graphics.Color.CYAN);

 
scrollText.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));

scrollText.setEllipsize(android.text.TextUtils.TruncateAt.MARQUEE);

scrollText.setMarqueeRepeatLimit(-1);
//
scrollText.setSingleLine();
scrollText.setHorizontallyScrolling(true);
scrollText.setSelected(true);
////////////
MBaLayout.addView(scrollText);



var cT31 = new android.widget.Button(ctx);
                cT31.setText("Dismiss");
				cT31.setTextColor(android.graphics.Color.GREEN);
 cT31.getBackground().setColorFilter(android.graphics.Color.BLUE, android.graphics.PorterDuff.Mode.MULTIPLY);
 var display = new android.util.DisplayMetrics();
ctx.getWindowManager().getDefaultDisplay().getMetrics(display);
cT31.setLayoutParams(new android.widget.LinearLayout.LayoutParams(display.heightPixels / 4, display.heightPixels / 5));
cT31.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
mbd2();
p11();

				}
}); 
MBaLayout.addView(cT31);

textview = android.widget.TextView(ctx);            textview.setText("If You Can Not Hit Dismiss Please Relaunch Block Launcher"); 
textview.setTextSize(20);                                                                                  textview.setTextColor(android.graphics.Color.WHITE);
textview.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));       

MBaLayout.addView(textview);
	                   MBamenu2 = new android.widget.PopupWindow(MBaLayout1, ctx.getWindowManager().getDefaultDisplay().getWidth(), ctx.getWindowManager().getDefaultDisplay().getHeight()/1);
MBamenu2.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(125,99,0,0))); 
            MBamenu2.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.LEFT | android.view.Gravity.TOP , 0, 0);
        }catch(error){
            print("Nha R FOUND " + error+"ERRORS");
        }
    }}));
}

/////////////////mb b

 function MBBaMenu2(){
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    ctx.runOnUiThread(new java.lang.Runnable({ run: function(){
        try{
            var MBBaLayout = new android.widget.LinearLayout(ctx);
            var MBBaScroll = new android.widget.ScrollView(ctx);
            var MBBaLayout1 = new android.widget.LinearLayout(ctx);
            MBBaLayout.setOrientation(1);
            MBBaLayout1.setOrientation(1);

            MBBaScroll.addView(MBBaLayout);
            MBBaLayout1.addView(MBBaScroll);
	                  
	                  MBBamenu2 = new android.widget.PopupWindow(MBBaLayout1, ctx.getWindowManager().getDefaultDisplay().getWidth(), ctx.getWindowManager().getDefaultDisplay().getHeight()/1);
MBBamenu2.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(125,0,0,125))); 
            MBBamenu2.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.LEFT | android.view.Gravity.TOP , 0, 0);
        }catch(error){
            print("Nha R FOUND " + error+"ERRORS");
        }
    }}));
}




//////////functions

function mbd(){
MBBamenu.dismiss();
MBamenu.dismiss();
}

function mb(){
MBBaMenu();
MBaMenu();
}

//////////////////message board lay top

 function MBaMenu(){
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    ctx.runOnUiThread(new java.lang.Runnable({ run: function(){
        try{
            var MBaLayout = new android.widget.LinearLayout(ctx);
            var MBaScroll = new android.widget.ScrollView(ctx);
            var MBaLayout1 = new android.widget.LinearLayout(ctx);
            MBaLayout.setOrientation(1);
            MBaLayout1.setOrientation(1);

            MBaScroll.addView(MBaLayout);
            MBaLayout1.addView(MBaScroll);
	                  

var scrollText = new android.widget.TextView(ctx);
scrollText.setText("AJModsMCPE");
scrollText.setTextSize(8);                                                                                  scrollText.setTextColor(android.graphics.Color.CYAN);

 
scrollText.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));

scrollText.setEllipsize(android.text.TextUtils.TruncateAt.MARQUEE);

scrollText.setMarqueeRepeatLimit(-1);
//
scrollText.setSingleLine();
scrollText.setHorizontallyScrolling(true);
scrollText.setSelected(true);
////////////
MBaLayout.addView(scrollText);


	                  MBamenu = new android.widget.PopupWindow(MBaLayout1, ctx.getWindowManager().getDefaultDisplay().getWidth(), ctx.getWindowManager().getDefaultDisplay().getHeight()/25);
MBamenu.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT)); 
            MBamenu.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.CENTER | android.view.Gravity.TOP , 50, 0);
        }catch(error){
            print("Nha R FOUND " + error+"ERRORS");
        }
    }}));
}

/////////////////mb b

 function MBBaMenu(){
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    ctx.runOnUiThread(new java.lang.Runnable({ run: function(){
        try{
            var MBBaLayout = new android.widget.LinearLayout(ctx);
            var MBBaScroll = new android.widget.ScrollView(ctx);
            var MBBaLayout1 = new android.widget.LinearLayout(ctx);
            MBBaLayout.setOrientation(1);
            MBBaLayout1.setOrientation(1);

            MBBaScroll.addView(MBBaLayout);
            MBBaLayout1.addView(MBBaScroll);
	                  
	                  MBBamenu = new android.widget.PopupWindow(MBBaLayout1, ctx.getWindowManager().getDefaultDisplay().getWidth(), ctx.getWindowManager().getDefaultDisplay().getHeight()/45);
MBBamenu.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT)); 
            MBBamenu.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.CENTER | android.view.Gravity.TOP , 50, 0);
        }catch(error){
            print("Nha R FOUND " + error+"ERRORS");
        }
    }}));
}
////////////

//////////extra menu

function mbd4(){
MBBamenu4.dismiss();
MBamenu4.dismiss();
}

function mb4(){
MBBaMenu4();
MBaMenu4();
}

//////////////////message board lay top

 function MBaMenu4(){
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    ctx.runOnUiThread(new java.lang.Runnable({ run: function(){
        try{
            var MBaLayout = new android.widget.LinearLayout(ctx);
            var MBaScroll = new android.widget.ScrollView(ctx);
            var MBaLayout1 = new android.widget.LinearLayout(ctx);
            MBaLayout.setOrientation(1);
            MBaLayout1.setOrientation(1);

            MBaScroll.addView(MBaLayout);
            MBaLayout1.addView(MBaScroll);
	                  

var scrollText = new android.widget.TextView(ctx);
scrollText.setText("⚠Extra Menu⚠");
scrollText.setTextSize(15);                                                                                  scrollText.setTextColor(android.graphics.Color.CYAN);

 
scrollText.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));

scrollText.setEllipsize(android.text.TextUtils.TruncateAt.MARQUEE);

scrollText.setMarqueeRepeatLimit(-1);
//
scrollText.setSingleLine();
scrollText.setHorizontallyScrolling(true);
scrollText.setSelected(true);
////////////
MBaLayout.addView(scrollText);



var cT33 = new android.widget.Button(ctx);
                cT33.setText("Dismiss");
				cT33.setTextColor(BUTcurr);
           cT33.setTextSize(BUTsize); 
cT33.getBackground().setColorFilter(BUTcurr2, android.graphics.PorterDuff.Mode.MULTIPLY);
cT33.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
mbd4();
Backmenu.dismiss();
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);

				}
}); 
MBaLayout.addView(cT33);

var cT73 = new android.widget.Button(ctx);
                cT73.setText("Settings");
				cT73.setTextColor(BUTcurr);
           cT73.getBackground().setColorFilter(BUTcurr2, android.graphics.PorterDuff.Mode.MULTIPLY);
           cT73.setTextSize(BUTsize);
cT73.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
mbd4()
mb12()
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);

				}
}); 
MBaLayout.addView(cT73);


var cT34 = new android.widget.Button(ctx);
                cT34.setText("Main Mods");
				cT34.setTextColor(BUTcurr);
           cT34.setTextSize(BUTsize);
cT34.getBackground().setColorFilter(BUTcurr2, android.graphics.PorterDuff.Mode.MULTIPLY);
cT34.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
mbd4()
mb5()
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);

				}
}); 
MBaLayout.addView(cT34);

var cT74 = new android.widget.Button(ctx);
                cT74.setText("Add Item To Inventory");
				cT74.setTextColor(BUTcurr);
           cT74.setTextSize(BUTsize);
cT74.getBackground().setColorFilter(BUTcurr2, android.graphics.PorterDuff.Mode.MULTIPLY);
cT74.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
tmiD();
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);

				}
}); 
MBaLayout.addView(cT74);

var cT09 = new android.widget.Button(ctx);
                cT09.setText("Custom Mob Name");
				cT09.setTextColor(BUTcurr);
           cT09.setTextSize(BUTsize);
cT09.getBackground().setColorFilter(BUTcurr2, android.graphics.PorterDuff.Mode.MULTIPLY);
cT09.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
CNameOpen();
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);

				}
}); 
MBaLayout.addView(cT09);



var cT35 = new android.widget.Button(ctx);
                cT35.setText("Teleport Options");
				cT35.setTextColor(BUTcurr);
           cT35.setTextSize(BUTsize);
cT35.getBackground().setColorFilter(BUTcurr2, android.graphics.PorterDuff.Mode.MULTIPLY);
cT35.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
mbd4()
mb6()
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);

				}
}); 
MBaLayout.addView(cT35);

var cT36 = new android.widget.Button(ctx);
                cT36.setText("World Options");
				cT36.setTextColor(BUTcurr);
           cT36.setTextSize(BUTsize);
cT36.getBackground().setColorFilter(BUTcurr2, android.graphics.PorterDuff.Mode.MULTIPLY);
cT36.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
mbd4()
mb7()
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);

				}
}); 
MBaLayout.addView(cT36);

var cT37 = new android.widget.Button(ctx);
                cT37.setText("Fun Mods");
				cT37.setTextColor(BUTcurr);
           cT37.setTextSize(BUTsize);
cT37.getBackground().setColorFilter(BUTcurr2, android.graphics.PorterDuff.Mode.MULTIPLY);
cT37.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
mbd4()
mb8()
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);

				}
}); 
MBaLayout.addView(cT37);

var cT38 = new android.widget.Button(ctx);
                cT38.setText("Player Info");
				cT38.setTextColor(BUTcurr);
           cT38.setTextSize(BUTsize);
cT38.getBackground().setColorFilter(BUTcurr2, android.graphics.PorterDuff.Mode.MULTIPLY);
cT38.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
mbd4()
mb9()
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);

				}
}); 
MBaLayout.addView(cT38);

var cT39 = new android.widget.Button(ctx);
                cT39.setText("Message Menu");
				cT39.setTextColor(BUTcurr);
           cT39.setTextSize(BUTsize);
cT39.getBackground().setColorFilter(BUTcurr2, android.graphics.PorterDuff.Mode.MULTIPLY);
cT39.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
mbd4()
mb10()
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);

				}
}); 
MBaLayout.addView(cT39);

var cT49 = new android.widget.Button(ctx);
                cT49.setText("Morph Menu");
				cT49.setTextColor(BUTcurr);
           cT49.setTextSize(BUTsize);
cT49.getBackground().setColorFilter(BUTcurr2, android.graphics.PorterDuff.Mode.MULTIPLY);
cT49.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
mbd4()
mb11()
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);

				}
}); 
MBaLayout.addView(cT49);

var cT100 = new android.widget.Button(ctx);
                cT100.setText("Server Menu");
				cT100.setTextColor(BUTcurr);
           cT100.setTextSize(BUTsize);
cT100.getBackground().setColorFilter(BUTcurr2, android.graphics.PorterDuff.Mode.MULTIPLY);
cT100.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
mbd4()
mb13()
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);

				}
}); 
MBaLayout.addView(cT100);


	                   MBamenu4 = new android.widget.PopupWindow(MBaLayout1, ctx.getWindowManager().getDefaultDisplay().getWidth()/2, ctx.getWindowManager().getDefaultDisplay().getHeight());
MBamenu4.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(2,0,0,0))); 
            MBamenu4.showAtLocation(ctx.getWindow().getDecorView(), GUIPos | Gravity.TOP, 0, 0);
        }catch(error){
            print("AJMODSMCPE FOUND " + error+"ERRORS");
        }
    }}));
}

/////////////////mb b

 function MBBaMenu4(){
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    ctx.runOnUiThread(new java.lang.Runnable({ run: function(){
        try{
            var MBBaLayout = new android.widget.LinearLayout(ctx);
            var MBBaScroll = new android.widget.ScrollView(ctx);
            var MBBaLayout1 = new android.widget.LinearLayout(ctx);
            MBBaLayout.setOrientation(1);
            MBBaLayout1.setOrientation(1);

            MBBaScroll.addView(MBBaLayout);
            MBBaLayout1.addView(MBBaScroll);
	                  
	                  MBBamenu4 = new android.widget.PopupWindow(MBBaLayout1, ctx.getWindowManager().getDefaultDisplay().getWidth()/2, ctx.getWindowManager().getDefaultDisplay().getHeight());
MBBamenu4.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(2,0,0,0))); 
            MBBamenu4.showAtLocation(ctx.getWindow().getDecorView(), GUIPos | Gravity.TOP, 0, 0);
        }catch(error){
            print("AJMODSMCPE FOUND " + error+"ERRORS");
        }
    }}));
}

//////////Credit

function mbd3(){
MBBamenu3.dismiss();
MBamenu3.dismiss();
}

function mb3(){
MBBaMenu3();
MBaMenu3();
}

//////////////////message board lay top

 function MBaMenu3(){
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    ctx.runOnUiThread(new java.lang.Runnable({ run: function(){
        try{
            var MBaLayout = new android.widget.LinearLayout(ctx);
            var MBaScroll = new android.widget.ScrollView(ctx);
            var MBaLayout1 = new android.widget.LinearLayout(ctx);
            MBaLayout.setOrientation(1);
            MBaLayout1.setOrientation(1);

            MBaScroll.addView(MBaLayout);
            MBaLayout1.addView(MBaScroll);
	                  

var scrollText = new android.widget.TextView(ctx);
scrollText.setText("Credit To @AgameR_Modder, Dr. NHA, @SchokiT, @PixeldroidOF, @KairusDS,  @elvinDEVs For Helping Me Make This Menu");
scrollText.setTextSize(15);                                                                                  scrollText.setTextColor(android.graphics.Color.CYAN);

 
scrollText.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));

scrollText.setEllipsize(android.text.TextUtils.TruncateAt.MARQUEE);

scrollText.setMarqueeRepeatLimit(-1);
//
scrollText.setSingleLine();
scrollText.setHorizontallyScrolling(true);
scrollText.setSelected(true);
////////////
MBaLayout.addView(scrollText);



var cT32 = new android.widget.Button(ctx);
                cT32.setText("Dismiss");
				cT32.setTextColor(android.graphics.Color.BLACK);

cT32.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
mbd3();
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);

				}
}); 
MBaLayout.addView(cT32);

	                   MBamenu3 = new android.widget.PopupWindow(MBaLayout1, ctx.getWindowManager().getDefaultDisplay().getWidth()/2, ctx.getWindowManager().getDefaultDisplay().getHeight());
MBamenu3.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(125,99,0,0))); 
            MBamenu3.showAtLocation(ctx.getWindow().getDecorView(),  GUIPos | Gravity.TOP, 0, 0);
        }catch(error){
            print("AJMODSMCPE FOUND " + error+"ERRORS");
        }
    }}));
}

/////////////////mb b

 function MBBaMenu3(){
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    ctx.runOnUiThread(new java.lang.Runnable({ run: function(){
        try{
            var MBBaLayout = new android.widget.LinearLayout(ctx);
            var MBBaScroll = new android.widget.ScrollView(ctx);
            var MBBaLayout1 = new android.widget.LinearLayout(ctx);
            MBBaLayout.setOrientation(1);
            MBBaLayout1.setOrientation(1);

            MBBaScroll.addView(MBBaLayout);
            MBBaLayout1.addView(MBBaScroll);
	                  
	                  MBBamenu3 = new android.widget.PopupWindow(MBBaLayout1, ctx.getWindowManager().getDefaultDisplay().getWidth()/2, ctx.getWindowManager().getDefaultDisplay().getHeight());
MBBamenu3.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(125,0,0,125))); 
            MBamenu3.showAtLocation(ctx.getWindow().getDecorView(),  GUIPos | Gravity.TOP, 0, 0);
        }catch(error){
            print("AJMODSMCPE FOUND " + error+"ERRORS");
        }
    }}));
}

//////////Main Mods

function mbd5(){
MBBamenu5.dismiss();
MBamenu5.dismiss();
}

function mb5(){
MBBaMenu5();
MBaMenu5();
}

//////////////////message board lay top

 function MBaMenu5(){
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    ctx.runOnUiThread(new java.lang.Runnable({ run: function(){
        try{
            var MBaLayout = new android.widget.LinearLayout(ctx);
            var MBaScroll = new android.widget.ScrollView(ctx);
            var MBaLayout1 = new android.widget.LinearLayout(ctx);
            MBaLayout.setOrientation(1);
            MBaLayout1.setOrientation(1);

            MBaScroll.addView(MBaLayout);
            MBaLayout1.addView(MBaScroll);
	                  

var scrollText = new android.widget.TextView(ctx);
scrollText.setText("⚠Main Mods⚠");
scrollText.setTextSize(15);                                                                                  scrollText.setTextColor(android.graphics.Color.GREEN);

 
scrollText.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));

scrollText.setEllipsize(android.text.TextUtils.TruncateAt.MARQUEE);

scrollText.setMarqueeRepeatLimit(-1);
//
scrollText.setSingleLine();
scrollText.setHorizontallyScrolling(true);
scrollText.setSelected(true);
////////////
MBaLayout.addView(scrollText);



var cT41 = new android.widget.Button(ctx);
                cT41.setText("Back");
				cT41.setTextColor(BUTcurr);
           cT41.setTextSize(BUTsize);
cT41.getBackground().setColorFilter(BUTcurr2, android.graphics.PorterDuff.Mode.MULTIPLY);
cT41.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
mbd5();
mb4()
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);

				}
}); 
MBaLayout.addView(cT41);

var cT1 = new android.widget.Button(ctx);
                cT1.setText("Creative");
				cT1.setTextColor(BUTcurr);
           cT1.setTextSize(BUTsize);                cT1.getBackground().setColorFilter(BUTcurr2, android.graphics.PorterDuff.Mode.MULTIPLY);
           cT1.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
				
				Level.setGameMode(1);

	Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
				}
}); 
MBaLayout.addView(cT1);

var cT18 = new android.widget.Button(ctx);
                cT18.setText("Special Creative Invatory");
				cT18.setTextColor(BUTcurr);
           cT18.setTextSize(BUTsize);                cT18.getBackground().setColorFilter(BUTcurr2, android.graphics.PorterDuff.Mode.MULTIPLY);
           cT18.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
for(var j = 0; j < 500; j++) {
Player.addItemCreativeInv(j, 5, 0);
}
if(j==500)
android.widget.Toast.makeText(ctx,new android.text.Html.fromHtml("<b><font color=#FF3200>WARNING: </b><font color=#000000>You Can Not Open The Invatory Prior To Turning This On, Otherwise Back Out And Rejoin"),0).show();
android.widget.Toast.makeText(ctx,new android.text.Html.fromHtml("<b><font color=#FF3200>WARNING: </b><font color=#000000>You Can Not Open The Invatory Prior To Turning This On, Otherwise Back Out And Rejoin"),0).show();
android.widget.Toast.makeText(ctx,new android.text.Html.fromHtml("<b><font color=#FF3200>WARNING: </b><font color=#000000>You Can Not Open The Invatory Prior To Turning This On, Otherwise Back Out And Rejoin"),0).show();

Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
				}
}); 
MBaLayout.addView(cT18);

var cT2 = new android.widget.Button(ctx);
                cT2.setText("Survival");
				cT2.setTextColor(BUTcurr);
           cT2.setTextSize(BUTsize);                cT2.getBackground().setColorFilter(BUTcurr2, android.graphics.PorterDuff.Mode.MULTIPLY);
           cT2.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(viewarg){
Level.setGameMode(0);	Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
				}
}); 
MBaLayout.addView(cT2);

var cT3 = new android.widget.Button(ctx);
                cT3.setTextColor(BUTcurr);
           cT3.setTextSize(BUTsize);                cT3.getBackground().setColorFilter(BUTcurr2, android.graphics.PorterDuff.Mode.MULTIPLY);
           cT3.setText("Add XP");
                cT3.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
				
				Player.setLevel(1000000);
				Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
				}
}); 
MBaLayout.addView(cT3);

var cT4 = new android.widget.Button(ctx);



var cT7 = new android.widget.Button(ctx);
                cT7.setText("Suicide");
				cT7.setTextColor(BUTcurr);
cT7.getBackground().setColorFilter(BUTcurr2, android.graphics.PorterDuff.Mode.MULTIPLY);    
           cT7.setTextSize(BUTsize);                cT7.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){

Player.setHealth(0);
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
				}
}); 

MBaLayout.addView(cT7);

var cT8 = new android.widget.Button(ctx);
                cT8.setText("Restore Health");
				cT8.setTextColor(BUTcurr);
           cT8.setTextSize(BUTsize);                cT8.getBackground().setColorFilter(BUTcurr2, android.graphics.PorterDuff.Mode.MULTIPLY);
           cT8.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){

Player.setHealth(20);
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
				}
}); 

MBaLayout.addView(cT8);

var cT24 = new android.widget.Button(ctx);
                cT24.setText("Clear Inventory");
				cT24.setTextColor(BUTcurr);
           cT24.setTextSize(BUTsize);
cT24.getBackground().setColorFilter(BUTcurr2, android.graphics.PorterDuff.Mode.MULTIPLY);          
           cT24.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
            for(var i = 0; i < 50; i++)
       Player.clearInventorySlot(i);
    
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
				}
}); 
MBaLayout.addView(cT24);


	                   MBamenu5 = new android.widget.PopupWindow(MBaLayout1, ctx.getWindowManager().getDefaultDisplay().getWidth()/2, ctx.getWindowManager().getDefaultDisplay().getHeight());
MBamenu5.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(2,0,0,0))); 
            MBamenu5.showAtLocation(ctx.getWindow().getDecorView(), GUIPos | Gravity.TOP, 0, 0);
        }catch(error){
            print("AJMODSMCPE FOUND " + error+"ERRORS");
        }
    }}));
}

/////////////////mb b

 function MBBaMenu5(){
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    ctx.runOnUiThread(new java.lang.Runnable({ run: function(){
        try{
            var MBBaLayout = new android.widget.LinearLayout(ctx);
            var MBBaScroll = new android.widget.ScrollView(ctx);
            var MBBaLayout1 = new android.widget.LinearLayout(ctx);
            MBBaLayout.setOrientation(1);
            MBBaLayout1.setOrientation(1);

            MBBaScroll.addView(MBBaLayout);
            MBBaLayout1.addView(MBBaScroll);
	                  
	                  MBBamenu5 = new android.widget.PopupWindow(MBBaLayout1, ctx.getWindowManager().getDefaultDisplay().getWidth()/2, ctx.getWindowManager().getDefaultDisplay().getHeight());
MBBamenu5.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(2,0,0,0))); 
            MBBamenu5.showAtLocation(ctx.getWindow().getDecorView(), GUIPos | Gravity.TOP, 0, 0);
        }catch(error){
            print("AJMODSMCPE FOUND " + error+"ERRORS");
        }
    }}));
}

//////////world op

function mbd7(){
MBBamenu7.dismiss();
MBamenu7.dismiss();
}

function mb7(){
MBBaMenu7();
MBaMenu7();
}

//////////////////message board lay top

 function MBaMenu7(){
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    ctx.runOnUiThread(new java.lang.Runnable({ run: function(){
        try{
            var MBaLayout = new android.widget.LinearLayout(ctx);
            var MBaScroll = new android.widget.ScrollView(ctx);
            var MBaLayout1 = new android.widget.LinearLayout(ctx);
            MBaLayout.setOrientation(1);
            MBaLayout1.setOrientation(1);

            MBaScroll.addView(MBaLayout);
            MBaLayout1.addView(MBaScroll);
	                  

var scrollText = new android.widget.TextView(ctx);
scrollText.setText("⚠World Options⚠");
scrollText.setTextSize(15);                                                                                  scrollText.setTextColor(android.graphics.Color.RED);

 
scrollText.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));

scrollText.setEllipsize(android.text.TextUtils.TruncateAt.MARQUEE);

scrollText.setMarqueeRepeatLimit(-1);
//
scrollText.setSingleLine();
scrollText.setHorizontallyScrolling(true);
scrollText.setSelected(true);
////////////
MBaLayout.addView(scrollText);



var cT43 = new android.widget.Button(ctx);
                cT43.setText("Back");
                cT43.setTextColor(BUTcurr);
           cT43.setTextSize(BUTsize);				cT43.getBackground().setColorFilter(BUTcurr2, android.graphics.PorterDuff.Mode.MULTIPLY);
           cT43.setTextColor(android.graphics.Color.BLACK);

cT43.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
mbd7();
mb4()
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);

				}
}); 
MBaLayout.addView(cT43);

var cT9 = new android.widget.Button(ctx);
                cT9.setText("Set Time To Day");
				cT9.setTextColor(BUTcurr);
           cT9.setTextSize(BUTsize);                cT9.getBackground().setColorFilter(BUTcurr2, android.graphics.PorterDuff.Mode.MULTIPLY);
           cT9.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
Level.setTime(0);
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
				}
}); 

MBaLayout.addView(cT9);

var cT10 = new android.widget.Button(ctx);
                cT10.setText("Set Time To Night");
				cT10.setTextColor(BUTcurr);
           cT10.setTextSize(BUTsize);                cT10.getBackground().setColorFilter(BUTcurr2, android.graphics.PorterDuff.Mode.MULTIPLY);
           cT10.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
Level.setTime(15000);
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
				}
}); 

MBaLayout.addView(cT10);

var cT11 = new android.widget.Button(ctx);
                cT11.setText("Clear Weather");
				cT11.setTextColor(BUTcurr);
           cT11.setTextSize(BUTsize);                cT11.getBackground().setColorFilter(BUTcurr2, android.graphics.PorterDuff.Mode.MULTIPLY);
           cT11.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
Level.setRainLevel(0)
      Level.setLightningLevel(0);
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
				}
}); 

MBaLayout.addView(cT11);

var cT12 = new android.widget.Button(ctx);
                cT12.setText("Clear With Thunder");
				cT12.setTextColor(BUTcurr);
           cT12.setTextSize(BUTsize);                cT12.getBackground().setColorFilter(BUTcurr2, android.graphics.PorterDuff.Mode.MULTIPLY);
           cT12.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
Level.setRainLevel(0)
      Level.setLightningLevel(1);
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
				}
}); 

MBaLayout.addView(cT12);

var cT13 = new android.widget.Button(ctx);
                cT13.setText("Rainy Weather");
				cT13.setTextColor(BUTcurr);
           cT13.setTextSize(BUTsize);                cT13.getBackground().setColorFilter(BUTcurr2, android.graphics.PorterDuff.Mode.MULTIPLY);
           cT13.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
Level.setRainLevel(1);
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
				}
}); 

MBaLayout.addView(cT13);

var cT14 = new android.widget.Button(ctx);
                cT14.setText("Thunder Storm");
				cT14.setTextColor(BUTcurr);
           cT14.setTextSize(BUTsize);                cT14.getBackground().setColorFilter(BUTcurr2, android.graphics.PorterDuff.Mode.MULTIPLY);
           cT14.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
Level.setRainLevel(1)
      Level.setLightningLevel(1);
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
				}
}); 

MBaLayout.addView(cT14);

	                   MBamenu7 = new android.widget.PopupWindow(MBaLayout1, ctx.getWindowManager().getDefaultDisplay().getWidth()/2, ctx.getWindowManager().getDefaultDisplay().getHeight());
MBamenu7.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(2,0,0,0))); 
            MBamenu7.showAtLocation(ctx.getWindow().getDecorView(), GUIPos | Gravity.TOP, 0, 0);
        }catch(error){
            print("AJMODSMCPE FOUND " + error+"ERRORS");
        }
    }}));
}

/////////////////mb b

 function MBBaMenu7(){
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    ctx.runOnUiThread(new java.lang.Runnable({ run: function(){
        try{
            var MBBaLayout = new android.widget.LinearLayout(ctx);
            var MBBaScroll = new android.widget.ScrollView(ctx);
            var MBBaLayout1 = new android.widget.LinearLayout(ctx);
            MBBaLayout.setOrientation(1);
            MBBaLayout1.setOrientation(1);

            MBBaScroll.addView(MBBaLayout);
            MBBaLayout1.addView(MBBaScroll);
	                  
	                  MBBamenu7 = new android.widget.PopupWindow(MBBaLayout1, ctx.getWindowManager().getDefaultDisplay().getWidth()/2, ctx.getWindowManager().getDefaultDisplay().getHeight());
MBBamenu7.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(2,0,0,0))); 
            MBBamenu7.showAtLocation(ctx.getWindow().getDecorView(), GUIPos | Gravity.TOP, 0, 0);
        }catch(error){
            print("AJMODSMCPE FOUND " + error+"ERRORS");
        }
    }}));
}

//////////tele op

function mbd6(){
MBBamenu6.dismiss();
MBamenu6.dismiss();
}

function mb6(){
MBBaMenu6();
MBaMenu6();
}

//////////////////message board lay top

 function MBaMenu6(){
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    ctx.runOnUiThread(new java.lang.Runnable({ run: function(){
        try{
            var MBaLayout = new android.widget.LinearLayout(ctx);
            var MBaScroll = new android.widget.ScrollView(ctx);
            var MBaLayout1 = new android.widget.LinearLayout(ctx);
            MBaLayout.setOrientation(1);
            MBaLayout1.setOrientation(1);

            MBaScroll.addView(MBaLayout);
            MBaLayout1.addView(MBaScroll);
	                  

var scrollText = new android.widget.TextView(ctx);
scrollText.setText("⚠Teleport Options⚠");
scrollText.setTextSize(15);                                                                                  scrollText.setTextColor(android.graphics.Color.BLACK);

 
scrollText.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));

scrollText.setEllipsize(android.text.TextUtils.TruncateAt.MARQUEE);

scrollText.setMarqueeRepeatLimit(-1);
//
scrollText.setSingleLine();
scrollText.setHorizontallyScrolling(true);
scrollText.setSelected(true);
////////////
MBaLayout.addView(scrollText);



var cT42 = new android.widget.Button(ctx);
                cT42.setText("Back");
				cT42.setTextColor(BUTcurr);
           cT42.setTextSize(BUTsize);
cT42.getBackground().setColorFilter(BUTcurr2, android.graphics.PorterDuff.Mode.MULTIPLY);
cT42.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
mbd6();
mb4()
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);

				}
}); 
MBaLayout.addView(cT42);

var cT6 = new android.widget.Button(ctx);
                cT6.setText("Set Spawn");
				cT6.setTextColor(BUTcurr);
           cT6.setTextSize(BUTsize);
cT6.getBackground().setColorFilter(BUTcurr2, android.graphics.PorterDuff.Mode.MULTIPLY);                cT6.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
clientMessage("Spawn Has Been Set To: \n§4x: " + Math.floor(Player.getX()) + " §4y: " + Math.floor(Player.getY() - 1) + " §4z: " + Math.floor(Player.getZ()));
Level.setSpawn(getPlayerX(), getPlayerY(), getPlayerZ());
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
				}
}); 
MBaLayout.addView(cT6);

var cT20 = new android.widget.Button(ctx);
                cT20.setText("Set Home");
				cT20.setTextColor(BUTcurr);
           cT20.setTextSize(BUTsize);
cT20.getBackground().setColorFilter(BUTcurr2, android.graphics.PorterDuff.Mode.MULTIPLY);                cT20.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
clientMessage("Home Has Been Set To: \n§4x: " + Math.floor(Player.getX()) + " §4y: " + Math.floor(Player.getY() - 1) + " §4z: " + Math.floor(Player.getZ()));
ModPE.saveData("hX",parseInt(Player.getX()));			ModPE.saveData("hY",parseInt(Player.getY()));			ModPE.saveData("hZ",parseInt(Player.getZ()));
ModPE.saveData("setHomeData",1);
android.widget.Toast.makeText(ctx,new android.text.Html.fromHtml("<b><font color=#FF3200>WARNING: </b><font color=#000000>When You Teleport Home For The First Time MCPE Will Crash! But Only The First Time"),0).show();
android.widget.Toast.makeText(ctx,new android.text.Html.fromHtml("<b><font color=#FF3200>WARNING: </b><font color=#000000>When You Teleport Home For The First Time MCPE Will Crash! But Only The First Time"),0).show();
android.widget.Toast.makeText(ctx,new android.text.Html.fromHtml("<b><font color=#FF3200>WARNING: </b><font color=#000000>When You Teleport Home For The First Time MCPE Will Crash! But Only The First Time"),0).show();
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);

				}
});
MBaLayout.addView(cT20);

var cT21 = new android.widget.Button(ctx);
                cT21.setText("Teleport Home");
				cT21.setTextColor(BUTcurr);
           cT21.setTextSize(BUTsize);
cT21.getBackground().setColorFilter(BUTcurr2, android.graphics.PorterDuff.Mode.MULTIPLY);                cT21.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
clientMessage("Welcome §4Home " + Player.getName(Player.getEntity()) + "§4!");
Entity.setPosition(Player.getEntity(), parseInt(ModPE.readData("hX")) + 0.5, parseInt(ModPE.readData("hY")) + 1.5, parseInt(ModPE.readData("hZ")) + 0.5);
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
				}
}); 
MBaLayout.addView(cT21);

var cT75 = new android.widget.Button(ctx);
                cT75.setText("XYZ Teleport");
				cT75.setTextColor(BUTcurr);
           cT75.setTextSize(BUTsize);
cT75.getBackground().setColorFilter(BUTcurr2, android.graphics.PorterDuff.Mode.MULTIPLY);
cT75.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
teleportation();
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);

				}
}); 
MBaLayout.addView(cT75);

var cT00 = new android.widget.Button(ctx);
                cT00.setText("Teleport To Last Death");
				cT00.setTextColor(BUTcurr);
           cT00.setTextSize(BUTsize);
cT00.getBackground().setColorFilter(BUTcurr2, android.graphics.PorterDuff.Mode.MULTIPLY);
cT00.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
ppx = ModPE.readData("x_pD_" + Level.getWorldDir());

ppy = ModPE.readData("y_pD_" + Level.getWorldDir());

ppz = ModPE.readData("z_pD_" + Level.getWorldDir());

pDOpen();
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);

				}
}); 
MBaLayout.addView(cT00);

	                   MBamenu6 = new android.widget.PopupWindow(MBaLayout1, ctx.getWindowManager().getDefaultDisplay().getWidth()/2, ctx.getWindowManager().getDefaultDisplay().getHeight());
MBamenu6.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(2,0,0,0))); 
            MBamenu6.showAtLocation(ctx.getWindow().getDecorView(), GUIPos | Gravity.TOP, 0, 0);
        }catch(error){
            print("AJMODSMCPE FOUND " + error+"ERRORS");
        }
    }}));
}

/////////////////mb b

 function MBBaMenu6(){
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    ctx.runOnUiThread(new java.lang.Runnable({ run: function(){
        try{
            var MBBaLayout = new android.widget.LinearLayout(ctx);
            var MBBaScroll = new android.widget.ScrollView(ctx);
            var MBBaLayout1 = new android.widget.LinearLayout(ctx);
            MBBaLayout.setOrientation(1);
            MBBaLayout1.setOrientation(1);

            MBBaScroll.addView(MBBaLayout);
            MBBaLayout1.addView(MBBaScroll);
	                  
	                  MBBamenu6 = new android.widget.PopupWindow(MBBaLayout1, ctx.getWindowManager().getDefaultDisplay().getWidth()/2, ctx.getWindowManager().getDefaultDisplay().getHeight());
MBBamenu6.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(2,0,0,0))); 
            MBBamenu6.showAtLocation(ctx.getWindow().getDecorView(), GUIPos | Gravity.TOP, 0, 0);
        }catch(error){
            print("AJMODSMCPE FOUND " + error+"ERRORS");
        }
    }}));
}

//////////fun

function mbd8(){
MBBamenu8.dismiss();
MBamenu8.dismiss();
}

function mb8(){
MBBaMenu8();
MBaMenu8();
}

//////////////////message board lay top

 function MBaMenu8(){
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    ctx.runOnUiThread(new java.lang.Runnable({ run: function(){
        try{
            var MBaLayout = new android.widget.LinearLayout(ctx);
            var MBaScroll = new android.widget.ScrollView(ctx);
            var MBaLayout1 = new android.widget.LinearLayout(ctx);
            MBaLayout.setOrientation(1);
            MBaLayout1.setOrientation(1);

            MBaScroll.addView(MBaLayout);
            MBaLayout1.addView(MBaScroll);
	                  

var scrollText = new android.widget.TextView(ctx);
scrollText.setText("⚠Fun Mods⚠");
scrollText.setTextSize(15);                                                                                  scrollText.setTextColor(android.graphics.Color.MAGENTA);

 
scrollText.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));

scrollText.setEllipsize(android.text.TextUtils.TruncateAt.MARQUEE);

scrollText.setMarqueeRepeatLimit(-1);
//
scrollText.setSingleLine();
scrollText.setHorizontallyScrolling(true);
scrollText.setSelected(true);
////////////
MBaLayout.addView(scrollText);



var cT44 = new android.widget.Button(ctx);
                cT44.setText("Back");
				cT44.setTextColor(BUTcurr);
           cT44.setTextSize(BUTsize);
cT44.getBackground().setColorFilter(BUTcurr2, android.graphics.PorterDuff.Mode.MULTIPLY);
cT44.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
mbd8();
mb4()
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);

				}
}); 
MBaLayout.addView(cT44);

var cT15 = new android.widget.Button(ctx);
                cT15.setText("Slide Away");
				cT15.setTextColor(BUTcurr);
           cT15.setTextSize(BUTsize);
cT15.getBackground().setColorFilter(BUTcurr2, android.graphics.PorterDuff.Mode.MULTIPLY);                cT15.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
setVelX(getPlayerEnt(), 5);
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
				}
}); 

MBaLayout.addView(cT15);

var cT16 = new android.widget.Button(ctx);
                cT16.setText("Free Fall");
				cT16.setTextColor(BUTcurr);
           cT16.setTextSize(BUTsize);
cT16.getBackground().setColorFilter(BUTcurr2, android.graphics.PorterDuff.Mode.MULTIPLY);                cT16.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){

setVelY(getPlayerEnt(), 9);
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
				}
}); 


MBaLayout.addView(cT16);


var cT5 = new android.widget.Button(ctx);
                cT5.setText("Spawn A Growing Star");
				cT5.setTextColor(BUTcurr);
           cT5.setTextSize(BUTsize);
cT5.getBackground().setColorFilter(BUTcurr2, android.graphics.PorterDuff.Mode.MULTIPLY);                cT5.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
Level.addParticle(ParticleType.crit, getPlayerX(), getPlayerY(), getPlayerZ(), 0, 0, 0, 150);
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
				}
}); 
MBaLayout.addView(cT5);

var cT23 = new android.widget.Button(ctx);
                cT23.setText("Modded Blocks Kit");
				cT23.setTextColor(BUTcurr);
           cT23.setTextSize(BUTsize);
cT23.getBackground().setColorFilter(BUTcurr2, android.graphics.PorterDuff.Mode.MULTIPLY);                cT23.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
clientMessage("Enjoy The §4Blocks");
addItemInventory(255,255,0)
      	 
      addItemInventory(254,255,0)
      addItemInventory(253,255,0)
      
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
				}
}); 
MBaLayout.addView(cT23);


var cT19 = new android.widget.Button(ctx);
                cT19.setText("Glitched Blocks Kit");
				cT19.setTextColor(BUTcurr);
           cT19.setTextSize(BUTsize);
cT19.getBackground().setColorFilter(BUTcurr2, android.graphics.PorterDuff.Mode.MULTIPLY);                cT19.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
clientMessage("Enjoy The §4Blocks");
addItemInventory(383,255,0) 
      	addItemInventory(162,255,15)
      	addItemInventory(246,255,0)
      	addItemInventory(198,255,0);
      	addItemInventory(9,255,0);
      addItemInventory(11,255,0);
      	addItemInventory(124,255,0);
      	addItemInventory(94,255,0);
      	addItemInventory(90,255,0);
      	addItemInventory(196,255,0);
      addItemInventory(51,255,0);
      	addItemInventory(249,255,0);
      	addItemInventory(26,255,0);
      	addItemInventory(144,255,0);
      	addItemInventory(68,255,0);
      	addItemInventory(247,255,0);
      	addItemInventory(403,255,0);
      	addItemInventory(439,255,0);
      	addItemInventory(95,255,0);
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
				}
}); 
MBaLayout.addView(cT19);


var cT22 = new android.widget.Button(ctx);
                cT22.setText("Duplicate Item In Hand To 99+");
				cT22.setTextColor(BUTcurr);
           cT22.setTextSize(BUTsize);
cT22.getBackground().setColorFilter(BUTcurr2, android.graphics.PorterDuff.Mode.MULTIPLY);                cT22.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
addItemInventory(getCarriedItem(),255,Player.getCarriedItemData());
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
		}
});	 
MBaLayout.addView(cT22);

var cT47 = new android.widget.Button(ctx);
                cT47.setText("Give Your Self A Magical Wand");
				cT47.setTextColor(BUTcurr);
           cT47.setTextSize(BUTsize);
cT47.getBackground().setColorFilter(BUTcurr2, android.graphics.PorterDuff.Mode.MULTIPLY);
cT47.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
addItemInventory(431,255,0);
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);

				}
}); 
MBaLayout.addView(cT47);


var cT25 = new android.widget.Button(ctx);
                cT25.setText("Money Drop");
				cT25.setTextColor(BUTcurr);
           cT25.setTextSize(BUTsize);
cT25.getBackground().setColorFilter(BUTcurr2, android.graphics.PorterDuff.Mode.MULTIPLY);
cT25.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){


 var x = Player.getPointedBlockX();
var y = Player.getPointedBlockY()+1;
var z = Player.getPointedBlockZ();

 Level.dropItem(x,y+5,z,0,264,10);
		Level.dropItem(x-1,y+5,z,0,264,5);
		Level.dropItem(x-1,y+5,z+1,0,264,5);
		Level.dropItem(x,y+5,z-1,0,264,5);
		Level.dropItem(x,y+5,z+1,0,264,5);
		Level.dropItem(x-1,y+5,z-1,0,264,5);
		Level.dropItem(x+1,y+5,z+1,0,264,5);
		Level.dropItem(x+1,y+5,z,0,264,5);
		Level.dropItem(x+1,y+5,z+1,0,264,5); 

android.widget.Toast.makeText(ctx,new android.text.Html.fromHtml("<b><font color=#000000>Only Works In </b><font color=#FF3200>Creative"),0).show();
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
				}
}); 
MBaLayout.addView(cT25);

textview = android.widget.TextView(ctx);            textview.setText("Show FPS"); 
textview.setTextSize(10);                                                                                  textview.setTextColor(android.graphics.Color.MAGENTA);
textview.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));       

MBaLayout.addView(textview);

var button10 = new android.widget.ToggleButton(ctx);
button10.setText("FPS");
button10.getBackground().setColorFilter(BUTcurr2, android.graphics.PorterDuff.Mode.MULTIPLY);
button10.setChecked(toggled1);
button10.setOnClickListener(new android.view.View.OnClickListener({
    onClick: function(viewarg){
        if(!toggled1){
            toggled1 = true;
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
        }else{
            toggled1 = false;

}
}
}));
MBaLayout.addView(button10);
	                   MBamenu8 = new android.widget.PopupWindow(MBaLayout1, ctx.getWindowManager().getDefaultDisplay().getWidth()/2, ctx.getWindowManager().getDefaultDisplay().getHeight());
MBamenu8.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(2,0,0,0))); 
            MBamenu8.showAtLocation(ctx.getWindow().getDecorView(), GUIPos | Gravity.TOP, 0, 0);
        }catch(error){
            print("AJMODSMCPE FOUND " + error+"ERRORS");
        }
    }}));
}

/////////////////mb b

 function MBBaMenu8(){
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    ctx.runOnUiThread(new java.lang.Runnable({ run: function(){
        try{
            var MBBaLayout = new android.widget.LinearLayout(ctx);
            var MBBaScroll = new android.widget.ScrollView(ctx);
            var MBBaLayout1 = new android.widget.LinearLayout(ctx);
            MBBaLayout.setOrientation(1);
            MBBaLayout1.setOrientation(1);

            MBBaScroll.addView(MBBaLayout);
            MBBaLayout1.addView(MBBaScroll);
	                  
	                  MBBamenu8 = new android.widget.PopupWindow(MBBaLayout1, ctx.getWindowManager().getDefaultDisplay().getWidth()/2, ctx.getWindowManager().getDefaultDisplay().getHeight());
MBBamenu8.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(2,0,0,0))); 
            MBBamenu8.showAtLocation(ctx.getWindow().getDecorView(), GUIPos | Gravity.TOP, 0, 0);
        }catch(error){
            print("AJMODSMCPE FOUND " + error+"ERRORS");
        }
    }}));
}

//////////Info

function mbd9(){
MBBamenu9.dismiss();
MBamenu9.dismiss();
}

function mb9(){
MBBaMenu9();
MBaMenu9();
}

//////////////////message board lay top

 function MBaMenu9(){
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    ctx.runOnUiThread(new java.lang.Runnable({ run: function(){
        try{
            var MBaLayout = new android.widget.LinearLayout(ctx);
            var MBaScroll = new android.widget.ScrollView(ctx);
            var MBaLayout1 = new android.widget.LinearLayout(ctx);
            MBaLayout.setOrientation(1);
            MBaLayout1.setOrientation(1);

            MBaScroll.addView(MBaLayout);
            MBaLayout1.addView(MBaScroll);
	                  

var scrollText = new android.widget.TextView(ctx);
scrollText.setText("⚠Player Info⚠");
scrollText.setTextSize(15);                                                                                  scrollText.setTextColor(android.graphics.Color.YELLOW);

 
scrollText.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));

scrollText.setEllipsize(android.text.TextUtils.TruncateAt.MARQUEE);

scrollText.setMarqueeRepeatLimit(-1);
//
scrollText.setSingleLine();
scrollText.setHorizontallyScrolling(true);
scrollText.setSelected(true);
////////////
MBaLayout.addView(scrollText);



var cT45 = new android.widget.Button(ctx);
                cT45.setText("Back");
				cT45.setTextColor(BUTcurr);
           cT45.setTextSize(BUTsize);
cT45.getBackground().setColorFilter(BUTcurr2, android.graphics.PorterDuff.Mode.MULTIPLY);
cT45.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
mbd9();
mb4()
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);

				}
}); 
MBaLayout.addView(cT45);

textview = android.widget.TextView(ctx);            textview.setText("Item ID: " + Player.getCarriedItem() + ":" + Player.getCarriedItemData() + "\nPlayer name: " + Player.getName(Player.getEntity()) +"\nPlayer health: "+Entity.getHealth(getPlayerEnt())+"/20\nWorld name: "+Level.getWorldName()+"\nTime: "+Level.getTime()+"\nGamemode: " +Level.getGameMode()+"\nx:" + Math.round(Player.getX())+" y:"+Math.round(Player.getY())+" z:"+Math.round(Player.getZ()) + "\nRain/Lightning: " + Math.round(Level.getRainLevel()) + "/" + Math.round(Level.getLightningLevel()) + "\nV " + ModPE.getMinecraftVersion() + "\nBiome: " + Level.getBiomeName());
textview.setTextSize(15);                                                                                  textview.setTextColor(android.graphics.Color.YELLOW);
textview.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));       MBaLayout.addView(textview);
	                   MBamenu9 = new android.widget.PopupWindow(MBaLayout1, ctx.getWindowManager().getDefaultDisplay().getWidth()/2, ctx.getWindowManager().getDefaultDisplay().getHeight());
MBamenu9.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(2,0,0,0))); 
            MBamenu9.showAtLocation(ctx.getWindow().getDecorView(), GUIPos | Gravity.TOP, 0, 0);
        }catch(error){
            print("AJMODSMCPE FOUND " + error+"ERRORS");
        }
    }}));
}

/////////////////mb b

 function MBBaMenu9(){
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    ctx.runOnUiThread(new java.lang.Runnable({ run: function(){
        try{
            var MBBaLayout = new android.widget.LinearLayout(ctx);
            var MBBaScroll = new android.widget.ScrollView(ctx);
            var MBBaLayout1 = new android.widget.LinearLayout(ctx);
            MBBaLayout.setOrientation(1);
            MBBaLayout1.setOrientation(1);

            MBBaScroll.addView(MBBaLayout);
            MBBaLayout1.addView(MBBaScroll);
	                  
	                  MBBamenu9 = new android.widget.PopupWindow(MBBaLayout1, ctx.getWindowManager().getDefaultDisplay().getWidth()/2, ctx.getWindowManager().getDefaultDisplay().getHeight());
MBBamenu9.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(2,0,0,0))); 
            MBBamenu9.showAtLocation(ctx.getWindow().getDecorView(), GUIPos | Gravity.TOP, 0, 0);
        }catch(error){
            print("AJMODSMCPE FOUND " + error+"ERRORS");
        }
    }}));
}

//////////msg

function mbd10(){
MBBamenu10.dismiss();
MBamenu10.dismiss();
}

function mb10(){
MBBaMenu10();
MBaMenu10();
}

//////////////////message board lay top

 function MBaMenu10(){
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    ctx.runOnUiThread(new java.lang.Runnable({ run: function(){
        try{
            var MBaLayout = new android.widget.LinearLayout(ctx);
            var MBaScroll = new android.widget.ScrollView(ctx);
            var MBaLayout1 = new android.widget.LinearLayout(ctx);
            MBaLayout.setOrientation(1);
            MBaLayout1.setOrientation(1);

            MBaScroll.addView(MBaLayout);
            MBaLayout1.addView(MBaScroll);
	                  

var scrollText = new android.widget.TextView(ctx);
scrollText.setText("⚠Message Menu⚠");
scrollText.setTextSize(15);                                                                                  scrollText.setTextColor(android.graphics.Color.BLUE);

 
scrollText.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));

scrollText.setEllipsize(android.text.TextUtils.TruncateAt.MARQUEE);

scrollText.setMarqueeRepeatLimit(-1);
//
scrollText.setSingleLine();
scrollText.setHorizontallyScrolling(true);
scrollText.setSelected(true);
////////////
MBaLayout.addView(scrollText);



var cT46 = new android.widget.Button(ctx);
                cT46.setText("Back");
				cT46.setTextColor(BUTcurr);
cT46.getBackground().setColorFilter(BUTcurr2, android.graphics.PorterDuff.Mode.MULTIPLY);           cT46.setTextSize(BUTsize);

cT46.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
mbd10();
mb4()
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);

				}
}); 
MBaLayout.addView(cT46);

var button44 = new android.widget.Switch(ctx);
button44.setText("Auto Spam 1");
button44.setTextColor(BUTcurr);
           button44.setTextSize(BUTsize);button44.setChecked(switched44);
button44.setOnCheckedChangeListener(new android.widget.CompoundButton.OnCheckedChangeListener({
onCheckedChanged:
function(){
if(switched44 == false) {
switched44 = true;
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}else if(switched44 == true){
switched44 = false;
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}
}
}));
MBaLayout.addView(button44);

var button45 = new android.widget.Switch(ctx);
button45.setText("Auto Spam 2");
button45.setTextColor(BUTcurr);
           button45.setTextSize(BUTsize);button45.setChecked(switched45);
button45.setOnCheckedChangeListener(new android.widget.CompoundButton.OnCheckedChangeListener({
onCheckedChanged:
function(){
if(switched45 == false) {
switched45 = true;
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}else if(switched45 == true){
switched45 = false;
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}
}
}));
MBaLayout.addView(button45)



var button47 = new android.widget.Switch(ctx);
button47.setText("Mute The Chat");
button47.setTextColor(BUTcurr);
           button47.setTextSize(BUTsize);button47.setChecked(switched47);
button47.setOnCheckedChangeListener(new android.widget.CompoundButton.OnCheckedChangeListener({
onCheckedChanged:
function(){
if(switched47 == false) {
switched47 = true;
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}else if(switched47 == true){
switched47 = false;
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}
}
}));
MBaLayout.addView(button47)

	                   MBamenu10 = new android.widget.PopupWindow(MBaLayout1, ctx.getWindowManager().getDefaultDisplay().getWidth()/2, ctx.getWindowManager().getDefaultDisplay().getHeight());
MBamenu10.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(2,0,0,0))); 
            MBamenu10.showAtLocation(ctx.getWindow().getDecorView(), GUIPos | Gravity.TOP, 0, 0);
        }catch(error){
            print("AJMODSMCPE FOUND " + error+"ERRORS");
        }
    }}));
}

/////////////////mb b

 function MBBaMenu10(){
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    ctx.runOnUiThread(new java.lang.Runnable({ run: function(){
        try{
            var MBBaLayout = new android.widget.LinearLayout(ctx);
            var MBBaScroll = new android.widget.ScrollView(ctx);
            var MBBaLayout1 = new android.widget.LinearLayout(ctx);
            MBBaLayout.setOrientation(1);
            MBBaLayout1.setOrientation(1);

            MBBaScroll.addView(MBBaLayout);
            MBBaLayout1.addView(MBBaScroll);
	                  
	                  MBBamenu10 = new android.widget.PopupWindow(MBBaLayout1, ctx.getWindowManager().getDefaultDisplay().getWidth()/2, ctx.getWindowManager().getDefaultDisplay().getHeight());
MBBamenu10.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(2,0,0,0))); 
            MBBamenu10.showAtLocation(ctx.getWindow().getDecorView(), GUIPos | Gravity.TOP, 0, 0);
        }catch(error){
            print("AJMODSMCPE FOUND " + error+"ERRORS");
        }
    }}));
}

//////////morph

function mbd11(){
MBBamenu11.dismiss();
MBamenu11.dismiss();
}

function mb11(){
MBBaMenu11();
MBaMenu11();
}

//////////////////message board lay top

 function MBaMenu11(){
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    ctx.runOnUiThread(new java.lang.Runnable({ run: function(){
        try{
            var MBaLayout = new android.widget.LinearLayout(ctx);
            var MBaScroll = new android.widget.ScrollView(ctx);
            var MBaLayout1 = new android.widget.LinearLayout(ctx);
            MBaLayout.setOrientation(1);
            MBaLayout1.setOrientation(1);

            MBaScroll.addView(MBaLayout);
            MBaLayout1.addView(MBaScroll);
	                  

var scrollText = new android.widget.TextView(ctx);
scrollText.setText("⚠Morph Menu⚠");
scrollText.setTextSize(15);                                                                                  scrollText.setTextColor(android.graphics.Color.GREEN);

 
scrollText.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));

scrollText.setEllipsize(android.text.TextUtils.TruncateAt.MARQUEE);

scrollText.setMarqueeRepeatLimit(-1);
//
scrollText.setSingleLine();
scrollText.setHorizontallyScrolling(true);
scrollText.setSelected(true);
////////////
MBaLayout.addView(scrollText);



var cT48 = new android.widget.Button(ctx);

cT48.setText("Back");

cT48.setTextColor(BUTcurr);

cT48.setTextSize(BUTsize);
cT48.getBackground().setColorFilter(BUTcurr2, android.graphics.PorterDuff.Mode.MULTIPLY);
cT48.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
mbd11();
mb4()
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);

				}
}); 
MBaLayout.addView(cT48);

var cT50 = new android.widget.Button(ctx);
                cT50.setText("Set Arrow");
                cT50.setTextColor(BUTcurr);
           cT50.setTextSize(BUTsize);				cT50.getBackground().setColorFilter(BUTcurr2, android.graphics.PorterDuff.Mode.MULTIPLY);
cT50.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
Entity.setCollisionSize(Player.getEntity(), 0.5, 0.5);
			Entity.setRenderType(Player.getEntity(), EntityRenderType.arrow);
			Entity.setMobSkin(Player.getEntity(),"mob/arrow.png");

Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);

				}
}); 
MBaLayout.addView(cT50);

var cT51 = new android.widget.Button(ctx);
                cT51.setText("Set Lightning");
				cT51.setTextColor(BUTcurr);
           cT51.setTextSize(BUTsize);
cT51.getBackground().setColorFilter(BUTcurr2, android.graphics.PorterDuff.Mode.MULTIPLY);
cT51.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
Entity.setCollisionSize(Player.getEntity(), 0.1, 0.1);
			Entity.setRenderType(Player.getEntity(), EntityRenderType.lightningBolt);
			Entity.setMobSkin(Player.getEntity(),"mob/lightningBolt.png");
ModPE.resetFov();
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);

				}
}); 
MBaLayout.addView(cT51);

var cT52 = new android.widget.Button(ctx);
                cT52.setText("Set Camera");
				cT52.setTextColor(BUTcurr);
           cT52.setTextSize(BUTsize);
cT52.getBackground().setColorFilter(BUTcurr2, android.graphics.PorterDuff.Mode.MULTIPLY);
cT52.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
Entity.setCollisionSize(Player.getEntity(), 0.9, 0.8);
			Entity.setRenderType(Player.getEntity(), EntityRenderType.camera);
			Entity.setMobSkin(Player.getEntity(),"mob/camera.png");

Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);

				}
}); 
MBaLayout.addView(cT52);

var cT53 = new android.widget.Button(ctx);
                cT53.setText("Set Player");
				cT53.setTextColor(BUTcurr);
           cT53.setTextSize(BUTsize);
cT53.getBackground().setColorFilter(BUTcurr2, android.graphics.PorterDuff.Mode.MULTIPLY);
cT53.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
Entity.setCollisionSize(Player.getEntity(), 0.6, 0.7);
			Entity.setRenderType(Player.getEntity(), EntityRenderType.player);

 ModPE.resetFov();
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);

				}
}); 
MBaLayout.addView(cT53);

var cT54 = new android.widget.Button(ctx);
                cT54.setText("Set Bat");
				cT54.setTextColor(BUTcurr);
           cT54.setTextSize(BUTsize);
cT54.getBackground().setColorFilter(BUTcurr2, android.graphics.PorterDuff.Mode.MULTIPLY);
cT54.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
Entity.setCollisionSize(Player.getEntity(), 0.2, 0.2, 0.2);

Entity.setRenderType(Player.getEntity(), EntityRenderType.bat);
			Entity.setMobSkin(Player.getEntity(),"mob/bat.png");
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);

				}
}); 
MBaLayout.addView(cT54);

var cT55 = new android.widget.Button(ctx);
                cT55.setText("Set Chicken");
				cT55.setTextColor(BUTcurr);
           cT55.setTextSize(BUTsize);
cT55.getBackground().setColorFilter(BUTcurr2, android.graphics.PorterDuff.Mode.MULTIPLY);
cT55.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
Entity.setCollisionSize(Player.getEntity(), 0.5, 0.7);
			Entity.setRenderType(Player.getEntity(), EntityRenderType.chicken);
			Entity.setMobSkin(Player.getEntity(),"mob/chicken.png");
Entity.setVelY(Player.getEntity(), 0.000002);
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);

				}
}); 
MBaLayout.addView(cT55);

var cT56 = new android.widget.Button(ctx);
                cT56.setText("Set Mooshroom");
				cT56.setTextColor(BUTcurr);
           cT56.setTextSize(BUTsize);
cT56.getBackground().setColorFilter(BUTcurr2, android.graphics.PorterDuff.Mode.MULTIPLY);
cT56.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
Entity.setCollisionSize(Player.getEntity(), 0.5, 0.7);
ModPE.resetFov();

Entity.setRenderType(Player.getEntity(), EntityRenderType.mushroomCow);
			Entity.setMobSkin(Player.getEntity(),"mob/mooshroom.png");
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);

				}
}); 
MBaLayout.addView(cT56);

var cT57 = new android.widget.Button(ctx);
                cT57.setText("Set Invisible Spider");
				cT57.setTextColor(BUTcurr);
           cT57.setTextSize(BUTsize);
cT57.getBackground().setColorFilter(BUTcurr2, android.graphics.PorterDuff.Mode.MULTIPLY);
cT57.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
Entity.setCollisionSize(Player.getEntity(), 0.6, 1.5);
			 Entity.setRenderType(Player.getEntity(), EntityRenderType.spider);
			Entity.setMobSkin(Player.getEntity(),"mob/spider.png");

ModPE.resetFov();
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);

				}
}); 
MBaLayout.addView(cT57);

var cT58 = new android.widget.Button(ctx);
                cT58.setText("Set Cow");
				cT58.setTextColor(BUTcurr);
           cT58.setTextSize(BUTsize);
cT58.getBackground().setColorFilter(BUTcurr2, android.graphics.PorterDuff.Mode.MULTIPLY);
cT58.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
Entity.setCollisionSize(Player.getEntity(), 0.9, 0.8);
			 Entity.setRenderType(Player.getEntity(), EntityRenderType.cow);
			Entity.setMobSkin(Player.getEntity(),"mob/cow.png");

Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);

				}
}); 
MBaLayout.addView(cT58);

var cT59 = new android.widget.Button(ctx);
                cT59.setText("Set Ghast");
				cT59.setTextColor(BUTcurr);
           cT59.setTextSize(BUTsize);
cT59.getBackground().setColorFilter(BUTcurr2, android.graphics.PorterDuff.Mode.MULTIPLY);
cT59.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
Entity.setCollisionSize(Player.getEntity(), 4, 4);
			Entity.setRenderType(Player.getEntity(), EntityRenderType.ghast);
			Entity.setMobSkin(Player.getEntity(),"mob/ghast.png");
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);

				}
}); 
MBaLayout.addView(cT59);

var cT60 = new android.widget.Button(ctx);
                cT60.setText("Set Zombie");
				cT60.setTextColor(BUTcurr);
           cT60.setTextSize(BUTsize);
cT60.getBackground().setColorFilter(BUTcurr2, android.graphics.PorterDuff.Mode.MULTIPLY);
cT60.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
Entity.setCollisionSize(Player.getEntity(), 0.6, 0.8);
			Entity.setRenderType(Player.getEntity(),  EntityRenderType.zombie);
			Entity.setMobSkin(Player.getEntity(),"mob/zombie.png");

Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);

				}
}); 
MBaLayout.addView(cT60);

var cT61 = new android.widget.Button(ctx);
                cT61.setText("Set Skeleton");
				cT61.setTextColor(BUTcurr);
           cT61.setTextSize(BUTsize);
cT61.getBackground().setColorFilter(BUTcurr2, android.graphics.PorterDuff.Mode.MULTIPLY);
cT61.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
Entity.setCollisionSize(Player.getEntity(), 0.6, 0.8);
			Entity.setRenderType(Player.getEntity(), EntityRenderType.skeleton);
			Entity.setMobSkin(Player.getEntity(),"mob/skeleton.png");
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);

				}
}); 
MBaLayout.addView(cT61);

var cT62 = new android.widget.Button(ctx);
                cT62.setText("Set Creeper");
				cT62.setTextColor(BUTcurr);
           cT62.setTextSize(BUTsize);
cT62.getBackground().setColorFilter(BUTcurr2, android.graphics.PorterDuff.Mode.MULTIPLY);
cT62.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
Entity.setCollisionSize(Player.getEntity(), 0.8, 06);
			Entity.setRenderType(Player.getEntity(), EntityRenderType.creeper);
			Entity.setMobSkin(Player.getEntity(),"mob/creeper.png");
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);

				}
}); 
MBaLayout.addView(cT62);

var cT63 = new android.widget.Button(ctx);
                cT63.setText("Set Enderman");
				cT63.setTextColor(BUTcurr);
           cT63.setTextSize(BUTsize);
cT63.getBackground().setColorFilter(BUTcurr2, android.graphics.PorterDuff.Mode.MULTIPLY);
cT63.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
Entity.setCollisionSize(Player.getEntity(), 1.8, 0.8);

Entity.setRenderType(Player.getEntity(), EntityRenderType.enderman);
			Entity.setMobSkin(Player.getEntity(),"mob/enderman.png");
ModPE.resetFov();
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);

				}
}); 
MBaLayout.addView(cT63);

var cT64 = new android.widget.Button(ctx);
                cT64.setText("Set Blaze");
				cT64.setTextColor(BUTcurr);
           cT64.setTextSize(BUTsize);
cT64.getBackground().setColorFilter(BUTcurr2, android.graphics.PorterDuff.Mode.MULTIPLY);
cT64.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
Entity.setCollisionSize(Player.getEntity(), 0.5, 2, 0.5);
Entity.setRenderType(Player.getEntity(), EntityRenderType.blaze);
			Entity.setMobSkin(Player.getEntity(),"mob/blaze.png");

Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);

				}
}); 
MBaLayout.addView(cT64);

var cT65 = new android.widget.Button(ctx);
                cT65.setText("Set Silverfish");
				cT65.setTextColor(BUTcurr);
           cT65.setTextSize(BUTsize);
cT65.getBackground().setColorFilter(BUTcurr2, android.graphics.PorterDuff.Mode.MULTIPLY);
cT65.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
Entity.setCollisionSize(Player.getEntity(), 0.3, 0.4, 0.3);

Entity.setRenderType(Player.getEntity(), EntityRenderType.silverfish);
			Entity.setMobSkin(Player.getEntity(),"mob/silverfish.png");

Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);

				}
}); 
MBaLayout.addView(cT65);


	                   MBamenu11 = new android.widget.PopupWindow(MBaLayout1, ctx.getWindowManager().getDefaultDisplay().getWidth()/2, ctx.getWindowManager().getDefaultDisplay().getHeight());
MBamenu11.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(2,0,0,0))); 
            MBamenu11.showAtLocation(ctx.getWindow().getDecorView(), GUIPos | Gravity.TOP, 0, 0);
        }catch(error){
            print("AJMODSMCPE FOUND " + error+"ERRORS");
        }
    }}));
}

/////////////////mb b

 function MBBaMenu11(){
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    ctx.runOnUiThread(new java.lang.Runnable({ run: function(){
        try{
            var MBBaLayout = new android.widget.LinearLayout(ctx);
            var MBBaScroll = new android.widget.ScrollView(ctx);
            var MBBaLayout1 = new android.widget.LinearLayout(ctx);
            MBBaLayout.setOrientation(1);
            MBBaLayout1.setOrientation(1);

            MBBaScroll.addView(MBBaLayout);
            MBBaLayout1.addView(MBBaScroll);
	                  
	                  MBBamenu11 = new android.widget.PopupWindow(MBBaLayout1, ctx.getWindowManager().getDefaultDisplay().getWidth()/2, ctx.getWindowManager().getDefaultDisplay().getHeight());
MBBamenu11.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(2,0,0,0))); 
            MBBamenu11.showAtLocation(ctx.getWindow().getDecorView(), GUIPos | Gravity.TOP, 0, 0);
        }catch(error){
            print("AJMODSMCPE FOUND " + error+"ERRORS");
        }
    }}));
}

//////////settings

function mbd12(){
MBBamenu12.dismiss();
MBamenu12.dismiss();
}

function mb12(){
MBBaMenu12();
MBaMenu12();
}

//////////////////message board lay top

 function MBaMenu12(){
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    ctx.runOnUiThread(new java.lang.Runnable({ run: function(){
        try{
            var MBaLayout = new android.widget.LinearLayout(ctx);
            var MBaScroll = new android.widget.ScrollView(ctx);
            var MBaLayout1 = new android.widget.LinearLayout(ctx);
            MBaLayout.setOrientation(1);
            MBaLayout1.setOrientation(1);

            MBaScroll.addView(MBaLayout);
            MBaLayout1.addView(MBaScroll);
	                  

var scrollText = new android.widget.TextView(ctx);
scrollText.setText("⚠Settings⚠");
scrollText.setTextSize(15);                                                                                  scrollText.setTextColor(android.graphics.Color.GRAY);

 
scrollText.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));

scrollText.setEllipsize(android.text.TextUtils.TruncateAt.MARQUEE);

scrollText.setMarqueeRepeatLimit(-1);
//
scrollText.setSingleLine();
scrollText.setHorizontallyScrolling(true);
scrollText.setSelected(true);
////////////
MBaLayout.addView(scrollText);



var cT66 = new android.widget.Button(ctx);
                cT66.setText("Back");
				cT66.setTextColor(BUTcurr);
           cT66.setTextSize(BUTsize);
cT66.getBackground().setColorFilter(BUTcurr2, android.graphics.PorterDuff.Mode.MULTIPLY);
cT66.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
mbd12();
mb4()
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);

				}
}); 
MBaLayout.addView(cT66);

var cT67 = new android.widget.Button(ctx);
                cT67.setText("Set Menu Position");
				cT67.setTextColor(BUTcurr);
cT67.getBackground().setColorFilter(BUTcurr2, android.graphics.PorterDuff.Mode.MULTIPLY);           cT67.setTextSize(BUTsize);
cT67.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
hack();
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);			
				}
}); 
MBaLayout.addView(cT67);


 var cT70 = new android.widget.Button(ctx);
                cT70.setText("Color Menu 1");
				cT70.setTextColor(BUTcurr);
           cT70.setTextSize(BUTsize);
cT70.getBackground().setColorFilter(BUTcurr2, android.graphics.PorterDuff.Mode.MULTIPLY);
cT70.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
color1();
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);				
				}
}); 
MBaLayout.addView(cT70);

var cT71 = new android.widget.Button(ctx);
                cT71.setText("Color Menu 2");
				cT71.setTextColor(BUTcurr);
cT71.getBackground().setColorFilter(BUTcurr2, android.graphics.PorterDuff.Mode.MULTIPLY);           cT71.setTextSize(BUTsize);
cT71.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
color2();
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);

				}
}); 
MBaLayout.addView(cT71);

var cT101 = new android.widget.Button(ctx);
                cT101.setText("Button Text Color");
				cT101.setTextColor(BUTcurr);
cT101.getBackground().setColorFilter(BUTcurr2, android.graphics.PorterDuff.Mode.MULTIPLY);           cT101.setTextSize(BUTsize);

cT101.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
color3();
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);				
				}
}); 
MBaLayout.addView(cT101);

var cT102 = new android.widget.Button(ctx);
                cT102.setText("Button Size");
				cT102.setTextColor(BUTcurr);
cT102.getBackground().setColorFilter(BUTcurr2, android.graphics.PorterDuff.Mode.MULTIPLY);           cT102.setTextSize(BUTsize);

cT102.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
color4();
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);				
				}
}); 
MBaLayout.addView(cT102);

var cT103 = new android.widget.Button(ctx);
                cT103.setText("Button Color");
				cT103.setTextColor(BUTcurr);
cT103.getBackground().setColorFilter(BUTcurr2, android.graphics.PorterDuff.Mode.MULTIPLY);           cT103.setTextSize(BUTsize);

cT103.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
color5();
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);				
				}
}); 
MBaLayout.addView(cT103);

	                   MBamenu12 = new android.widget.PopupWindow(MBaLayout1, ctx.getWindowManager().getDefaultDisplay().getWidth()/2, ctx.getWindowManager().getDefaultDisplay().getHeight());
MBamenu12.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(2,0,0,0))); 
            MBamenu12.showAtLocation(ctx.getWindow().getDecorView(), GUIPos | Gravity.TOP, 0, 0);
        }catch(error){
            print("AJMODSMCPE FOUND " + error+"ERRORS");
        }
    }}));
}

/////////////////mb b

 function MBBaMenu12(){
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    ctx.runOnUiThread(new java.lang.Runnable({ run: function(){
        try{
            var MBBaLayout = new android.widget.LinearLayout(ctx);
            var MBBaScroll = new android.widget.ScrollView(ctx);
            var MBBaLayout1 = new android.widget.LinearLayout(ctx);
            MBBaLayout.setOrientation(1);
            MBBaLayout1.setOrientation(1);

            MBBaScroll.addView(MBBaLayout);
            MBBaLayout1.addView(MBBaScroll);
	                  
	                  MBBamenu12 = new android.widget.PopupWindow(MBBaLayout1, ctx.getWindowManager().getDefaultDisplay().getWidth()/2, ctx.getWindowManager().getDefaultDisplay().getHeight());
MBBamenu12.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(2,0,0,0))); 
            MBBamenu12.showAtLocation(ctx.getWindow().getDecorView(), GUIPos | Gravity.TOP, 0, 0);
        }catch(error){
            print("AJMODSMCPE FOUND " + error+"ERRORS");
        }
    }}));
} 

//////////nuke

function mbd13(){
MBBamenu13.dismiss();
MBamenu13.dismiss();
}

function mb13(){
MBBaMenu13();
MBaMenu13();
}

//////////////////message board lay top

 function MBaMenu13(){
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    ctx.runOnUiThread(new java.lang.Runnable({ run: function(){
        try{
            var MBaLayout = new android.widget.LinearLayout(ctx);
            var MBaScroll = new android.widget.ScrollView(ctx);
            var MBaLayout1 = new android.widget.LinearLayout(ctx);
            MBaLayout.setOrientation(1);
            MBaLayout1.setOrientation(1);

            MBaScroll.addView(MBaLayout);
            MBaLayout1.addView(MBaScroll);
	                  

var scrollText = new android.widget.TextView(ctx);
scrollText.setText("⚠Server Menu⚠");
scrollText.setTextSize(15);                                                                                  scrollText.setTextColor(android.graphics.Color.GRAY);

 
scrollText.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));

scrollText.setEllipsize(android.text.TextUtils.TruncateAt.MARQUEE);

scrollText.setMarqueeRepeatLimit(-1);
//
scrollText.setSingleLine();
scrollText.setHorizontallyScrolling(true);
scrollText.setSelected(true);
////////////
MBaLayout.addView(scrollText);



var cT85 = new android.widget.Button(ctx);
                cT85.setText("Back");
				cT85.setTextColor(BUTcurr);
cT85.getBackground().setColorFilter(BUTcurr2, android.graphics.PorterDuff.Mode.MULTIPLY);           cT85.setTextSize(BUTsize);
cT85.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
mbd13();
mb4()
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);

				}
}); 
MBaLayout.addView(cT85);

var cT86 = new android.widget.Button(ctx);
                cT86.setText("Server IP");
				cT86.setTextColor(BUTcurr);
cT86.getBackground().setColorFilter(BUTcurr2, android.graphics.PorterDuff.Mode.MULTIPLY);           cT86.setTextSize(BUTsize);
cT86.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
//Function Here
clientMessage("IP:§4 "+Server.getAddress()+" ");

Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}}); 
MBaLayout.addView(cT86);

var cT87 = new android.widget.Button(ctx);
                cT87.setText("Server Port");
				cT87.setTextColor(BUTcurr);
cT87.getBackground().setColorFilter(BUTcurr2, android.graphics.PorterDuff.Mode.MULTIPLY);           cT87.setTextSize(BUTsize);
cT87.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
//Function Here
clientMessage("Port:§4 "+Server.getPort()+" ");

Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);


}}); 
MBaLayout.addView(cT87);

var cT88 = new android.widget.Button(ctx);
                cT88.setText("Players");
				cT88.setTextColor(BUTcurr);
cT88.getBackground().setColorFilter(BUTcurr2, android.graphics.PorterDuff.Mode.MULTIPLY);           cT88.setTextSize(BUTsize);
cT88.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
//Function Here
clientMessage("Players:§4 "+ Server.getAllPlayers() +" ");

Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}
}); 
MBaLayout.addView(cT88);

textview = android.widget.TextView(ctx);            textview.setText("Fly In Survival: Go In Creative \nSuper Speed: Game Speed Changer \nZoom: Zoom Changer \nSniper Bow \nOnly Day \nReal Time Display \nMessage Menu \nWorld Options \nPlayer Info \nLantern \nBlood \n\nThere Are More Mods That Work In Servers But Only You Can See"); 
textview.setTextSize(20);                                                                                  textview.setTextColor(android.graphics.Color.WHITE);
textview.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));       

MBaLayout.addView(textview);



MBamenu13 = new android.widget.PopupWindow(MBaLayout1, ctx.getWindowManager().getDefaultDisplay().getWidth()/2, ctx.getWindowManager().getDefaultDisplay().getHeight());
MBamenu13.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(2,0,0,0))); 
            MBamenu13.showAtLocation(ctx.getWindow().getDecorView(), GUIPos | Gravity.TOP, 0, 0);
        }catch(error){
            print("AJMODSMCPE FOUND " + error+"ERRORS");
        }
    }}));
}

/////////////////mb b

 function MBBaMenu13(){
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    ctx.runOnUiThread(new java.lang.Runnable({ run: function(){
        try{
            var MBBaLayout = new android.widget.LinearLayout(ctx);
            var MBBaScroll = new android.widget.ScrollView(ctx);
            var MBBaLayout1 = new android.widget.LinearLayout(ctx);
            MBBaLayout.setOrientation(1);
            MBBaLayout1.setOrientation(1);

            MBBaScroll.addView(MBBaLayout);
            MBBaLayout1.addView(MBBaScroll);
	                  
	                  MBBamenu13 = new android.widget.PopupWindow(MBBaLayout1, ctx.getWindowManager().getDefaultDisplay().getWidth()/2, ctx.getWindowManager().getDefaultDisplay().getHeight());
MBBamenu13.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(2,0,0,0))); 
            MBBamenu13.showAtLocation(ctx.getWindow().getDecorView(), GUIPos | Gravity.TOP, 0, 0);
        }catch(error){
            print("AJMODSMCPE FOUND " + error+"ERRORS");
        }
    }}));
} 


/////Credit to Dr. NHA

// a r g b |
var GUIColor = new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(125,0,125,0));
//defalt green

var GUIColor1 =  new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(2,0,0,0)); 
//transparent

var GUIColor2 = new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(140,0,0,0)); 
//black

var GUIColor3 = new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(140,140,140,140)); 
//white

var GUIColor4 = new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(125,125,0,0));
//red

var GUIColor5 = new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(125,0,0,125));
//blue

var GUIColor6 = new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(125,80,80,80));
// light grey


var GUIColor7 = new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(125,50,50,50));
//grey

var GUIColor8 = new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(125,255,255,0));
//yellow


var GUIColor9 = new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(125,0,255,255));
//cyan

var GUIColor10 = new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(125,30,30,30));
//dark grey

var GUIColor11 = new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(125,0,125,0));
//green

var GUIColor12 = android.graphics.Color.MAGENTA;

var GUIName = android.graphics.Color.WHITE;

var currentColour = "black";

GUIColor99 = new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(125,120,0,82));
//pink

var Gravity = android.view.Gravity;
var GUIPos1 = Gravity.CENTER;
var GUIPos = Gravity.RIGHT;
var GUIcen = Gravity.CENTER;
var GUIright = Gravity.RIGHT;
var GUIleft = Gravity.LEFT;
/////// End
GUIColor15 = new android.graphics.drawable.ColorDrawable(android.graphics.Color.GREEN);

GUIColor16 = new android.graphics.drawable.ColorDrawable(android.graphics.Color.LTGRAY);

GUIColor17 = new android.graphics.drawable.ColorDrawable(android.graphics.Color.GRAY);

GUIColor18 = new android.graphics.drawable.ColorDrawable(android.graphics.Color.DKGRAY);

GUIColor19 = new android.graphics.drawable.ColorDrawable(android.graphics.Color.CYAN);

GUIColor20 = new android.graphics.drawable.ColorDrawable(android.graphics.Color.YELLOW);

GUIColor21 = new android.graphics.drawable.ColorDrawable(android.graphics.Color.BLUE);

GUIColor22 = new android.graphics.drawable.ColorDrawable(android.graphics.Color.MAGENTA);

GUIColor23 = new android.graphics.drawable.ColorDrawable(android.graphics.Color.RED);

GUIColor24 = new android.graphics.drawable.ColorDrawable(android.graphics.Color.WHITE);

GUIColor25 = new android.graphics.drawable.ColorDrawable(android.graphics.Color.BLACK);
//////////
//button size//
var BUTsize = 15;
//defalt

var BUTsize1 = 2;
//x small

var BUTsize2 = 10;
//small

var BUTsize3 = 15;
//medium

var BUTsize5 = 25;
//large

var BUTsize6 = 35;
//x large


//////text colour/////
var BUTcurr = android.graphics.Color.WHITE;
//current

var BUTblue = android.graphics.Color.BLUE;

var BUTgreen = android.graphics.Color.GREEN;

var BUTblack = android.graphics.Color.BLACK;

var BUTyellow = android.graphics.Color.YELLOW;

var BUTred = android.graphics.Color.RED;

var BUTwhite = android.graphics.Color.WHITE;
////////////////
function red(){
BUTcurr = BUTred 
}

function blue(){
BUTcurr = BUTblue 
}

function yellow(){
BUTcurr = BUTyellow
}

function green(){
BUTcurr = BUTgreen
}

function black(){
BUTcurr = BUTblack
}

//////button colour/////
var BUTcurr2 = android.graphics.Color.TRANSPARENT;
//current

var BUTblue2 = android.graphics.Color.BLUE;

var BUTgreen2 = android.graphics.Color.GREEN;

var BUTblack2 = android.graphics.Color.BLACK;

var BUTyellow2 = android.graphics.Color.YELLOW;

var BUTred2 = android.graphics.Color.RED;

var BUTwhite2 = android.graphics.Color.WHITE;

var BUTtran2 = android.graphics.Color.TRANSPARENT;
////////////////
function red(){
BUTcurr2 = BUTred2 
}

function blue(){
BUTcurr2 = BUTblue2 
}

function yellow(){
BUTcurr2 = BUTyellow2
}

function green(){
BUTcurr2 = BUTgreen2
}

function black(){
BUTcurr2 = BUTblack2
}

function transparent(){
BUTcurr2 = BUTtran2
}

function white(){
BUTcurr2 = BUTwhite2
}

Block.defineBlock(200,"§eLight",["stone",0],0, false, 0);
Block.setShape(200, 0, 0, 0, 0, 0, 0);
Block.setLightLevel(200, 15);
var dup = "";
var cntr = 0;
var tick = 0;
var tickSec = 0;
var tickMin = 0;
var setName = 0;
var GUI;
var mbbb11 = false;
var mbbb10 = false;
var mbbb9 = false;
var mbbb8 = false;
var mbbb7 = false;
var mbbb6 = false;
var mbbb5 = false;
var mbbb4 = false;
var mbbb3 = false;
var mbbb2 = false;
var mbbb = false;
var toggled01 = false;
var toggled1 = false;
var switched11 = false;
var switched19 = false;
var switched20 = false;
var switched21 = false;
var switched22 = false;
var switched23 = false;
var switched24 = false;
var switched25 = false;
var switched26 = false;
var switched27 = false;
var switched28 = false;
var switched29 = false;
var switched30 = false;
var switched31 = false;
var switched32 = false;
var switched33 = false;
var switched34 = false;
var switched35 = false;
var switched36 = false;
var switched37 = false;
var switched38 = false;
var switched39 = false;
var switched40 = false;
var switched41 = false;
var switched42 = false;
var switched43 = false;
var switched44 = false;
var switched45 = false;
var switched46 = false;
var switched47 = false;
var switched48 = false;
var switched49 = false;
var switched50 = false;
var switched51 = false;
var sbpProgress1 = 0;
var sbpProgress2 = 0;
var sbpProgress3 = 0;
pointKill = false;
ver = true;
entiStop = false;
tp = false;
autocrit = false;
var s = 1;
var Xpos = 0;
var Zpos = 0;
var s = 0;
var Xdiff = 0;
var Zdiff = 0;
var isFalling = false;
var ride = null;
const VEL_Y_OFFSET = -0.07840000092983246;
var can = 1;
var canGetHP = 1;
var HP;
var gravity = -0.07840000092983246;
var playerDir = [0, 0, 0];
var mobDir = [0, 0, 0];
var DEG_TO_RAD = Math.PI / 180;
var playerFlySpeed = 1;
var fps = 0;
var lastLoop = new Date;
var jumpUI = null;
var jumpHeight = "1";
var speed = "1";
var jump = 0;
var jumpVel = 0;
var playerDir = [0, 0, 0];
var mobDir = [0, 0, 0];
var DEG_TO_RAD = Math.PI / 180;
var curticks=0;
var uri1 = "https://www.google.com/search?q=";
var uri2 = "&oq=";
var uri3 = "&aqs=chrome..69i57.305838j0j4&client=ms-unknown&sourceid=chrome-mobile&ie=UTF-8";
var numbers = android.text.InputType.TYPE_CLASS_NUMBER;
var number = android.text.InputType.TYPE_NUMBER_FLAG_SIGNED;
var count = Player.getInventorySlotCount();
var zoom = true;
var carriedItem;
//Variables (Credit To PixelDroid)

var ppx, ppy, ppz = 0;


//The Event Where The Location Is Saved

function deathHook(m, v) {

if(m==Player.getEntity() && Entity.getNameTag(v)=="" && Player.getCarriedItem(m)!=261) {
    if(Entity.getEntityTypeId(v)==10) {
			clientMessage("Chicken was slain by " + Player.getName(Player.getEntity()));
		}
		if(Entity.getEntityTypeId(v)==11) {
			clientMessage("Cow was slain by " + Player.getName(Player.getEntity()));
		}
		if(Entity.getEntityTypeId(v)==12) {
			clientMessage("Pig was slain by " + Player.getName(Player.getEntity()));
		}
		if(Entity.getEntityTypeId(v)==13) {
			clientMessage("Sheep was slain by " + Player.getName(Player.getEntity()));
		}
		if(Entity.getEntityTypeId(v)==14) {
			clientMessage("Wolf was slain by " + Player.getName(Player.getEntity()));
		}
		if(Entity.getEntityTypeId(v)==15) {
			clientMessage("Villager was slain by " + Player.getName(Player.getEntity()));
		}
		if(Entity.getEntityTypeId(v)==16) {
			clientMessage("Mooshroom was slain by " + Player.getName(Player.getEntity()));
		}
		if(Entity.getEntityTypeId(v)==17) {
			clientMessage("Squid was slain by " + Player.getName(Player.getEntity()));
		}
		if(Entity.getEntityTypeId(v)==18) {
			clientMessage("Rabbit was slain by " + Player.getName(Player.getEntity()));
		}
		if(Entity.getEntityTypeId(v)==19) {
			clientMessage("Bat was slain by " + Player.getName(Player.getEntity()));
		}
		if(Entity.getEntityTypeId(v)==20) {
			clientMessage("Iron Golem was slain by " + Player.getName(Player.getEntity()));
		}
		if(Entity.getEntityTypeId(v)==21) {
			clientMessage("Snow Golem was slain by " + Player.getName(Player.getEntity()));
		}
		if(Entity.getEntityTypeId(v)==22) {
			clientMessage("Ocelot was slain by " + Player.getName(Player.getEntity()));
		}
		if(Entity.getEntityTypeId(v)==32) {
			clientMessage("Zombie was slain by " + Player.getName(Player.getEntity()));
		}
		if(Entity.getEntityTypeId(v)==33) {
			clientMessage("Creeper was slain by " + Player.getName(Player.getEntity()));
		}
		if(Entity.getEntityTypeId(v)==34) {
			clientMessage("Skeleton was slain by " + Player.getName(Player.getEntity()));
		}
		if(Entity.getEntityTypeId(v)==35) {
			clientMessage("Spider was slain by " + Player.getName(Player.getEntity()));
		}
		if(Entity.getEntityTypeId(v)==36) {
			clientMessage("Zombie Pigman was slain by " + Player.getName(Player.getEntity()));
		}
		if(Entity.getEntityTypeId(v)==37) {
			clientMessage("Slime was slain by " + Player.getName(Player.getEntity()));
		}
		if(Entity.getEntityTypeId(v)==38) {
			clientMessage("Enderman was slain by " + Player.getName(Player.getEntity()));
		}
		if(Entity.getEntityTypeId(v)==39) {
			clientMessage("Silverfish was slain by " + Player.getName(Player.getEntity()));
		}
		if(Entity.getEntityTypeId(v)==40) {
			clientMessage("Cave Spider was slain by " + Player.getName(Player.getEntity()));
		}
		if(Entity.getEntityTypeId(v)==41) {
			clientMessage("Ghast was slain by " + Player.getName(Player.getEntity()));
		}
		if(Entity.getEntityTypeId(v)==42) {
			clientMessage("Magma Cube was slain by " + Player.getName(Player.getEntity()));
		}
		if(Entity.getEntityTypeId(v)==43) {
			clientMessage("Blaze was slain by " + Player.getName(Player.getEntity()));
		}
		if(Entity.getEntityTypeId(v)==44) {
			clientMessage("Zombie Villager was slain by " + Player.getName(Player.getEntity()));
		}
		if(Entity.getEntityTypeId(v)==45) {
			clientMessage("Witch was slain by " + Player.getName(Player.getEntity()));
		}
		}
		if(m==Player.getEntity() && !Entity.getNameTag(v)=="" && Player.getCarriedItem(m)!=261) {
			clientMessage(Entity.getNameTag(v) + " was slain by " + Player.getName(Player.getEntity()));
			}
			if(m==Player.getEntity() && Entity.getNameTag(v)=="" && Player.getCarriedItem(m)==261) {
    if(Entity.getEntityTypeId(v)==10) {
			clientMessage("Chicken was shot by " + Player.getName(Player.getEntity()));
		}
		if(Entity.getEntityTypeId(v)==11) {
			clientMessage("Cow was shot by " + Player.getName(Player.getEntity()));
		}
		if(Entity.getEntityTypeId(v)==12) {
			clientMessage("Pig was shot by " + Player.getName(Player.getEntity()));
		}
		if(Entity.getEntityTypeId(v)==13) {
			clientMessage("Sheep was shot by " + Player.getName(Player.getEntity()));
		}
		if(Entity.getEntityTypeId(v)==14) {
			clientMessage("Wolf was shot by " + Player.getName(Player.getEntity()));
		}
		if(Entity.getEntityTypeId(v)==15) {
			clientMessage("Villager was shot by " + Player.getName(Player.getEntity()));
		}
		if(Entity.getEntityTypeId(v)==16) {
			clientMessage("Mooshroom was shot by " + Player.getName(Player.getEntity()));
		}
		if(Entity.getEntityTypeId(v)==17) {
			clientMessage("Squid was shot by " + Player.getName(Player.getEntity()));
		}
		if(Entity.getEntityTypeId(v)==18) {
			clientMessage("Rabbit was shot by " + Player.getName(Player.getEntity()));
		}
		if(Entity.getEntityTypeId(v)==19) {
			clientMessage("Bat was shot by " + Player.getName(Player.getEntity()));
		}
		if(Entity.getEntityTypeId(v)==20) {
			clientMessage("Iron Golem was shot by " + Player.getName(Player.getEntity()));
		}
		if(Entity.getEntityTypeId(v)==21) {
			clientMessage("Snow Golem was shot by " + Player.getName(Player.getEntity()));
		}
		if(Entity.getEntityTypeId(v)==22) {
			clientMessage("Ocelot was shot by " + Player.getName(Player.getEntity()));
		}
		if(Entity.getEntityTypeId(v)==32) {
			clientMessage("Zombie was shot by " + Player.getName(Player.getEntity()));
		}
		if(Entity.getEntityTypeId(v)==33) {
			clientMessage("Creeper was shot by " + Player.getName(Player.getEntity()));
		}
		if(Entity.getEntityTypeId(v)==34) {
			clientMessage("Skeleton was shot by " + Player.getName(Player.getEntity()));
		}
		if(Entity.getEntityTypeId(v)==35) {
			clientMessage("Spider was shot by " + Player.getName(Player.getEntity()));
		}
		if(Entity.getEntityTypeId(v)==36) {
			clientMessage("Zombie Pigman was shot by " + Player.getName(Player.getEntity()));
		}
		if(Entity.getEntityTypeId(v)==37) {
			clientMessage("Slime was shot by " + Player.getName(Player.getEntity()));
		}
		if(Entity.getEntityTypeId(v)==38) {
			clientMessage("Enderman was shot by " + Player.getName(Player.getEntity()));
		}
		if(Entity.getEntityTypeId(v)==39) {
			clientMessage("Silverfish was shot by " + Player.getName(Player.getEntity()));
		}
		if(Entity.getEntityTypeId(v)==40) {
			clientMessage("Cave Spider was shot by " + Player.getName(Player.getEntity()));
		}
		if(Entity.getEntityTypeId(v)==41) {
			clientMessage("Ghast was shot by " + Player.getName(Player.getEntity()));
		}
		if(Entity.getEntityTypeId(v)==42) {
			clientMessage("Magma Cube was shot by " + Player.getName(Player.getEntity()));
		}
		if(Entity.getEntityTypeId(v)==43) {
			clientMessage("Blaze was shot by " + Player.getName(Player.getEntity()));
		}
		if(Entity.getEntityTypeId(v)==44) {
			clientMessage("Zombie Villager was shot by " + Player.getName(Player.getEntity()));
		}
		if(Entity.getEntityTypeId(v)==45) {
			clientMessage("Witch was shot by " + Player.getName(Player.getEntity()));
		}
		}
		if(m==Player.getEntity() && !Entity.getNameTag(v)=="" && Player.getCarriedItem(m)==261) {
			clientMessage(Entity.getNameTag(v) + " was shot by " + Player.getName(Player.getEntity()));
			}
			



if(Player.getEntity(v)) {

ModPE.saveData("x_pD_" + Level.getWorldDir(),Player.getX().toString());

ModPE.saveData("y_pD_" + Level.getWorldDir(),Player.getY().toString());

ModPE.saveData("z_pD_" + Level.getWorldDir(),Player.getZ().toString());

}

}




function pDOpen() {

Entity.setPosition(Player.getEntity(), ppx, ppy, ppz);

}

line111 = false
var Speed = 110;
var greenPOS = 0;
var Online = false;
var Start = false;
var directory = new android.graphics.BitmapFactory.decodeFile("/sdcard/games/com.mojang/minecraftpe/Nha/motion.png"); 
var FFN = 
false;
var moneyDrop = false;
var God = false;
var numbers = android.text.InputType.TYPE_CLASS_NUMBER;
var number = false; android.text.InputType.TYPE_NUMBER_FLAG_SIGNED;
var textview;
var GUI;
var RenderLayer = 1;
var OpaqLayer  = 0;
var menu;
var BtnOn = true;
var flyon = false;
var un = false;
var inGame = false;
var img1 = new android.graphics.BitmapFactory.decodeFile("mnt/sdcard/games/com.mojang/ModScript/DamageIndicators/main.png");
var img2 = new android.graphics.BitmapFactory.decodeFile("mnt/sdcard/games/com.mojang/ModScript/DamageIndicators/villager.png");
var img3 = new android.graphics.BitmapFactory.decodeFile("mnt/sdcard/games/com.mojang/ModScript/DamageIndicators/nothing.png");
var img4 = new android.graphics.BitmapFactory.decodeFile("mnt/sdcard/games/com.mojang/ModScript/DamageIndicators/zombie.png");
var img5 = new android.graphics.BitmapFactory.decodeFile("mnt/sdcard/games/com.mojang/ModScript/DamageIndicators/chicken.png");
var img6 = new android.graphics.BitmapFactory.decodeFile("mnt/sdcard/games/com.mojang/ModScript/DamageIndicators/cow.png");
var img7 = new android.graphics.BitmapFactory.decodeFile("mnt/sdcard/games/com.mojang/ModScript/DamageIndicators/pig.png");
var img8 = new android.graphics.BitmapFactory.decodeFile("mnt/sdcard/games/com.mojang/ModScript/DamageIndicators/sheep.png");
var img9 = new android.graphics.BitmapFactory.decodeFile("mnt/sdcard/games/com.mojang/ModScript/DamageIndicators/wolf.png"); 
var img10 = new android.graphics.BitmapFactory.decodeFile("mnt/sdcard/games/com.mojang/ModScript/DamageIndicators/squid.png");
var img11 = new android.graphics.BitmapFactory.decodeFile("mnt/sdcard/games/com.mojang/ModScript/DamageIndicators/mooshroom.png");
var img12 = new android.graphics.BitmapFactory.decodeFile("mnt/sdcard/games/com.mojang/ModScript/DamageIndicators/creeper.png");
var img13 = new android.graphics.BitmapFactory.decodeFile("mnt/sdcard/games/com.mojang/ModScript/DamageIndicators/skeleton.png");
var img14 = new android.graphics.BitmapFactory.decodeFile("mnt/sdcard/games/com.mojang/ModScript/DamageIndicators/spider.png");
var img15 = new android.graphics.BitmapFactory.decodeFile("mnt/sdcard/games/com.mojang/ModScript/DamageIndicators/zombiepigman.png");
var img16 = new android.graphics.BitmapFactory.decodeFile("mnt/sdcard/games/com.mojang/ModScript/DamageIndicators/slime.png");
var img17 = new android.graphics.BitmapFactory.decodeFile("mnt/sdcard/games/com.mojang/ModScript/DamageIndicators/enderman.png");
var img18 = new android.graphics.BitmapFactory.decodeFile("mnt/sdcard/games/com.mojang/ModScript/DamageIndicators/silverfish.png");
var img19 = new android.graphics.BitmapFactory.decodeFile("mnt/sdcard/games/com.mojang/ModScript/DamageIndicators/ocelot.png");
var img20 = new android.graphics.BitmapFactory.decodeFile("mnt/sdcard/games/com.mojang/ModScript/DamageIndicators/rabbit.png");
var img21 = new android.graphics.BitmapFactory.decodeFile("mnt/sdcard/games/com.mojang/ModScript/DamageIndicators/bat.png");
var img22 = new android.graphics.BitmapFactory.decodeFile("mnt/sdcard/games/com.mojang/ModScript/DamageIndicators/cavespider.png");
var img23 = new android.graphics.BitmapFactory.decodeFile("mnt/sdcard/games/com.mojang/ModScript/DamageIndicators/ghast.png");
var img24 = new android.graphics.BitmapFactory.decodeFile("mnt/sdcard/games/com.mojang/ModScript/DamageIndicators/magmacube.png");
var img25 = new android.graphics.BitmapFactory.decodeFile("mnt/sdcard/games/com.mojang/ModScript/DamageIndicators/blaze.png");




var mainimg = new android.graphics.drawable.BitmapDrawable(img1);
var villagerimg = new android.graphics.drawable.BitmapDrawable(img2);
var nothingimg = new android.graphics.drawable.BitmapDrawable(img3);
var zombieimg = new android.graphics.drawable.BitmapDrawable(img4);
var chickenimg = new android.graphics.drawable.BitmapDrawable(img5);
var cowimg = new android.graphics.drawable.BitmapDrawable(img6);
var pigimg = new android.graphics.drawable.BitmapDrawable(img7);
var sheepimg = new android.graphics.drawable.BitmapDrawable(img8);
var mooshroomimg = new android.graphics.drawable.BitmapDrawable(img11);
var wolfimg = new android.graphics.drawable.BitmapDrawable(img9);
var squidimg = new android.graphics.drawable.BitmapDrawable(img10);
var creeperimg = new android.graphics.drawable.BitmapDrawable(img12);
var skeletonimg = new android.graphics.drawable.BitmapDrawable(img13);
var spiderimg = new android.graphics.drawable.BitmapDrawable(img14);
var zombiepigmanimg = new android.graphics.drawable.BitmapDrawable(img15);
var slimeimg = new android.graphics.drawable.BitmapDrawable(img16);
var endermanimg = new android.graphics.drawable.BitmapDrawable(img17);
var silverfishimg = new android.graphics.drawable.BitmapDrawable(img18);
var ocelotimg = new android.graphics.drawable.BitmapDrawable(img19);
var rabbitimg = new android.graphics.drawable.BitmapDrawable(img20);
var batimg = new android.graphics.drawable.BitmapDrawable(img21);
var cavespiderimg = new android.graphics.drawable.BitmapDrawable(img22);
var ghastimg = new android.graphics.drawable.BitmapDrawable(img23);
var magmacubeimg = new android.graphics.drawable.BitmapDrawable(img24);
var blazeimg = new android.graphics.drawable.BitmapDrawable(img25);


var activatedGUI=false;
var activatedChangingGUI=0;
var ticker=60;
var start=false;
var x = "?";

var NameX=140;
var NameY=42;
var HealthX=140;
var HealthY=90;

function procCmd(command) 
{ 
var cmd = command.split(" "); 
if(cmd[0]=="edit")
{
activatedChangingGUI=1;
}
if(cmd[0]=="finish")
{
activatedChangingGUI=2;
}
}




function p11(){
new android.os.Handler().postDelayed(new java.lang.Runnable({
run:function(){
p12();
p11funct();
if(inGame==false){
}else{
}}
}),300);
}

function p12(){
new android.os.Handler().postDelayed(new java.lang.Runnable({run:function()
{
p13();

p12funct();
if(inGame==false){
}else{
}}
}),300);
}

function p13(){
new android.os.Handler().postDelayed(new java.lang.Runnable({
run:function(){
p11();

p13funct();
 
if(inGame==false){
}else{
}}
}),300);
}


ctx.runOnUiThread(new java.lang.Runnable(){
run:function(){
try{
mb();
mb2();

ctx.getSystemService(android.content.Context.VIBRATOR_SERVICE).vibrate(37);
android.widget.Toast.makeText(ctx,new android.text.Html.fromHtml("<b><font color=#29FF00>Loading </b><font color=#FF9B00>AJModsMCPE <b><font color=#FF3900>..."),0).show();
android.widget.Toast.makeText(ctx,new android.text.Html.fromHtml("<b><font color=#FF3900>Loading </b><font color=#FC0094>AJModsMCPE <b><font color=#FF9B00>..."),0).show();
android.widget.Toast.makeText(ctx,new android.text.Html.fromHtml("<b><font color=#1E90FF>Load </b><font color=#9700E8>Succesful!!!"),0).show();
android.widget.Toast.makeText(ctx,new android.text.Html.fromHtml("<b><font color=#FF8605>Thank You For <b><font color=#FF3900>Choosing AJModsMCPE"),0).show();
}catch(err){
clientMessage("Error:"+err)
}
}
})

function p11funct(){
ModPE.langEdit("selectWorld.gameMode.creative","§aCreative");

ModPE.langEdit("selectWorld.gameMode.survival","§aSurvival");

ModPE.langEdit("playscreen.lastPlayed.daysAgo","§a%1 days ago");

ModPE.langEdit("playscreen.lastPlayed.longAgo","§aLong ago");

ModPE.langEdit("playscreen.lastPlayed.today","§aToday");

ModPE.langEdit("playscreen.lastPlayed.weeksAgo","§a%1 weeks ago");

ModPE.langEdit("playscreen.lastPlayed.yesterday","§aYesterday");


//skins
ModPE.langEdit("skin.New","§aNew");


//default
ModPE.langEdit("menu.copyright"," §aWelcome "+Player.getName(Player.getEntity())+" To AJModsMCPE");

ModPE.langEdit("menu.play","§aPlay");

ModPE.langEdit("menu.options","§aOptions");
ModPE.langEdit("menu.skins","§aSkins");

ModPE.langEdit("deathScreen.message","§aWasted");
}

//function 1
function p12funct(){
ModPE.langEdit("selectWorld.gameMode.creative","§1Creative");

ModPE.langEdit("selectWorld.gameMode.survival","§1Survival");

ModPE.langEdit("playscreen.lastPlayed.daysAgo","§1%1 days ago");

ModPE.langEdit("playscreen.lastPlayed.longAgo","§1Long ago");

ModPE.langEdit("playscreen.lastPlayed.today","§1Today");

ModPE.langEdit("playscreen.lastPlayed.weeksAgo","§1%1 weeks ago");

ModPE.langEdit("playscreen.lastPlayed.yesterday","§1Yesterday");


//skins
ModPE.langEdit("skin.New","§1New");


//default
ModPE.langEdit("menu.copyright"," §1Welcome "+Player.getName(Player.getEntity())+" To AJModsMCPE");

ModPE.langEdit("menu.play","§1Play");

ModPE.langEdit("menu.options","§1Options");

ModPE.langEdit("menu.skins","§1Skins");

ModPE.langEdit("deathScreen.message","§1Wasted");
}

//function 4
function p13funct(){
ModPE.langEdit("selectWorld.gameMode.creative","§4Creative");

ModPE.langEdit("selectWorld.gameMode.survival","§4Survival");

ModPE.langEdit("playscreen.lastPlayed.daysAgo","§4%1 days ago");

ModPE.langEdit("playscreen.lastPlayed.longAgo","§4Long ago");

ModPE.langEdit("playscreen.lastPlayed.today","§4Today");

ModPE.langEdit("playscreen.lastPlayed.weeksAgo","§4%1 weeks ago");

ModPE.langEdit("playscreen.lastPlayed.yesterday","§4Yesterday");


//skins
ModPE.langEdit("skin.New","§4New");

//default
ModPE.langEdit("menu.copyright"," §4Welcome "+Player.getName(Player.getEntity())+" To AJModsMCPE");

ModPE.langEdit("menu.play","§4Play");

ModPE.langEdit("menu.options","§4Options");

ModPE.langEdit("menu.skins","§4Skins");

ModPE.langEdit("deathScreen.message","§4Wasted");
}
            
ModPE.langEdit("progressScreen.message.locating","§3Finding Kids To Troll");
ModPE.langEdit("progressScreen.message.done","§9Have Fun!");
ModPE.langEdit("progressScreen.message.building","Made By: §e§l§o170_Crew");
ModPE.langEdit("progressScreen.cantConnect","§6Stop Using §eMcDonalds §5WiFi!");
ModPE.langEdit("progressScreen.generating","§6AJModsMCPE §b§l§oV §4§l§o2.3");
ModPE.langEdit("playscreen.header.local","§6Select world");
ModPE.langEdit("skins.title","§6Skins");
ModPE.langEdit("options.title","§5Settings");
ModPE.langEdit("playscreen.new","§5New");
ModPE.langEdit("playscreen.quit","§6Back");
ModPE.langEdit("skins.restore.button","§5Restore");
ModPE.langEdit("createWorldScreen.advanced","§bAdvanced");
ModPE.langEdit("externalServerScreen.addServer","§6Add Server");
ModPE.langEdit("multiplayer.player.joined","§5%s joined the game");
ModPE.langEdit("multiplayer.player.left","§b%s left the game");
ModPE.langEdit("deathScreen.quit","§bMain Menu");
ModPE.langEdit("deathScreen.respawn","§5Respawn");
ModPE.langEdit("pauseScreen.quit","§bMain Menu");
ModPE.langEdit("pauseScreen.options","§6Settings");
ModPE.langEdit("pauseScreen.back","§5Back to game");
ModPE.langEdit("menu.returnToGame","§5Back to game");
ModPE.langEdit("death.attack.mob","§6%1$s was slain by %2$s");
ModPE.langEdit("death.attack.fall","§b%1$s hit the ground too hard");
ModPE.langEdit("death.attack.explosion","§6%1$s blew up");
ModPE.langEdit("death.attack.arrow","§5%1$s was shot by %2$s");
ModPE.langEdit("death.attack.drown","§b%1$s drowned");
ModPE.langEdit("death.fell.accident.generic","§6%1$s fell from a high place");
ModPE.langEdit("death.attack.outOfWorld","§5%1$s fell out of the world");
ModPE.langEdit("death.attack.onFire","§b%1$s burned to death");
ModPE.langEdit("death.attack.magic","§6%1$s was killed by magic");
ModPE.langEdit("death.attack.inWall","§5%1$s suffocated in a wall");
ModPE.langEdit("death.attack.lava","§b%1$s tried to swim in lava");
ModPE.langEdit("death.attack.inFire","§6%1$s went up in flames");
ModPE.langEdit("death.attack.cactus","§5%1$s was pricked to death");
ModPE.langEdit("commands.op.success","§lOpped %s");
ModPE.langEdit("commands.banip.success","§rBanned IP address §l%s");
ModPE.langEdit("commands.banip.success.players","§rBanned IP address §l%s §rbelonging to %s");
ModPE.langEdit("chatScreen.hide","§bHide");
ModPE.langEdit("action.interact.createMap","§6Create Map");
ModPE.langEdit("createWorldScreen.action.editLocal","§5Make Infinite");
ModPE.langEdit("createWorldScreen.action.local","§7Create World");
ModPE.langEdit("createWorldScreen.alwaysDay","§9Always Day");
ModPE.langEdit("createWorldScreen.delete","§bDelete");
ModPE.langEdit("createWorldScreen.game.settings","§bGame Settings");
ModPE.langEdit("createWorldScreen.gameMode.creative","§6Creative");
ModPE.langEdit("createWorldScreen.gameMode.survival","§5Survival");
ModPE.langEdit("createWorldScreen.header.local","§2AJ170 Was Here!");
ModPE.langEdit("playscreen.fileSize.MB","§bMB");
ModPE.langEdit("playscreen.fileSize.GB","§bGB");

var starterUI = null;
var closeUI = null;
var droidPE = null;
var gunUI = null;
var jumpUI = null;
var flyUI = null;
var controlUI = null;


 
function dip2px(ctx, dips){
    return Math.ceil(dips * ctx.getResources().getDisplayMetrics().density);
}

function newLevel(){
Info();
    clientMessage("§l§3===========================");
clientMessage ("§b§l§oWelcome §4§l§o" + Player.getName(Player.getEntity()) + "§b§l§o To §6§l§oAJModsMCPE");
clientMessage ("§b§l§oMenu By §6170_Crew");
clientMessage("§b§l§ox: " + Math.floor(Player.getX()) + " §b§l§oy: " + Math.floor(Player.getY() - 1) + " §b§l§oz: " + Math.floor(Player.getZ()));
clientMessage("§l§3===========================");

Cbutton();
}

/*
* @Cbutton
* @function android.widget.Button
*/
 function Cbutton() {
ctx.runOnUiThread(new Runnable({ run: function() {
	try {
		var menuBtn = new android.widget.ImageButton(ctx);
		menuBtn.setImageBitmap(android.graphics.BitmapFactory.decodeByteArray(android.util.Base64.decode(cmdd0,0), 0, android.util.Base64.decode(cmdd0,0).length));
		menuBtn.setOnClickListener(new View.OnClickListener({
			onClick: function(viewarg){
				greenPOS = 0;
				GUICC.dismiss();
				cobra1();
				Level.playSound(Player.getX(), Player.getY(), Player.getZ(), "random.click", 100, 100);
			}
		}));
		
		menuBtn.setOnLongClickListener(new android.view.View.OnLongClickListener() {
					onLongClick: function(v,t) {
						pressed=true;
						android.widget.Toast.makeText(ctx, "Drag the button to move it", 1).show();
						ctx.getSystemService(android.content.Context.VIBRATOR_SERVICE).vibrate(37);
						return true;
					}
				});
		
		menuBtn.setOnTouchListener(new android.view.View.OnTouchListener() {
					onTouch :function(v, e) {
						if(!pressed) {
							mX=e.getX();
							mY=e.getY();
						}
						if(pressed) {
							var action = e.getAction() 
							if(action==2) {
								var X=parseInt(e.getX()-mX)*-1/10;
								var Y=parseInt(e.getY()-mY)*-1/10;
								buttonX += X;
								buttonY += Y;
								GUICC.update(parseInt(buttonX), parseInt(buttonY), -1, -1);
							}
							if(action==1)
								pressed=false;
						}
						return false;
					}
				});
		
		GUICC = new PopupWindow(menuBtn, 75, 75);
		GUICC.setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));
		GUICC.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(125,66,0,0))); 
		GUICC.showAtLocation(ctx.getWindow().getDecorView(), Gravity.BOTTOM | Gravity.RIGHT, buttonX, buttonY);
		}catch(err){
			clientMessage("e/" + err + " #" + err.lineNumber);
		}
	}}));
}

/*
 
function Cbutton(){
var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    ctx.runOnUiThread(new java.lang.Runnable({ run: function(){
        try{ 
            var layout = new android.widget.LinearLayout(ctx);
            layout.setOrientation(1);

var menuBtn = new android.widget.ImageButton(ctx);
			menuBtn.setImageBitmap(android.graphics.BitmapFactory.decodeByteArray(android.util.Base64.decode(cmdd0,0), 0, android.util.Base64.decode(cmdd0,0).length));
  
            menuBtn.setOnClickListener(new android.view.View.OnClickListener({
                onClick: function(viewarg){

greenPOS = 0
 GUICC.dismiss();
cobra1();
Level.playSound(Player.getX(), Player.getY(), Player.getZ(), "random.break", 100, 100);

}
            }));
            layout.addView(menuBtn);

            GUICC = new android.widget.PopupWindow(layout, dip2px(ctx, 34), dip2px(ctx, 34));
            GUICC.setWidth(dip2px(ctx, 34));
            GUICC.setHeight(dip2px(ctx, 34));
            GUICC.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(125,66,0,0))); 
            
            
            GUICC.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.RIGHT | android.view.Gravity.TOP, 0, dip2px(ctx, 40));
               }catch(err){
}
    }}));
}
*/

/*
* @cobra1
* @function phase1
*/
function cobra1(){
activating();
active();
}

/*
* @activating
* @function activate mod GUIs
*/
function activating(){
new android.os.Handler().postDelayed(new java.lang.Runnable({run:function()
{
activation.dismiss();
active1();
active5();
scan1();
scanning();
}
}),2000);
}
///



function active(){

 var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();

    ctx.runOnUiThread(new java.lang.Runnable({ run: function(){
        try{
            var activeLayout = new android.widget.LinearLayout(ctx);
            var activeScroll = new android.widget.ScrollView(ctx);
            var activeLayout1 = new android.widget.LinearLayout(ctx);
            activeLayout.setOrientation(1);
            activeLayout1.setOrientation(1);

            activeScroll.addView(activeLayout);
            activeLayout1.addView(activeScroll);


var button = new android.widget.Button(ctx);
            button.setText("activating mods");
 button.setTextColor(android.graphics.Color.RED);
            button.setWidth(60);
            button.setHeight(60);
button.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));
 activeLayout.addView(button);

	                  activation = new android.widget.PopupWindow(activeLayout1, ctx.getWindowManager().getDefaultDisplay().getWidth()/3, ctx.getWindowManager().getDefaultDisplay().getHeight()/5);
activation.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(161,0,0,0))); 
            activation.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.CENTER | android.view.Gravity.CENTER, 0, 0);
ModPE.showTipMessage('§6¡');
        }catch(error){
            print("Project X v2 FOUND " + error+"ERRORS");
        }
    }}));
}

///

function line(){
activation5.dismiss();
active5();
}

function scan1(){
new android.os.Handler().postDelayed(new java.lang.Runnable({run:function()
{
greenPOS = 20
scan2();
line();
}
}),Speed);
}

function scan2(){
new android.os.Handler().postDelayed(new java.lang.Runnable({run:function()
{
greenPOS = 40
scan3();
line();
}
}),Speed);
}

function scan3(){
new android.os.Handler().postDelayed(new java.lang.Runnable({run:function()
{
greenPOS = 60
scan4();
line();
}
}),Speed);
}

function scan4(){
new android.os.Handler().postDelayed(new java.lang.Runnable({run:function()
{
greenPOS = 80
scan5();
line();
}
}),Speed);
}

function scan5(){
new android.os.Handler().postDelayed(new java.lang.Runnable({run:function()
{
greenPOS = 100
scan6();
line();
}
}),Speed);
}

function scan6(){
new android.os.Handler().postDelayed(new java.lang.Runnable({run:function()
{
greenPOS = 120
scan7();
line();
}
}),Speed);
}

function scan7(){
new android.os.Handler().postDelayed(new java.lang.Runnable({run:function()
{
greenPOS = 140
scan8();
line();
}
}),Speed);
}

function scan8(){
new android.os.Handler().postDelayed(new java.lang.Runnable({run:function()
{
greenPOS = 160
scan9();
line();
}
}),Speed);
}

function scan9(){
new android.os.Handler().postDelayed(new java.lang.Runnable({run:function()
{
greenPOS = 180
scan10();
line();
}
}),Speed);
}

function scan10(){
new android.os.Handler().postDelayed(new java.lang.Runnable({run:function()
{
greenPOS = 200
scan11();
line();
}
}),Speed);
}

function scan11(){
new android.os.Handler().postDelayed(new java.lang.Runnable({run:function()
{
greenPOS = 220
scan12();
line();
}
}),Speed);
}

function scan12(){
new android.os.Handler().postDelayed(new java.lang.Runnable({run:function()
{
greenPOS = 240
scan13();
line();
}
}),Speed);
}


function scan13(){
new android.os.Handler().postDelayed(new java.lang.Runnable({run:function()
{
greenPOS = 260
scan14();
line();
}
}),Speed);
}


function scan14(){
new android.os.Handler().postDelayed(new java.lang.Runnable({run:function()
{
greenPOS = 280
scan15();
line();
}
}),Speed);
}


function scan15(){
new android.os.Handler().postDelayed(new java.lang.Runnable({run:function()
{
greenPOS = 300
line();
scan16();
}
}),Speed);
}

function scan16(){
new android.os.Handler().postDelayed(new java.lang.Runnable({run:function()
{
greenPOS = 320
scan17();
line();
}
}),Speed);
}


function scan17(){
new android.os.Handler().postDelayed(new java.lang.Runnable({run:function()
{
greenPOS = 340
scan18();
line();
}
}),Speed);
}


function scan18(){
new android.os.Handler().postDelayed(new java.lang.Runnable({run:function()
{
greenPOS = 360
scan19();
line();
}
}),Speed);
}


function scan19(){
new android.os.Handler().postDelayed(new java.lang.Runnable({run:function()
{
greenPOS = 380
scan20();
line();
}
}),Speed);
}


function scan20(){
new android.os.Handler().postDelayed(new java.lang.Runnable({run:function()
{
greenPOS = 400
scan21();
line();
}
}),Speed);
}

function scan21(){
new android.os.Handler().postDelayed(new java.lang.Runnable({run:function()
{
greenPOS = 420
scan22();
line();
}
}),Speed);
}

function scan22(){
new android.os.Handler().postDelayed(new java.lang.Runnable({run:function()
{
greenPOS = 440
scan23();
line();
}
}),Speed);
}

function scan23(){
new android.os.Handler().postDelayed(new java.lang.Runnable({run:function()
{
greenPOS = 460
scan24();
line();
}
}),Speed);
}

function scan24(){
new android.os.Handler().postDelayed(new java.lang.Runnable({run:function()
{
greenPOS = 480
scan25();
line();
}
}),Speed);
}


function scan25(){
new android.os.Handler().postDelayed(new java.lang.Runnable({run:function()
{
greenPOS = 500
scan26();
line();
}
}),Speed);
}

function scan26(){
new android.os.Handler().postDelayed(new java.lang.Runnable({run:function()
{
greenPOS = 520
scan27();
line();
}
}),Speed);
}

function scan27(){
new android.os.Handler().postDelayed(new java.lang.Runnable({run:function()
{
greenPOS = 540
scan28();
line();
}
}),Speed);
}

function scan28(){
new android.os.Handler().postDelayed(new java.lang.Runnable({run:function()
{
greenPOS = 560
scan29();
line();
}
}),Speed);
}

function scan29(){
new android.os.Handler().postDelayed(new java.lang.Runnable({run:function()
{
greenPOS = 580
scan30();
line();
}
}),Speed);
}

function scan30(){
new android.os.Handler().postDelayed(new java.lang.Runnable({run:function()
{
greenPOS = 600
scan31();
line();
}
}),Speed);
}

function scan31(){
new android.os.Handler().postDelayed(new java.lang.Runnable({run:function()
{
greenPOS = 620
scan32();
line();
}
}),Speed);
}

function scan32(){
new android.os.Handler().postDelayed(new java.lang.Runnable({run:function()
{
greenPOS = 640
scan33();
line();
}
}),Speed);
}

function scan33(){
new android.os.Handler().postDelayed(new java.lang.Runnable({run:function()
{
greenPOS = 660
scan34();
line();
}
}),Speed);
}

function scan34(){
new android.os.Handler().postDelayed(new java.lang.Runnable({run:function()
{
greenPOS = 680
scan35();
line();
}
}),Speed);
}

function scan35(){
new android.os.Handler().postDelayed(new java.lang.Runnable({run:function()
{
greenPOS = 700
activation5.dismiss();
}
}),Speed);
}



//scanning
function scanning(){
new android.os.Handler().postDelayed(new java.lang.Runnable({run:function()
{
activation1.dismiss();
active2();
welcomename();
activesss0();
}
}),4500);
}

///
function active1(){

 var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();

    ctx.runOnUiThread(new java.lang.Runnable({ run: function(){
        try{
            var active1Layout = new android.widget.LinearLayout(ctx);
            var active1Scroll = new android.widget.ScrollView(ctx);
            var active1Layout1 = new android.widget.LinearLayout(ctx);
            active1Layout.setOrientation(1);
            active1Layout1.setOrientation(1);

            active1Scroll.addView(active1Layout);
            active1Layout1.addView(active1Scroll);


var button = new android.widget.Button(ctx);
            button.setText("scanning");
 button.setTextColor(android.graphics.Color.RED);
            button.setWidth(60);
            button.setHeight(60);
button.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));
 active1Layout.addView(button);

	                  activation1 = new android.widget.PopupWindow(active1Layout1, ctx.getWindowManager().getDefaultDisplay().getWidth()/3, ctx.getWindowManager().getDefaultDisplay().getHeight()/5);
activation1.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(161,0,0,0))); 
            activation1.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.CENTER | android.view.Gravity.CENTER, 0, 0);
        }catch(error){
            print("Project X v2 FOUND " + error+"ERRORS");
        }
    }}));
}
///

//welcome player
function welcomename(){
new android.os.Handler().postDelayed(new java.lang.Runnable({run:function()
{
activation2.dismiss();
starter()
}
}),2000);
}

function activesss0(){
new android.os.Handler().postDelayed(new java.lang.Runnable({run:function()
{
activesss1();
active2b();
}
}),130);
}

function activesss1(){
new android.os.Handler().postDelayed(new java.lang.Runnable({run:function()
{
activation2b.dismiss();
activesss2();
}
}),130);
}

function activesss2(){
new android.os.Handler().postDelayed(new java.lang.Runnable({run:function()
{
active2b();
activesss3();
}
}),130);
}

function activesss3(){
new android.os.Handler().postDelayed(new java.lang.Runnable({run:function()
{
activation2b.dismiss();
activesss4();
}
}),130);
}

function activesss4(){
new android.os.Handler().postDelayed(new java.lang.Runnable({run:function()
{
active2b();
activesss5();
}
}),130);
}

function activesss5(){
new android.os.Handler().postDelayed(new java.lang.Runnable({run:function()
{
activation2b.dismiss();
activesss6();
}
}),130);
}

function activesss6(){
new android.os.Handler().postDelayed(new java.lang.Runnable({run:function()
{
active2b();
activesss7();
}
}),130);
}

function activesss7(){
new android.os.Handler().postDelayed(new java.lang.Runnable({run:function()
{
activation2b.dismiss();
}
}),130);
}
///

            function active2(){

 var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();

    ctx.runOnUiThread(new java.lang.Runnable({ run: function(){
        try{
            var active2Layout = new android.widget.LinearLayout(ctx);
            var active2Scroll = new android.widget.ScrollView(ctx);
            var active2Layout1 = new android.widget.LinearLayout(ctx);
            active2Layout.setOrientation(1);
            active2Layout1.setOrientation(1);

            active2Scroll.addView(active2Layout);
            active2Layout1.addView(active2Scroll);


var button = new android.widget.Button(ctx);
            button.setText("welcome "+Player.getName(Player.getEntity())+" ");
 button.setTextColor(android.graphics.Color.RED);
            button.setWidth(60);
            button.setHeight(60);
button.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));
 active2Layout.addView(button);

	                  activation2 = new android.widget.PopupWindow(active2Layout1, ctx.getWindowManager().getDefaultDisplay().getWidth()/3, ctx.getWindowManager().getDefaultDisplay().getHeight()/5);
activation2.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(161,0,0,0))); 
            activation2.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.CENTER | android.view.Gravity.CENTER, 0, 0);
        }catch(error){
            print("Project X v2 FOUND " + error+"ERRORS");
        }
    }}));
}

function active2b(){

 var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();

    ctx.runOnUiThread(new java.lang.Runnable({ run: function(){
        try{
            var active2bLayout = new android.widget.LinearLayout(ctx);
            var active2bScroll = new android.widget.ScrollView(ctx);
            var active2bLayout1 = new android.widget.LinearLayout(ctx);
            active2bLayout.setOrientation(1);
            active2bLayout1.setOrientation(1);

            active2bScroll.addView(active2bLayout);
            active2bLayout1.addView(active2bScroll);


var button = new android.widget.Button(ctx);
            button.setText("welcome "+Player.getName(Player.getEntity())+" ");
 button.setTextColor(android.graphics.Color.BLUE);
            button.setWidth(60);
            button.setHeight(60);
button.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));
 active2bLayout.addView(button);

	                  activation2b = new android.widget.PopupWindow(active2bLayout1, ctx.getWindowManager().getDefaultDisplay().getWidth()/3, ctx.getWindowManager().getDefaultDisplay().getHeight()/5);
activation2b.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(0,0,0,0))); 
            activation2b.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.CENTER | android.view.Gravity.CENTER, 0, 0);
        }catch(error){
            print("Project X v2 FOUND " + error+"ERRORS");
        }
    }}));
}




///
function active5(){

 var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();

    ctx.runOnUiThread(new java.lang.Runnable({ run: function(){
        try{
            var active5Layout = new android.widget.LinearLayout(ctx);
            var active5Scroll = new android.widget.ScrollView(ctx);
            var active5Layout1 = new android.widget.LinearLayout(ctx);
            active5Layout.setOrientation(1);
            active5Layout1.setOrientation(1);

            active5Scroll.addView(active5Layout);
            active5Layout1.addView(active5Scroll);


	                  activation5 = new android.widget.PopupWindow(active5Layout1, ctx.getWindowManager().getDefaultDisplay().getWidth()/25, ctx.getWindowManager().getDefaultDisplay().getHeight());
activation5.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(200,0,200,0))); 
            activation5.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.LEFT | android.view.Gravity.CENTER, greenPOS, 0);
        }catch(error){
            print("Project X v2 FOUND " + error+"ERRORS");
        }
    }}));
}



 function starter() {
ctx.runOnUiThread(new Runnable({ run: function() {
	try {
		var menuBtn = new android.widget.ImageButton(ctx);
		menuBtn.setImageBitmap(android.graphics.BitmapFactory.decodeByteArray(android.util.Base64.decode(cmdd0,0), 0, android.util.Base64.decode(cmdd0,0).length));
		menuBtn.setOnClickListener(new View.OnClickListener({
			onClick: function(viewarg){
				ctx.getSystemService(android.content.Context.VIBRATOR_SERVICE).vibrate(37);                 
                 
					Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.chestopen", 1, 1);
					if(gunUI != null){
                        gunUI.dismiss();
						gunUI = null;
                    }
                    if(flyUI != null){
                        flyUI.dismiss();
						flyUI = null;
                    }
					if(controlUI != null){
						controlUI.dismiss();
						controlUI = null;
					}
					mainMenu();
					close();
                }
            }));	menuBtn.setOnLongClickListener(new android.view.View.OnLongClickListener() {
					onLongClick: function(v,t) {
						pressed=true;
						android.widget.Toast.makeText(ctx, "Drag the button to move it", 1).show();
						ctx.getSystemService(android.content.Context.VIBRATOR_SERVICE).vibrate(37);
						return true;
					}
				});
		
		menuBtn.setOnTouchListener(new android.view.View.OnTouchListener() {
					onTouch :function(v, e) {
						if(!pressed) {
							mX=e.getX();
							mY=e.getY();
						}
						if(pressed) {
							var action = e.getAction() 
							if(action==2) {
								var X=parseInt(e.getX()-mX)*-1/10;
								var Y=parseInt(e.getY()-mY)*-1/10;
								buttonX += X;
								buttonY += Y;
								GUICC.update(parseInt(buttonX), parseInt(buttonY), -1, -1);
							}
							if(action==1)
								pressed=false;
						}
						return false;
					}
				});
		
		GUICC = new PopupWindow(menuBtn, 75, 75);
		GUICC.setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));
		GUICC.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(125,66,0,0))); 
		GUICC.showAtLocation(ctx.getWindow().getDecorView(), Gravity.BOTTOM | Gravity.RIGHT, buttonX, buttonY);
		}catch(err){
			clientMessage("e/" + err + " #" + err.lineNumber);
		}
	}}));
}
    
             
           /* starterUI = new android.widget.PopupWindow(layout, dip2px(ctx, 55), dip2px(ctx, 55));
   
 
            starterUI.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.RIGHT | android.view.Gravity.TOP, 0, 40);
        }catch(err){
            print("The Image GUI-Button could not be displayed, because: " + err);
        }
    }}));
} */
 
function close(){
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    ctx.runOnUiThread(new java.lang.Runnable({ run: function(){
        try{
            var closeLayout = new android.widget.LinearLayout(ctx);
            closeLayout.setOrientation(0);
        var closeBtn = new android.widget.ImageButton(ctx);
			closeBtn.setImageDrawable(ctx.getResources().getDrawable(android.R.drawable.ic_delete));
            closeBtn.setOnClickListener(new android.view.View.OnClickListener({
                onClick: function(viewarg){
ctx.getSystemService(android.content.Context.VIBRATOR_SERVICE).vibrate(37);				Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.chestclosed", 1, 1);
                    droidPE.dismiss();
                    closeUI.dismiss();
                }
            }));
            closeLayout.addView(closeBtn);
             
            closeUI = new android.widget.PopupWindow(closeLayout, dip2px(ctx,32), dip2px(ctx,32));
            closeUI.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.RIGHT | android.view.Gravity.TOP, 0, 0);
        }catch(e){
            print("The X-Button could not be displayed, because: " + e);
        }
    }}));
}

function mainMenu(){
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    ctx.runOnUiThread(new java.lang.Runnable({ run: function(){
        try{
            var menuLayout = new android.widget.LinearLayout(ctx);
            var menuScroll = new android.widget.ScrollView(ctx);
            var menuLayout1 = new android.widget.LinearLayout(ctx);
            menuLayout.setOrientation(1);
            menuLayout1.setOrientation(1);
             
            menuScroll.addView(menuLayout);
            menuLayout1.addView(menuScroll);
             
            var layoutParams = new android.widget.LinearLayout.LayoutParams(android.widget.RelativeLayout.LayoutParams.WRAP_CONTENT, android.widget.RelativeLayout.LayoutParams.WRAP_CONTENT);
                layoutParams.setMargins(dip2px(ctx, 15), 0, 0, 0);

            var pmm= new android.widget.ImageView(ctx);
                pmm.setImageBitmap(android.graphics.BitmapFactory.decodeByteArray(android.util.Base64.decode(pmmm,0), 0, android.util.Base64.decode(pmmm,0).length))
                 menuLayout.addView(pmm);
			 
	var titleX = new android.widget.TextView(ctx);
    var Ytitle = new android.widget.TextView(ctx);
          Ytitle.setTextSize(13);
          Ytitle.setText("            Welcome " + Player.getName(Player.getEntity()) + "!");

    Ytitle.setTextColor(android.graphics.Color.MAGENTA);
          menuLayout.addView(Ytitle);



	var background1 = new android.graphics.drawable.BitmapDrawable(scaledBackgroundDarkDirtImageDecoded1);
	var scrollText = new android.widget.TextView(ctx);
scrollText.setText("⚠AJModsMCPE⚠ V 2.3");
scrollText.setTextSize(30);                                                                                  scrollText.setTextColor(android.graphics.Color.RED);
scrollText.setBackgroundDrawable(background1);
scrollText.setEllipsize(android.text.TextUtils.TruncateAt.MARQUEE);
scrollText.setMarqueeRepeatLimit(-1);
scrollText.setSingleLine();
scrollText.setHorizontallyScrolling(true);
scrollText.setSelected(true);

menuLayout.addView(scrollText);



var scrollText = new android.widget.TextView(ctx);
scrollText.setText("===========================================================================================================================================================================================================================================================================================================================");
scrollText.setTextSize(20);                                                                                  scrollText.setTextColor(android.graphics.Color.CYAN);
scrollText.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));
scrollText.setEllipsize(android.text.TextUtils.TruncateAt.MARQUEE);
scrollText.setMarqueeRepeatLimit(-1);
scrollText.setSingleLine();
scrollText.setHorizontallyScrolling(true);
scrollText.setSelected(true);

menuLayout.addView(scrollText);


var scrollText = new android.widget.TextView(ctx);
scrollText.setText("⚠Switches⚠");
scrollText.setTextSize(20);                                                                                  scrollText.setTextColor(android.graphics.Color.WHITE);
scrollText.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.BLACK));
scrollText.setEllipsize(android.text.TextUtils.TruncateAt.MARQUEE);
scrollText.setMarqueeRepeatLimit(-1);
scrollText.setSingleLine();
scrollText.setHorizontallyScrolling(true);
scrollText.setSelected(true);

menuLayout.addView(scrollText);
//GREEN CYAN MAGENTA YELLOW RED BLACK
			
var cT47 = new android.widget.Button(ctx);
                cT47.setText("Full In Game Web Browser");
				cT47.setTextColor(android.graphics.Color.BLACK);

cT47.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
MainWeb();
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
droidPE.dismiss();
closeUI.dismiss();
				}
}); 
menuLayout.addView(cT47);
			

var cT29 = new android.widget.Button(ctx);
                cT29.setText("Make All Mods Work On Servers");
				cT29.setTextColor(android.graphics.Color.BLACK);
cT29.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
 android.widget.Toast.makeText(ctx,"Opening the URL...",0).show();
						var intentBrowser = new android.content.Intent(ctx);
						intentBrowser.setAction(android.content.Intent.ACTION_VIEW);
						intentBrowser.setData(android.net.Uri.parse("http://www.mediafire.com/?an8kfbbxk9adlry"));
	ctx.startActivity(intentBrowser)

Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
droidPE.dismiss();
closeUI.dismiss();
				}
}); 
menuLayout.addView(cT29);

/* var cT30 = new android.widget.Button(ctx);
                cT30.setText("Turn Off Change Log");
				cT30.setTextColor(android.graphics.Color.GREEN);
cT30.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
mbd();
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);

				}
}); 
menuLayout.addView(cT30);
 */

var button11 = new android.widget.Switch(ctx);
button11.setText("Fly in Survival");
button11.setTextColor(android.graphics.Color.GREEN);
button11.setChecked(switched11);
button11.setOnCheckedChangeListener(new android.widget.CompoundButton.OnCheckedChangeListener({
onCheckedChanged: function(){
if(!switched11){
switched11 = true;
clientMessage("Fly [§4On§f]");
Player.setCanFly(1);
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}else{
switched11 = false;
clientMessage("Fly [§4Off§f]");
Player.setCanFly(0);
}
button11.setChecked(switched11);
}
}));
menuLayout.addView(button11)

var button22 = new android.widget.Switch(ctx);
button22.setText("Pause The Game");
button22.setTextColor(android.graphics.Color.GREEN);
button22.setChecked(switched22);
button22.setOnCheckedChangeListener(new android.widget.CompoundButton.OnCheckedChangeListener({
onCheckedChanged: function(){
if(!switched22){
switched22 = true;
clientMessage("Pause Game [§4On§f]");
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);			
ModPE.setGameSpeed(0);
}else{
switched22 = false;
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);			
clientMessage("Pause Game [§4Off§f]");
ModPE.setGameSpeed(20);
}
button22.setChecked(switched22);
}
}));
menuLayout.addView(button22)

var button25 = new android.widget.Switch(ctx);
button25.setText("Climb Up Walls");
button25.setTextColor(android.graphics.Color.GREEN);
button25.setChecked(switched25);
button25.setOnCheckedChangeListener(new android.widget.CompoundButton.OnCheckedChangeListener({
onCheckedChanged: function(){
if(switched25 == false) {
switched25 = true;
clientMessage("Wall Climb [§4On§f]");
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}else if(switched25 == true){
switched25 = false;
clientMessage("Wall Climb [§4Off§f]");
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}
}
}));

menuLayout.addView(button25)

var button27 = new android.widget.Switch(ctx);
button27.setText("Walk On Liquid");
button27.setTextColor(android.graphics.Color.GREEN);
button27.setChecked(switched27);
button27.setOnCheckedChangeListener(new android.widget.CompoundButton.OnCheckedChangeListener({
onCheckedChanged: function(){
if(switched27 == false) {
switched27 = true;
clientMessage("Walk On Liquid [§4On§f]");
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}else if(switched27 == true){
switched27 = false;
clientMessage("Walk On Liquid [§4Off§f]");
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}
}
}));

menuLayout.addView(button27)

/* var button28 = new android.widget.Switch(ctx);
button28.setText("Super Jump");
button28.setTextColor(android.graphics.Color.GREEN);
button28.setChecked(mbbb);
button28.setOnCheckedChangeListener(new android.widget.CompoundButton.OnCheckedChangeListener({
onCheckedChanged: function(){
if(!mbbb){   
     print("message board on");
mb();
                  mbbb = true;
}else{
print("message board off");
mbd();
               mbbb = false;
}
}
}));

menuLayout.addView(button28) */

var button29 = new android.widget.Switch(ctx);
button29.setText("Super Speed");
button29.setTextColor(android.graphics.Color.GREEN);
button29.setChecked(switched29);
button29.setOnCheckedChangeListener(new android.widget.CompoundButton.OnCheckedChangeListener({
onCheckedChanged: function(){
if(switched29 == false) {
switched29 = true;
clientMessage("Super Speed [§4On§f]");
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}else if(switched29 == true){
switched29 = false;
clientMessage("Super Speed [§4Off§f]");
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}
}
}));

menuLayout.addView(button29)

var button30 = new android.widget.Switch(ctx);
button30.setText("No Fall Damage");
button30.setTextColor(android.graphics.Color.GREEN);
button30.setChecked(switched30);
button30.setOnCheckedChangeListener(new android.widget.CompoundButton.OnCheckedChangeListener({
onCheckedChanged: function(){
if(switched30 == false) {
switched30 = true;
clientMessage("No Fall Damage [§4On§f]");
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}else if(switched30 == true){
switched30 = false;
clientMessage("No Fall Damage [§4Off§f]");
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}
}
}));

menuLayout.addView(button30)

var button31 = new android.widget.Switch(ctx);
button31.setText("Infininte Hearts");
button31.setTextColor(android.graphics.Color.GREEN);
button31.setChecked(switched31);
button31.setOnCheckedChangeListener(new android.widget.CompoundButton.OnCheckedChangeListener({
onCheckedChanged: function(){
if(switched31 == false) {
switched31 = true;
clientMessage("Infinite Hearts [§4On§f]");
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}else if(switched31 == true){
switched31 = false;
clientMessage("Infinite Hearts [§4Off§f]");
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}
}
}));

menuLayout.addView(button31)

var button34 = new android.widget.Switch(ctx);
button34.setText("Infinite Hunger");
button34.setTextColor(android.graphics.Color.GREEN);
button34.setChecked(switched34);
button34.setOnCheckedChangeListener(new android.widget.CompoundButton.OnCheckedChangeListener({
onCheckedChanged:
function(){
if(switched34 == false) {
switched34 = true;
clientMessage("Infinite Hunger [§4On§f]");
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}else if(switched34 == true){
switched34 = false;
clientMessage("Infinite Hunger [§4Off§f]");
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}
}
}));
menuLayout.addView(button34)

var button32 = new android.widget.Switch(ctx);
button32.setText("Sniper Bow");
button32.setTextColor(android.graphics.Color.GREEN);
button32.setChecked(switched32);
button32.setOnCheckedChangeListener(new android.widget.CompoundButton.OnCheckedChangeListener({
onCheckedChanged: function(){
if(switched32 == false) {
switched32 = true;
clientMessage("Sniper Bow [§4On§f]");
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}else if(switched32 == true){
switched32 = false;
clientMessage("Sniper Bow [§4Off§f]");
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}
}
}));

menuLayout.addView(button32)

var button35 = new android.widget.Switch(ctx);
button35.setText("Super Instant Mine");
button35.setTextColor(android.graphics.Color.GREEN);
button35.setChecked(switched35);
button35.setOnCheckedChangeListener(new android.widget.CompoundButton.OnCheckedChangeListener({
onCheckedChanged:
function(){
if(switched35 == false) {
switched35 = true;
clientMessage("Super Instant Mine [§4On§f]");
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}else if(switched35 == true){
switched35 = false;
clientMessage("Super Instant Mine [§4Off§f]");
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}
}
}));
menuLayout.addView(button35)

var button41 = new android.widget.Switch(ctx);
button41.setText("Show " + Player.getName(Player.getEntity()) + "'s Health Bar");
button41.setTextColor(android.graphics.Color.GREEN);
button41.setChecked(switched41);
button41.setOnCheckedChangeListener(new android.widget.CompoundButton.OnCheckedChangeListener({
onCheckedChanged:
function(){
if(switched41 == false) {
switched41 = true;
clientMessage("Show " + Player.getName(Player.getEntity()) + " Health Bar [§4On§f]");
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}else if(switched41 == true){
switched41 = false;
clientMessage("Show " + Player.getName(Player.getEntity()) + " Health Bar [§4Off§f]");
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}
}
}));
menuLayout.addView(button41)

var button42 = new android.widget.Switch(ctx);
button42.setText("Knockback Attack");
button42.setTextColor(android.graphics.Color.GREEN);
button42.setChecked(switched42);
button42.setOnCheckedChangeListener(new android.widget.CompoundButton.OnCheckedChangeListener({
onCheckedChanged:
function(){
if(switched42 == false) {
switched42 = true;
clientMessage("Knockback Attack [§4On§f]");
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}else if(switched42 == true){
switched42 = false;
clientMessage("Knockback Attack [§4Off§f]");
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}
}
}));
menuLayout.addView(button42)

var button43 = new android.widget.Switch(ctx);
button43.setText("Instant Kill");
button43.setTextColor(android.graphics.Color.GREEN);
button43.setChecked(switched43);
button43.setOnCheckedChangeListener(new android.widget.CompoundButton.OnCheckedChangeListener({
onCheckedChanged:
function(){
if(switched43 == false) {
switched43 = true;
clientMessage("Instant Kill [§4On§f]");
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}else if(switched43 == true){
switched43 = false;
clientMessage("Instant Kill [§4Off§f]");
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}
}
}));
menuLayout.addView(button43)

/* textview = android.widget.TextView(ctx);            textview.setText("Jump Height Changer"); 
textview.setTextSize(10);                                                                                  textview.setTextColor(android.graphics.Color.GREEN);
textview.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));       

menuLayout.addView(textview);

var sbp3 = new android.widget.SeekBar(ctx);
sbp3.setMax(3);
sbp3.setProgress(sbpProgress3);
sbp3.setOnSeekBarChangeListener(new android.widget.SeekBar.OnSeekBarChangeListener() {
onStopTrackingTouch: function(view)
{
sbpProgress3 = sbp3.getProgress();
if(sbpProgress3==0)
{
Entity.removeEffect(getPlayerEnt(),8);
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
clientMessage("Jump Height Has Been §4Reset");
}
if(sbpProgress3==1)
{
Entity.addEffect(getPlayerEnt(),8,10000000,1);
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
clientMessage("Jump Height Set To§4 2 Blocks");
}
if(sbpProgress3==2)
{
Entity.addEffect(getPlayerEnt(),8,10000000,2);
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
clientMessage("Jump Height Set To§4 3 Blocks High");
}
if(sbpProgress3==3)
{
Entity.addEffect(getPlayerEnt(),8,10000000,3);
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
clientMessage("Jump Height Set To§4 5 Blocks");
}
}
});
        menuLayout.addView(sbp3);
 */

var button26 = new android.widget.Switch(ctx);
button26.setText("Show Coordinates");
button26.setTextColor(android.graphics.Color.RED);
button26.setChecked(switched26);
button26.setOnCheckedChangeListener(new android.widget.CompoundButton.OnCheckedChangeListener({
onCheckedChanged: function(){
if(switched26 == false) {
switched26 = true;
clientMessage("Coordinates [§4On§f]");
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}else if(switched26 == true){
switched26 = false;
clientMessage("Coordinates [§4Off§f]");
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}
}
}));

menuLayout.addView(button26)



var button37 = new android.widget.Switch(ctx);
button37.setText("Real Time Display (Player Info)");
button37.setTextColor(android.graphics.Color.RED);
button37.setChecked(switched37);
button37.setOnCheckedChangeListener(new android.widget.CompoundButton.OnCheckedChangeListener({
onCheckedChanged:
function(){
if(switched37 == false) {
switched37 = true;
clientMessage("Real Time Display [§4On§f]");
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}else if(switched37 == true){
switched37 = false;
clientMessage("Real Time Display [§4Off§f]");
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}
}
}));
menuLayout.addView(button37);

var button36 = new android.widget.Switch(ctx);
button36.setText("Only Day");
button36.setTextColor(android.graphics.Color.RED);
button36.setChecked(switched36);
button36.setOnCheckedChangeListener(new android.widget.CompoundButton.OnCheckedChangeListener({
onCheckedChanged:
function(){
if(switched36 == false) {
switched36 = true;
clientMessage("Only Day [§4On§f]");
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}else if(switched36 == true){
switched36 = false;
clientMessage("Only Day [§4Off§f]");
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}
}
}));
menuLayout.addView(button36);






var button19 = new android.widget.Switch(ctx);
button19.setText("Upside Down Screen");
button19.setTextColor(android.graphics.Color.MAGENTA);
button19.setChecked(switched19);
button19.setOnCheckedChangeListener(new android.widget.CompoundButton.OnCheckedChangeListener({
onCheckedChanged: function(){
if(!switched19){
switched19 = true;
clientMessage("§4WHY THE F**K WOULD YOU DO THIS???");
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);			
ModPE.setFov(300);
}else{
switched19 = false;
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);			
clientMessage("§4...");
ModPE.resetFov();
}
button19.setChecked(switched19);
}
}));
menuLayout.addView(button19)

var button20 = new android.widget.Switch(ctx);
button20.setText("Slow Motion");
button20.setTextColor(android.graphics.Color.MAGENTA);
button20.setChecked(switched20);
button20.setOnCheckedChangeListener(new android.widget.CompoundButton.OnCheckedChangeListener({
onCheckedChanged: function(){
if(!switched20){
switched20 = true;
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);			
clientMessage("Slow Motion §4Activated");
ModPE.setGameSpeed(10);
}else{
switched20 = false;
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);			
clientMessage("Slow Motion §4DeActivated");
ModPE.setGameSpeed(20);
}
button20.setChecked(switched20);
}
}));
menuLayout.addView(button20)

var button21 = new android.widget.Switch(ctx);
button21.setText("Pro Mod");
button21.setTextColor(android.graphics.Color.MAGENTA);
button21.setChecked(switched21);
button21.setOnCheckedChangeListener(new android.widget.CompoundButton.OnCheckedChangeListener({
onCheckedChanged: function(){
if(!switched21){
switched21 = true;
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);			
clientMessage("Pro Mod §4Activated");
ModPE.setFov(120);
}else{
switched21 = false;
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);			
clientMessage("Pro Mod §4DeActivated");
ModPE.resetFov();
}
button21.setChecked(switched21);
}
}));
menuLayout.addView(button21)

var button23 = new android.widget.Switch(ctx);
button23.setText("Walk Through Walls");
button23.setTextColor(android.graphics.Color.MAGENTA);
button23.setChecked(switched23);
button23.setOnCheckedChangeListener(new android.widget.CompoundButton.OnCheckedChangeListener({
onCheckedChanged: function(){
if(!switched23){
switched23 = true;
clientMessage("Walk Through Walls [§4On§f]");
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
Entity.setCollisionSize(Player.getEntity(), 0, 0);
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}else{
switched23 = false;
Entity.setCollisionSize(Player.getEntity(), 0.6, 1.8);
clientMessage("Walk Through Walls [§4Off§f]");
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}
button23.setChecked(switched23);
}
}));
menuLayout.addView(button23)

var button33 = new android.widget.Switch(ctx);
button33.setText("Derp Mode");
button33.setTextColor(android.graphics.Color.MAGENTA);
button33.setChecked(switched33);
button33.setOnCheckedChangeListener(new android.widget.CompoundButton.OnCheckedChangeListener({
onCheckedChanged:
function(){
if(switched33 == false) {
switched33 = true;
clientMessage("Derp Mode [§4On§f]");
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}else if(switched33 == true){
switched33 = false;
clientMessage("Derp Mode [§4Off§f]");
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}
}
}));
menuLayout.addView(button33)

var button38 = new android.widget.Switch(ctx);
button38.setText("Particles");
button38.setTextColor(android.graphics.Color.MAGENTA);
button38.setChecked(switched38);
button38.setOnCheckedChangeListener(new android.widget.CompoundButton.OnCheckedChangeListener({
onCheckedChanged:
function(){
if(switched38 == false) {
switched38 = true;
clientMessage("Particles [§4On§f]");
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}else if(switched38 == true){
switched38 = false;
clientMessage("Particles [§4Off§f]");
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}
}
}));
menuLayout.addView(button38)

var button39 = new android.widget.Switch(ctx);
button39.setText("Parachute Fall");
button39.setTextColor(android.graphics.Color.MAGENTA);
button39.setChecked(switched39);
button39.setOnCheckedChangeListener(new android.widget.CompoundButton.OnCheckedChangeListener({
onCheckedChanged:
function(){
if(switched39 == false) {
switched39 = true;
clientMessage("Parachute Fall [§4On§f]");
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}else if(switched39 == true){
switched39 = false;
clientMessage("Parachute Fall [§4Off§f]");
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}
}
}));
menuLayout.addView(button39)

var button40 = new android.widget.Switch(ctx);
button40.setText("Auto Switch");
button40.setTextColor(android.graphics.Color.MAGENTA);
button40.setChecked(switched40);
button40.setOnCheckedChangeListener(new android.widget.CompoundButton.OnCheckedChangeListener({
onCheckedChanged:
function(){
if(switched40 == false) {
switched40 = true;
clientMessage("Auto Switch [§4On§f]");
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}else if(switched40 == true){
switched40 = false;
clientMessage("Auto Switch [§4Off§f]");
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}
}
}));
menuLayout.addView(button40)



var button46 = new android.widget.Switch(ctx);
button46.setText("Colord Name");
button46.setTextColor(android.graphics.Color.MAGENTA);
button46.setChecked(switched46);
button46.setOnCheckedChangeListener(new android.widget.CompoundButton.OnCheckedChangeListener({
onCheckedChanged:
function(){
if(switched46 == false) {
switched46 = true;
clientMessage("Colord Name [§4On§f]");
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}else if(switched46 == true){
switched46 = false;
clientMessage("Colord Name [§4Off§f]");
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}
}
}));
menuLayout.addView(button46)

var button47 = new android.widget.Switch(ctx);
button47.setText("Point To Kill");
button47.setTextColor(android.graphics.Color.MAGENTA);
button47.setChecked(pointKill);
button47.setOnCheckedChangeListener(new android.widget.CompoundButton.OnCheckedChangeListener({
onCheckedChanged:
function(){
if(pointKill == false) {
pointKill = true;
clientMessage("Point To Kill [§4On§f]");
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}else if(pointKill == true){
pointKill = false;
clientMessage("Point To Kill [§4Off§f]");
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}
}
}));
menuLayout.addView(button47)

var button48 = new android.widget.Switch(ctx);
button48.setText("Freeze On Point");
button48.setTextColor(android.graphics.Color.MAGENTA);
button48.setChecked(entiStop);
button48.setOnCheckedChangeListener(new android.widget.CompoundButton.OnCheckedChangeListener({
onCheckedChanged:
function(){
if(entiStop == false) {
entiStop = true;
clientMessage("Freeze On Point [§4On§f]");
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}else if(entiStop == true){
entiStop = false;
clientMessage("Freeze On Point [§4Off§f]");
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}
}
}));
menuLayout.addView(button48)

var button49 = new android.widget.Switch(ctx);
button49.setText("Touch Teleport");
button49.setTextColor(android.graphics.Color.MAGENTA);
button49.setChecked(tp);
button49.setOnCheckedChangeListener(new android.widget.CompoundButton.OnCheckedChangeListener({
onCheckedChanged:
function(){
if(tp == false) {
tp = true;
clientMessage("Coming Soon");
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}else if(tp == true){
tp = false;
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}
}
}));
menuLayout.addView(button49)

var button50 = new android.widget.Switch(ctx);
button50.setText("Criticle Hit");
button50.setTextColor(android.graphics.Color.MAGENTA);
button50.setChecked(autocrit);
button50.setOnCheckedChangeListener(new android.widget.CompoundButton.OnCheckedChangeListener({
onCheckedChanged:
function(){
if(autocrit == false) {
autocrit = true;
clientMessage("Criticle Hit [§4On§f]");
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}else if(autocrit == true){
autocrit = false;
clientMessage("Criticle Hit [§4Off§f]");
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}
}
}));
menuLayout.addView(button50)

var button51 = new android.widget.Switch(ctx);
button51.setText("Lantern");
button51.setTextColor(android.graphics.Color.MAGENTA);
button51.setChecked(switched48);
button51.setOnCheckedChangeListener(new android.widget.CompoundButton.OnCheckedChangeListener({
onCheckedChanged:
function(){
if(switched48 == false) {
switched48 = true;
clientMessage("Lantern [§4On§f]");
android.widget.Toast.makeText(ctx,new android.text.Html.fromHtml("<b><font color=#29FF00>Hold A </b><font color=#FFC000>Torch"),0).show();
addItemInventory(50,2,0);
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}else if(switched48 == true){
switched48 = false;
clientMessage("Lantern [§4Off§f]");
android.widget.Toast.makeText(ctx,new android.text.Html.fromHtml("<b><font color=#FFFC00>Move To Make The </b><font color=#29FF00>Light Go Away"),0).show();
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}
}
}));
menuLayout.addView(button51)

var button52 = new android.widget.Switch(ctx);
button52.setText("Blood");
button52.setTextColor(android.graphics.Color.MAGENTA);
button52.setChecked(switched49);
button52.setOnCheckedChangeListener(new android.widget.CompoundButton.OnCheckedChangeListener({
onCheckedChanged:
function(){
if(switched49 == false) {
switched49 = true;
clientMessage("Blood [§4On§f]");
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}else if(switched49 == true){
switched49 = false;
clientMessage("Blood [§4Off§f]");
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}
}
}));
menuLayout.addView(button52)

var button53 = new android.widget.Switch(ctx);
button53.setText("Kill Aura");
button53.setTextColor(android.graphics.Color.MAGENTA);
button53.setChecked(switched50);
button53.setOnCheckedChangeListener(new android.widget.CompoundButton.OnCheckedChangeListener({
onCheckedChanged:
function(){
if(switched50 == false) {
switched50 = true;
clientMessage("Kill Aura [§4On§f]");
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}else if(switched50 == true){
switched50 = false;
clientMessage("Kill Aura [§4Off§f]");
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}
}
}));
menuLayout.addView(button53)

var button54 = new android.widget.Switch(ctx);
button54.setText("Freeze Aura");
button54.setTextColor(android.graphics.Color.MAGENTA);
button54.setChecked(switched51);
button54.setOnCheckedChangeListener(new android.widget.CompoundButton.OnCheckedChangeListener({
onCheckedChanged:
function(){
if(switched51 == false) {
switched51 = true;
clientMessage("Freeze Aura [§4On§f]");
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}else if(switched51 == true){
switched51 = false;
clientMessage("Freeze Aura [§4Off§f]");
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
}
}
}));
menuLayout.addView(button54)



textview = android.widget.TextView(ctx);            textview.setText("⚠Game Rules⚠"); 
textview.setTextSize(20);                                                                                  textview.setTextColor(android.graphics.Color.WHITE);
textview.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.BLACK));       

menuLayout.addView(textview);

var jumpBtn = new android.widget.TextView(ctx);
			jumpBtn.setTextSize(18);
			jumpBtn.setText("Jump Height: " + jumpHeight + " Blocks");
jumpBtn.setTextColor(android.graphics.Color.BLUE);	jumpBtn.setLayoutParams(layoutParams);
			jumpBtn.setOnClickListener(new android.view.View.OnClickListener({
				onClick: function(viewarg){
					if(jumpHeight=="1"){
						jumpHeight = "2";
                        
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);                        jumpVel = 0.5;
					}
					else if(jumpHeight=="2"){
						jumpHeight = "3";
						Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
						jumpVel = 0.7;
					}
					else if(jumpHeight=="3"){
						jumpHeight = "4";
						Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
						jumpVel = 0.8;
					}
					else if(jumpHeight=="4"){
						jumpVel = 0.9;
						Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
						jumpHeight = "5";
					}
					else if(jumpHeight=="5"){
						jumpVel = 1;
						Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
						jumpHeight = "6";
					}
					else if(jumpHeight=="6"){
						jumpHeight = "1";
					Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
					}
					jumpBtn.setText("Jump Height: " + jumpHeight + " Blocks");
jumpBtn.setTextColor(android.graphics.Color.BLUE);				
				}
			}));
			menuLayout.addView(jumpBtn);

textview = android.widget.TextView(ctx);            textview.setText("Game Speed Changer"); 
textview.setTextSize(10);                                                                                  textview.setTextColor(android.graphics.Color.BLUE);
textview.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));       

menuLayout.addView(textview);

var sbp1 = new android.widget.SeekBar(ctx);
sbp1.setMax(3);
sbp1.setProgress(sbpProgress1);
sbp1.setOnSeekBarChangeListener(new android.widget.SeekBar.OnSeekBarChangeListener() {
onStopTrackingTouch: function(view)
{
sbpProgress1 = sbp1.getProgress();
if(sbpProgress1==0)
{
ModPE.setGameSpeed(20);
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
clientMessage("Speed Set To §4Normal");
}
if(sbpProgress1==1)
{
ModPE.setGameSpeed(30);
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
clientMessage("Speed Set To §4+20%");
}
if(sbpProgress1==2)
{
ModPE.setGameSpeed(40);
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
clientMessage("Speed Set To §4+30%");
}
if(sbpProgress1==3)
{
ModPE.setGameSpeed(50);
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
clientMessage("Speed Set To §4+40%");
}
}
});
        menuLayout.addView(sbp1);


textview = android.widget.TextView(ctx);            textview.setText("Zoom Changer"); 
textview.setTextSize(10);                                                                                  textview.setTextColor(android.graphics.Color.BLUE);
textview.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));       

menuLayout.addView(textview);

var sbp2 = new android.widget.SeekBar(ctx);
sbp2.setMax(3);
sbp2.setProgress(sbpProgress2);
sbp2.setOnSeekBarChangeListener(new android.widget.SeekBar.OnSeekBarChangeListener() {
onStopTrackingTouch: function(view)
{
sbpProgress2 = sbp2.getProgress();
if(sbpProgress2==0)
{
ModPE.resetFov();
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
clientMessage("Zoom Set To §4Normal");
}
if(sbpProgress2==1)
{
ModPE.setFov(40);
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
clientMessage("Zoom Set To §4+20%");
}
if(sbpProgress2==2)
{
ModPE.setFov(30);
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
clientMessage("Zoom Set To §4+40%");
}
if(sbpProgress2==3)
{
ModPE.setFov(20);
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
clientMessage("Zoom Set To §4+60%");
}
}
});
        menuLayout.addView(sbp2);





textview = android.widget.TextView(ctx);            textview.setText("---------------------"); 
textview.setTextSize(20);                                                                                  textview.setTextColor(android.graphics.Color.GRAY);
textview.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));       

menuLayout.addView(textview);

var cT40 = new android.widget.Button(ctx);
                cT40.setText("Extras Menu");
				cT40.setTextColor(android.graphics.Color.BLACK);

cT40.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
BackMenu();
mb4();
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
droidPE.dismiss();
closeUI.dismiss();

				}
}); 
menuLayout.addView(cT40);


var scrollText = new android.widget.TextView(ctx);
scrollText.setText("⚠Extra Mods⚠ Tap The Groud With A Stick To Spawn An Alien");
scrollText.setTextSize(20);                                                                                  scrollText.setTextColor(android.graphics.Color.CYAN);
scrollText.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.RED));
scrollText.setEllipsize(android.text.TextUtils.TruncateAt.MARQUEE);
scrollText.setMarqueeRepeatLimit(-1);
scrollText.setSingleLine();
scrollText.setHorizontallyScrolling(true);
scrollText.setSelected(true);

menuLayout.addView(scrollText);
   
var cT33 = new android.widget.Button(ctx);
                cT33.setText("Credit");
				cT33.setTextColor(android.graphics.Color.BLACK);

cT33.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
mb3();
Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
droidPE.dismiss();
closeUI.dismiss();

				}
}); 
menuLayout.addView(cT33);

   
textview = android.widget.TextView(ctx);            textview.setText("---------------------"); 
textview.setTextSize(20);                                                                                  textview.setTextColor(android.graphics.Color.GRAY);
textview.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));       

menuLayout.addView(textview);

textview = android.widget.TextView(ctx);            textview.setText("How Many Bugs Are Patched"); 
textview.setTextSize(10);                                                                                  textview.setTextColor(android.graphics.Color.WHITE);
textview.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));       

menuLayout.addView(textview);

var bar = new android.widget.RatingBar(ctx, null, android.R.attr.progressBarStyleHorizontal);
    bar.setMax(100);
    bar.setProgress(82);
   
  android.widget.Toast.makeText(ctx,new android.text.Html.fromHtml("<b><font color=#FFFC00>Can You Find </b><font color=#29FF00>My Hidden Button?"),0).show(); menuLayout.addView(bar);




//coding   
 var cmd= new android.widget.ImageView(ctx);
   cmd.setImageBitmap(android.graphics.BitmapFactory.decodeByteArray(android.util.Base64.decode(cmdd,0), 0, android.util.Base64.decode(cmdd,0).length))
  menuLayout.addView(cmd)

 var cmd= new android.widget.ImageView(ctx);
   cmd.setImageBitmap(android.graphics.BitmapFactory.decodeByteArray(android.util.Base64.decode(cmdd4,0), 0, android.util.Base64.decode(cmdd4,0).length))
  menuLayout.addView(cmd)

 
 var cmd= new android.widget.ImageView(ctx);
   cmd.setImageBitmap(android.graphics.BitmapFactory.decodeByteArray(android.util.Base64.decode(cmdd3,0), 0, android.util.Base64.decode(cmdd3,0).length))
  menuLayout.addView(cmd)


 var cmd= new android.widget.ImageView(ctx);
   cmd.setImageBitmap(android.graphics.BitmapFactory.decodeByteArray(android.util.Base64.decode(cmdd2,0), 0, android.util.Base64.decode(cmdd2,0).length))
  menuLayout.addView(cmd)

var cT27 = new android.widget.Button(ctx);
                cT27.setText("YouTube");
				cT27.setTextColor(android.graphics.Color.BLUE);
cT27.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
android.widget.Toast.makeText(ctx,"Opening the URL...",0).show();
						var intentBrowser = new android.content.Intent(ctx);
						intentBrowser.setAction(android.content.Intent.ACTION_VIEW);
						intentBrowser.setData(android.net.Uri.parse("https://www.youtube.com/c/AJ170"));
	ctx.startActivity(intentBrowser)

Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
droidPE.dismiss();
closeUI.dismiss();
				}
}); 
menuLayout.addView(cT27);

var cT26 = new android.widget.Button(ctx);
                cT26.setText("Twitter");
				cT26.setTextColor(android.graphics.Color.BLUE);
cT26.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
android.widget.Toast.makeText(ctx,"Opening the URL...",0).show();
						var intentBrowser = new android.content.Intent(ctx);
						intentBrowser.setAction(android.content.Intent.ACTION_VIEW);
						intentBrowser.setData(android.net.Uri.parse("https://twitter.com/AJ170_iOS_King?s=09"));
	ctx.startActivity(intentBrowser)

Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
droidPE.dismiss();
closeUI.dismiss();
				}
}); 
menuLayout.addView(cT26);

var cT28 = new android.widget.Button(ctx);
                cT28.setText("KiK");
				cT28.setTextColor(android.graphics.Color.BLUE);
cT28.setOnClickListener(new android.view.View.OnClickListener(){
                onClick: function(view){
android.widget.Toast.makeText(ctx,"Opening the URL...",0).show();
						var intentBrowser = new android.content.Intent(ctx);
						intentBrowser.setAction(android.content.Intent.ACTION_VIEW);
						intentBrowser.setData(android.net.Uri.parse("http://kik.me/AJ170.iPA"));
	ctx.startActivity(intentBrowser)

Level.playSound(getPlayerX(), getPlayerY(), getPlayerZ(), "random.pop", 1, 1);
droidPE.dismiss();
closeUI.dismiss();
				}
}); 
menuLayout.addView(cT28);

//Menu Background Settings
                       var background = new android.graphics.drawable.BitmapDrawable(scaledBackgroundDarkDirtImageDecoded);
                           background.setTileModeXY(android.graphics.Shader.TileMode.REPEAT, android.graphics.Shader.TileMode.REPEAT);
                       droidPE = new android.widget.PopupWindow(menuLayout1, ctx.getWindowManager().getDefaultDisplay().getWidth()/2.3, ctx.getWindowManager().getDefaultDisplay().getHeight());
			           droidPE.setBackgroundDrawable(background); droidPE.setAnimationStyle(android.R.style.Animation_Translucent);
droidPE.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.RIGHT | android.view.Gravity.TOP, 0, 0);
        }catch(error){
            print("The menu could not be displayed, because: " + error);
        }
    }}));
}

function leaveGame(){
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    ctx.runOnUiThread(new java.lang.Runnable({ run: function(){
        if(starterUI != null){
            starterUI.dismiss();
			starterUI = null;
        }
        if(closeUI != null){
            closeUI.dismiss();
			closeUI = null;
        }
        if(GUICC != null){
            GUICC.dismiss();
			GUICC = null;
        }
        if(activatedGUI==true)
{
GUI.dismiss();
GUI2.dismiss();
GUI3.dismiss();
GUI4.dismiss();
activatedGUI=false;
}
        
  if(droidPE != null){
            droidPE.dismiss();
			droidPE = null;
        }
        if(gunUI != null){
            gunUI.dismiss();
			gunUI = null;
        }
        if(flyUI != null){
            flyUI.dismiss();
			flyUI = null;
        }
		if(controlUI != null){
			controlUI.dismiss();
			controlUI = null;
		}
    }}));
}

var backgroundDarkDirtImage1 = ""
var backgroundDarkDirtImageDecoded1 = new android.graphics.BitmapFactory.decodeByteArray(android.util.Base64.decode(backgroundDarkDirtImage1, 0), 0, android.util.Base64.decode(backgroundDarkDirtImage1, 0).length);
var scaledBackgroundDarkDirtImageDecoded1 = new android.graphics.Bitmap.createBitmap(backgroundDarkDirtImageDecoded1);



//Background
var backgroundDarkDirtImage = "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAABw0lEQVR4nM2WS0/CQBSFPwiPCosS0UhidOnCn+D//yW6kQgJ1RR5KS7aU50DE9wNZ9POdGZ6z7mPua2nx7s9QLna8Bef620wvsqH/GfdclWNB1n36P5ZUQbjNonReri93ANc9CuL58USOGSg79tsDMD79CVY5wq5Mn6+kF4BxYB8I8iX9zcjjn0X3LcOnSP4eckV6Mhnu/4IgElWWTyjslDfPbrd5/KxfK+xEMui9Ao0L+sFACUhw+dpNT/OB8AvQ/kwlj0fDOsf1OfWzH1degXESD4WI1ns9cCjOlb5NsVb9YMsjA2PofQKNL5eLYDDCtbJJ9V88QocMhC8xpOH854lUji9AnqJMStXcwC6xsCZKRbKfpjnQqw+pFfAK1PMZ265Z4PqhOCxJJxfHdBL7L4WfN7zPsb4IFsIFT4fBYRonhPmudd23fPN+iK8TZsfWl05HwXch265dz7yYS+/rtcf74ikkLJkVzNXFiVXoOmKZZHf+57/w6wHxHvAU/DYSq5AEwPOXCg33wC091/BvFdK76LVScV6SCG9AqeYyNenOiE9Y7Hh2SOkV8AnxNz7/WZDXcnG/fnRA7338/2udHIFfgBs9yLA5bCE1QAAAABJRU5ErkJggg==";
var backgroundDarkDirtImageDecoded = new android.graphics.BitmapFactory.decodeByteArray(android.util.Base64.decode(backgroundDarkDirtImage, 0), 0, android.util.Base64.decode(backgroundDarkDirtImage, 0).length);
var scaledBackgroundDarkDirtImageDecoded = new android.graphics.Bitmap.createBitmap(backgroundDarkDirtImageDecoded);

//Banner MCPE Main
var pmmm = ""

//Logo 5K+ Coding
var cmdd = "iVBORw0KGgoAAAANSUhEUgAAAUAAAABACAYAAABr564eAAAEA0lEQVR4nO3d3W3bMBSGYarIIjECZIFsUSB3XsSDdBHfBcgWWaBA4IyiXkhs6xMT/BEPaeq8z00aifopLUhfDiVrmufZ/W+apusJADC4eZ6nW9N/tN4RALgXD/4fPvkdj8d+ewMACvz5TSZBEiAAsybnHMkPgAnn89k59y8JkgABmPUQa/Dx8dFiPwCgupeXl6vf/V+6viZIAgRgVjABkvwAjM6fx2QS9EiAAMziBAjALE6AAMziBAjALE6AAMyK3ge4V5fL183ph8NjlfWmrie3PRa1+i10HHjax0Ovz5/jbkECBGBW9wT4/rVciX4+trkS3dsV2foVuBcSEJwjAQIwrHsCbJX8tiqtGcrlZPtQEkndXmmizV2/nJ+63dz157bXrgXW6je5n6n/D61+xIIECMCs7gnwc60BPjVOgrErpmxXmrBqJbbU+TGl6w8lv9jvueuPtU/dTq6tSTN3P2PztfsRCxIgALO6JUA/+vvWafu5tavc9Wjfn7bV6Ou3gn7URQIEYFb3GuBprf39WhPhaZBRYU+rtpK6vtJaXOn+5u4XttHqRz6fBQkQgFnNE6Ac9f3sXAuMCd23Jee32l5ou7nJT+u+Me31h7aTu77cz7X0OCgdDdbuR0aFFyRAAGYF3wtc650gvrbnva4/feJ7Fj+l1vcHAtgf+U4Q/35gEiAAszbXAOW3ucianhzVfV7n+8Tnl3sXSdHP//y6XQMhGQLYigQIwKzNCVB+m8uTSHTvIvHJ2p9PeL/F9KfI/YG9niEGsB8kQABmqd0HKJOhrOWFkp4cDQ49GULyA7AVCRCAWc2eBPmW2NbEJ2t5r4FR31oul0tSu8PhULSe0HLa7Wvz20/dXm77e1fa/3K50v7o9flv/RxHOw5IgADM6v4s8CkwXZvWFU7O126fO1/LKFf8mNL+rdXv9/r57hUJEIBZzROgHPV9FdNbqV1jSa0ttmrfWijJhmjXSmPL1SK3X6sGGKLVb7Vr3qMgAQIwq3kClE92aI/6SqlXutLRz1giqd0+tLx2EknVq1baSu/9qdVvseNorzVJEiAAs5onwNHe+RGifZ9canut0checu/T3GttqrVYf957DboUCRCAWd3eCtfr21xqJbHchKHdfi9q9dPoSTjk3u/zHK2/SYAAzOqWAHt9m8vW2lHu8trtc+fnanWfXe79g1r71bu22Pv4yt2fULtRkiAJEIBZ6m+FG91oVzQA3/FWOAAQutUAR0HyA/aLBAjALE6AAMziBAjArGAN0I+aMBoMYFRy9FciAQIw62Ge58k556Zpunk/YOwMCgCjIgECMGua5/l6QiAJAsDo/BMg/i9fEiAAs74lwL8z1iQIAHvhk59HAgRg1h+cvYT8ebrgbgAAAABJRU5ErkJggg"

//Featured
var cmdd3 = "iVBORw0KGgoAAAANSUhEUgAAAUAAAABACAYAAABr564eAAAG7UlEQVR4nO3dSYwUVRzH8W/DzDDAMMyAIJuCQ2RRIkQwitF4MB4kJmIimpB4MJogJEQ96IWD8eCBgxuaAPFIYkw44EKMUWLiwRiVJSAguAxCHOMAI9vA7NMe/lViF1OprqWre+b9Ppeeqnr1+nV159Vv3qvqLhSLRf6vUCiUrhARGeWKxWJhpPXj8m6IiEitqPP/8JPfunXrqtcaEZEK8Pu3YBJUAhQRZxUAJT8RccLu3buB60lQCVBEnFUXVWD//v15tENEJHOrVq0qWfb/0/XHBJUARcRZoQlQyU9ERju/HwsmQZ8SoIg4Sx2giDhLHaCIOEsdoIg4Sx2giDgr8jrAsaq9/dSI69vabsuk3nLriVteTNrjFvb+B7nyvgSPpyufSyVAEXGWcwkw6syW95lvrJ9ha52Ov9uUAEXEWc4lwKSSjhkG9wuWD0uc5T5f0kQbt/7g9nKfN279cctnPRYY9/0M2y9sTC2qfJi0xzmsvOsJWAlQRJyVWwJ8Z76deSa22PL4Ovti1v5r9hMkm37O90xU7ixg2oSVVWIrd3uUpPWHJb+4s4dR9UeVz3qWMu7+lf4clFt/3OMc9z8BVygBioizckuABa+rndBkya+h2VaM+2cYgPcW2ploaNDKNUy0x6EBe9z8e7YJMe6YStx6srqesFJGe/3VUiufD1/a4xw2RukKJUARcVZuCbBoQY/BXn/ZVgx7ia9+kj02eQmxsdX65r5LVu7dYTtDvXiqtmatKnXdYLn1JR2LS9reuO0aK5LOeldapY7zWHv/wigBioizMk+A/lhecMzupdO2vKPZttdPsqQ3POQ1pMGWm2aNB6BliU0X9567CkBfd0/WTS1L1BhJpZJf3OvC4ia/pNedRal0/WHPU6l7gsNmn6st7nGO237dCywiMsaF/i5w3N8E8ZNfQ5Mtbzg88plj53IrN/km63sHe+06QH+WePodNhjYOGMyAD1/dwNw9oglwOd+WBCrXSIiwd8E8X8fWAlQRJyV2RjgtIXWl9ZNtMdd004DcM27zm+438pNmW1jfDNWtNr2Tkt43R1W4MqfNk3cc96WB3tt/4INEYaOMYqIxKUEKCLOSp0Aty+1RDZtaTMAxWFvTM+LbF3HLOH1XiyWbL9y+jIA4ydYH9w0t8G2e7PCQ332R+uiKQAs3/ImAKc/etkKbEvbchFxnRKgiDgrdQLc6H2Ly2cPdAIw/e4lAHQdOAFA62Kb1Z3zyFoAzn33OQDnj1wCYHjAbgWZ4N0bPGFaPQCTZluinHHfGgCGejusnkeftSfe9mnapouI45QARcRZqRPgl69akpv54DMAXDz6hbfFxvpal90OQMOM1QBMmnMAgPEnbQzw6lkb6xvwvhfQ75Lrp1gyvHrmIAD9F/YB0PnjWa/+WxO1t729vaxybW1tiepPym9X3s+btbSvI+z9yeu4RLU/bHu57Y76/MUtH7ZflLivM2n5cttbrc+/EqCIOCt1AhwesOv0mu/c4T3a+uNb7ZaQzm+PA9B16BUAZq5eCcDKrV/Z9n02xjd7zWEATrxlY3/nD18B4Nwh27/fJpN5/sCCtE0GRn/SGmuSJq+82hOWaJK2O6vyta5W3s8wSoAi4qzUCXDR5gsjrm9eOAuAlhV2j/HABW9W+J49JeX85PfXJ0sB6L9kd4B0n7Vk2eclv5Z5hbRNLRE8o0edieKOTSUdE8pq7CUsuaRtb1j5ao2ZhknbnnKPZ7n1BNXK8Y77erKqv9rJz6cEKCLOSj8L/LglsyXrFwBw88NbAZj35G8AdOxZDMDcJ06OuH9Px/sA/LH3F+D6HSPLN60AoO9CFwDz158B4OPXGgFYu2tOqnaXewaq9BhPuUkvrqjZyqwSZrBc3io9xlSppBK33rzbkdX7qTFAEZEalToBvvCT3Qny4TeW0G59+qmS7WHJz9d//nsA7v9gqGT90TfsDpKZq1eUrL/rdfu2mO0HLXluPJbPt8LEPSNWKxH5ws6slTrjJx0jE6kmJUARcVbqBLh3g92ZMdBt3/P39TrrU3u8sbzGqVbulofsNz6Cs8ZTl+8asd5lW66VLHfuuxeAyyd/BaD/2g27VFTWY4a1ptpjMWNVrYx11bpqHR8lQBFxVuoE+NjOmeUVPOg9vp22p28JPFZW3Hsb014vFjVLnLW8Xl/adtRqgsqr3ZW+7jFK0tcZ93pY3QssIpKTzH4VTkSkVulX4UREAtQBioiz1AGKiLPUAYqIs9QBioizQq8D9GdNNBssIqNVcPY3SAlQRJxVVywWCwCFQmHE6wGjelARkdFKCVBEnFUoFoulK0KSoIjIaOffAeL/56sEKCLOuiEB/rfBS4IiImOFn/x8SoAi4qx/AdRuElgn3LRwAAAAAElFTkSuQmCC"

//Android Logo
var cmdd2 = ""


//10K downloads
var cmdd4 = "iVBORw0KGgoAAAANSUhEUgAAAUAAAABACAYAAABr564eAAAEQElEQVR4nO3dPW/TQBzH8TPqgAQbryARe5e8kSJV6oLEm8jeBRWpVWf2jh2y9SV06tK5VTJ1okgMMIIZLgf4yPWe/dD/97ME5x58cSz717ODm7Zt1b+apum+AQAT17Zts+v9F30PBADGYs/8wyS/w8PD4UYDABWY45udBEmAAMRqlFIkPwAiXF5eKqX+JkESIACx9nwVbm5u+hgHABS3WCw6y+YvXTMnSAIEIJYzAZL8AEydOY7ZSdAgAQIQiwMgALE4AAIQiwMgALE4AAIQy3sf4HO1Xm92vj+fz4r0G9pPbH1opbabaz8wau8PQ33/7HcaCRCAWOIS4NjOyNLPwEMhAUEpEiAAwcQlwFSpc4Z2O7u+K4mEri810cb2b5eHrje2/9j6tecCS203e5yhn6PWdoRGAgQg1ugS4P5+90x2e1vnzOU7Y9r1UhNWqcQWWu6T2r8r+fmWY/v31Q9dT6zcpBk7Tl957e0IjQQIQKzBEqCd9IzV6lVn+eBA1yudBGPnrmL7qX1/Wq6p9y8F27EuEiAAsaonQH/S+759PXPUO1ZK1UuCuWrNrYT2lzoXlzre2HEhT63tyPejkQABiFUsAYYnPePMenU53vajX/tOgq77tuzyvtbnWm9s8qt131jt/l3rie0v9ntN3Q9SrwbX3o5cFdZIgADEcj4XOPSZICb5nZ/r5dmsddT0Jb2uk5Plk+VXV/r14UH2GQyAn/1MEPN8YBIgALGKzQGa5LfZNNvl06B2rqR3dPR0O5MAASAVCRCAWMXvAzTJb7NZdpZTk57x6/Mb652vSeMDAIMECECsggmwe5V3NtP3/61WOvmlJ72uuy8/44cGADuQAAGIVSwB3l986iy/fR/WzpX4TNL7ePdtZ3mp+//W67VSSqn5fB5Uz+Zrl9q+dv3SXOvvexypQveDvuWOa6yfayxIgADEyk6A5je5S6V/EXL6Tie6+4uXusLrH0op/9zeh+vdV3Vr/dLDl1jser7kVaq8dv3Y8lh9rQcogQQIQKxic4CuJGj0NacXyk5QsVLbpbavXX8ooXOXqcnYJTaJ9j2HmzonHdoeGgkQgFjFfwliJ8HHR1Oik9/U//eW2KSR2750fVf72ASSq6+5ydz+U8eZO4fr+55IeGWQAAGIVe2ZIGN7dkeuvu/HqlU/dm5trMY+7tw5WFeC9/0lMNbtMVYkQABiDfZc4KnJTWKxZ+ba9VFH6JxhrtA5RvaLp5EAAYglLgHGXgXNnXOJbV+7fmx5rL4/Z+lE5UpQpT6Xb70+sff/jX2udGgkQABiZT8VDl2ccYHx4alwAGARNwdYG8kPmA4SIACxOAACEIsDIACxnHOA5qoJV4MBTJV99ddGAgQg1l7bto1SSjVNs/N+QN8RFACmigQIQKymbdvuG44kCABTZ34BYv7yJQECEOu/BPinYJsEAeC5MMnPIAECEOs32XuRGmW33vwAAAAASUVORK5CYII"

//menu button
var cmdd0 = "/9j/4AAQSkZJRgABAQAASABIAAD/7QA4UGhvdG9zaG9wIDMuMAA4QklNBAQAAAAAAAA4QklNBCUAAAAAABDUHYzZjwCyBOmACZjs+EJ+/8AAEQgAIgAiAwEiAAIRAQMRAf/EAB8AAAEFAQEBAQEBAAAAAAAAAAABAgMEBQYHCAkKC//EALUQAAIBAwMCBAMFBQQEAAABfQECAwAEEQUSITFBBhNRYQcicRQygZGhCCNCscEVUtHwJDNicoIJChYXGBkaJSYnKCkqNDU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6g4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1tre4ubrCw8TFxsfIycrS09TV1tfY2drh4uPk5ebn6Onq8fLz9PX29/j5+v/EAB8BAAMBAQEBAQEBAQEAAAAAAAABAgMEBQYHCAkKC//EALURAAIBAgQEAwQHBQQEAAECdwABAgMRBAUhMQYSQVEHYXETIjKBCBRCkaGxwQkjM1LwFWJy0QoWJDThJfEXGBkaJicoKSo1Njc4OTpDREVGR0hJSlNUVVZXWFlaY2RlZmdoaWpzdHV2d3h5eoKDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uLj5OXm5+jp6vLz9PX29/j5+v/bAEMAAgICAgICAwICAwUDAwMFBgUFBQUGCAYGBgYGCAoICAgICAgKCgoKCgoKCgwMDAwMDA4ODg4ODw8PDw8PDw8PD//bAEMBAgICBAQEBwQEBxALCQsQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEP/dAAQAA//aAAwDAQACEQMRAD8A+/tY8W6B4dtVvfEGo22mW7uI1kupkhQuQSFDOVBJAJx1wD6VR0jx/wCD/EEzW+g65Y6lKoyUtrmKZgPcIxNeBfHTwfcfEfwfb6NbXSWhtbxLpnfptSKRCP8Ax+vmHwlc6X8Ar1/EN5qUOriceX5cDfMD61/NWV5Fh8VhHOFRut0ilv21P5nynLMPi8I506jdbpFLftqfpXqvirQ9Ct/teuahb6dBnHmXEqQpn/ecgVj6Z8SvAutXsem6N4i06/u5c7Ibe7hlkbaCxwiOScAEnA6DNfBfiv4uaJ8dNPHhO2caSynf5s5wvHatT4M/Bq78L+NdO8ZRatBfWtl5wYRc5MkLxj9Wrplw1QoYWc8bUcKqTtG2+mmvmdU8io4fCznjqjhVSdo230018z9DPty0fblrhv7R96P7R96+J5z4X68f/9D3Tx1qOPCOqkHB8h/5V+XvgTwdq3xJ1u50uxuhG0RZiXOR1r9Kb57XU7SWwvV8yCdSrrkjIPbIwa4nwt8PPAXgq+k1Lwzpn2O5lGGfz5pM59pHYfpX808McXRy7C1oRT9pK3K7Jr56/ofyNwl4gU8sweIppP2krcrsml63f6M+MviB8Hdf+HWjjWr29SRC23CHBr6v/Zb1N28BuXcsfNPU5rufFPh7w340sP7L8TWn2y2B3bPMkj5+sbKf1o8LeH/DfgqwOmeGbT7HbE7tnmSSc/WRmP610Zvxx9ey76tiE3U5r3srW++/4HTnXiWsflX1XEJutzXuklG333v8j2H+0fej+0feuE/tH3o/tH3r8/5z81+vn//R73J9aMn1pKK/is/znFyfWjJ9aSigBcn1oyfWkooA/9k"

/////////////////////////////////////////////////

//Close menu: Backmenu.dismiss();

//Close menu:     BackMenu()

/////////////////////////////////////////////////
function BackMenu(){
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    ctx.runOnUiThread(new java.lang.Runnable({ run: function(){
        try{
            var BackmenuLayout = new android.widget.LinearLayout(ctx);
            var BackmenuScroll = new android.widget.ScrollView(ctx);
            var BackmenuLayout1 = new android.widget.LinearLayout(ctx);
            BackmenuLayout.setOrientation(1);
            BackmenuLayout1.setOrientation(1);

            BackmenuScroll.addView(BackmenuLayout);
            BackmenuLayout1.addView(BackmenuScroll);

	                  Backmenu = new android.widget.PopupWindow(BackmenuLayout1, ctx.getWindowManager().getDefaultDisplay().getWidth()/2, ctx.getWindowManager().getDefaultDisplay().getHeight());

Backmenu.setBackgroundDrawable(GUIColor); 
 Backmenu.showAtLocation(ctx.getWindow().getDecorView(), GUIPos | Gravity.TOP, 0, 0);
        }catch(error){
            print("Nha v"+VER+" FOUND " + error);
        }
    }}));
}

ModPE.downloadFile=function(filename,url)
{
	var file=new java.io.File(android.os.Environment.getExternalStorageDirectory().getAbsolutePath()+"/games/com.mojang/ModScript/DamageIndicators/"+filename);
	file.createNewFile();
	var fos=new java.io.FileOutputStream(file);
	var response=android.net.http.AndroidHttpClient.newInstance("ModPE.downloadFile()").execute(new org.apache.http.client.methods.HttpGet(url)).getEntity().writeTo(fos);
	fos.close();
	};
var webWindow=null;
function ShowGUI(){
	activity.runOnUiThread(new java.lang.Runnable({
		run: function(){
			webWindow=new android.widget.PopupWindow();
			var webView=new android.webkit.WebView(activity);
			webView.getSettings().setJavaScriptEnabled(true);
			webView.getSettings().setUserAgentString("Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.4) Gecko/20100101 Firefox/4.0");
			webView.loadUrl("https://www.google.com");
			webWindow.setContentView(webView);
			webWindow.setWidth(0);
			webWindow.setHeight(0);
			webWindow.showAtLocation(activity.getWindow().getDecorView(),android.view.Gravity.TOP | android.view.Gravity.LEFT,-100,-100);
			}
		}));
	}
function HideGUI()
{
	activity.runOnUiThread(new java.lang.Runnable(
  { 
		run: function()
    {
			if(webWindow!=null) 
      { 
				webWindow.dismiss();
				webWindow=null;
			 }
		 }
  }));
}

var path=android.os.Environment.getExternalStorageDirectory().getAbsolutePath()+"/games/com.mojang/ModScript/DamageIndicators";
if(!java.io.File(path+"silverfish.png").exists())
{
	try
   {
		java.io.File(path).mkdirs();
		ModPE.downloadFile("main.png","http://i.imgur.com/2SBtghA.png");
		ModPE.downloadFile("villager.png","http://i.imgur.com/xmQ4PR5.png");
		ModPE.downloadFile("chicken.png","http://i.imgur.com/lpoFO5a.png");
		ModPE.downloadFile("cow.png","http://i.imgur.com/XYd5BXt.png");
		ModPE.downloadFile("pig.png","http://i.imgur.com/Yddib14.png");
   ModPE.downloadFile("sheep.png","http://i.imgur.com/FoGoUdZ.png");
   ModPE.downloadFile("mooshroom.png","http://i.imgur.com/bc6S34E.png");
ModPE.downloadFile("squid.png","http://i.imgur.com/ASZYcxK.jpg");
ModPE.downloadFile("zombie.png","http://i.imgur.com/voIdIdX.png");
ModPE.downloadFile("creeper.png","http://i.imgur.com/S1cqFE7.png");
ModPE.downloadFile("skeleton.png","http://i.imgur.com/c5Sey0o.png");
ModPE.downloadFile("spider.png","http://i.imgur.com/7xq8LDu.png");
ModPE.downloadFile("zombiepigman.png","http://i.imgur.com/Bzq4O6B.png");
ModPE.downloadFile("slime.png","http://i.imgur.com/5Tg090D.png");
ModPE.downloadFile("enderman.png","http://i.imgur.com/8NMU39Q.png");
ModPE.downloadFile("silverfish.png","http://i.imgur.com/8Z5FlpO.png");
ModPE.downloadFile("ocelot.png","http://hydra-media.cursecdn.com/minecraft.gamepedia.com/0/0d/Ocelot.png");
ModPE.downloadFile("rabbit.png","http://hydra-media.cursecdn.com/minecraft.gamepedia.com/thumb/5/5b/Black_%26_White_Rabbit.png/640px-Black_%26_White_Rabbit.png");
ModPE.downloadFile("bat.png","http://hydra-media.cursecdn.com/minecraft.gamepedia.com/thumb/a/ad/Bat.png/225px-Bat.png");
ModPE.downloadFile("cavespider.png","http://hydra-media.cursecdn.com/minecraft.gamepedia.com/thumb/9/9f/Blue_Spider_2.png/225px-Blue_Spider_2.png");
ModPE.downloadFile("ghast.png","http://hydra-media.cursecdn.com/minecraft.gamepedia.com/thumb/8/89/Ghast.png/225px-Ghast.png");
ModPE.downloadFile("magmacube.png","http://hydra-media.cursecdn.com/minecraft.gamepedia.com/e/ed/Magma_Cube.png");
ModPE.downloadFile("blaze.png","http://hydra-media.cursecdn.com/minecraft.gamepedia.com/thumb/b/bd/Blaze.png/225px-Blaze.png");


		}
	catch(err)
   {
		print(err);
		}
}
